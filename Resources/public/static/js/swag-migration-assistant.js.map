{"version":3,"file":"static/js/swag-migration-assistant.js","mappings":"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B,KAAM,CACF00B,WAAY,oBACZ5iB,eAAgB,GAChB6iB,UAAW,OACf,CACJ,EACA7iB,eAAgB,CACZ2iB,KAAM,kBACND,UAAW,2BACXx0B,KAAM,CACF00B,WAAY,oBACZ5iB,eAAgB,GAChB6iB,UAAW,OACf,CACJ,EACAI,QAAS,CACLN,KAAM,UACND,UAAW,yBACXK,SAAU,CACNG,OAAQ,CACJP,KAAM,aACND,UAAW,gCACXx0B,KAAM,CACF00B,WAAY,oBACZC,UAAW,OACf,CACJ,CACJ,EACA30B,KAAM,CACF00B,WAAY,oBACZC,UAAW,OACf,CACJ,EACAM,aAAc,CACVR,KAAM,eACND,UAAW,+BACXx0B,KAAM,CACF00B,WAAY,oBACZC,UAAW,OACf,CACJ,CACJ,CACJ,EACAO,cAAe,CACXT,KAAM,gBACND,UAAW,gCACXx0B,KAAM,CACF00B,WAAY,oBACZC,UAAW,OACf,CACJ,EACAQ,OAAQ,CACJX,UAAW,wBACXC,KAAM,SACNG,SAAU,CAAE/5B,KAAM,oCAAqC,EACvDg6B,SAAU,CACN/G,aAAc,CACV2G,KAAM,eACND,UAAW,0CACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACAjG,oBAAqB,CACjB+F,KAAM,uBACND,UAAW,kDACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACA5G,iBAAkB,CACd0G,KAAM,oBACND,UAAW,+CACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACA3G,iBAAkB,CACdyG,KAAM,oBACND,UAAW,+CACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACA1hB,mBAAoB,CAChBwhB,KAAM,sBACND,UAAW,iDACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACAr1B,YAAa,CACTm1B,KAAM,cACND,UAAW,yCACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACAtH,mBAAoB,CAChBoH,KAAM,sBACND,UAAW,iDACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,EACArH,iBAAkB,CACdmH,KAAM,oBACND,UAAW,+CACXx0B,KAAM,CACF20B,UAAW,OACf,CACJ,CACJ,EACA30B,KAAM,CACF20B,UAAW,OACf,CACJ,CACJ,EAEAS,aAAc,CACVvsB,MAAO,UACP0lB,GAAI,uBACJ8G,cAAe,+BACfV,UAAW,OACf,CACJ,GC3KA,IAAMW,GAAa56B,SAASyE,OAAO,CAACm2B,UAAU,CAyT9C,OApTA,cAAkCA,GAC9B5rB,YAAY6rB,CAAU,CAAEC,CAAY,CAAEC,EAAc,WAAW,CAAE,CAC7D,KAAK,CAACF,EAAYC,EAAcC,GAChC,IAAI,CAACC,WAAW,CAAG,CACfC,QAAS,IACTzkB,QAASxW,SAASoV,OAAO,CAACC,GAAG,CAAC6lB,UAAU,CAEhD,CAEAhiB,4BAA4B7B,CAAY,CAAEa,CAAgB,CAAEijB,EAAoB,CAAC,CAAC,CAAE,CAChF,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,8BAA8B,CAAC,CAAE,CAC1FtM,aAAAA,EACAa,iBAAAA,CACJ,EAAG,CACC,GAAG,IAAI,CAAC8iB,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAmgB,gBAAgBlZ,CAAY,CAAE8jB,EAAoB,CAAC,CAAC,CAAE,CAClD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,iBAAiB,CAAC,CAAE,CAAEtM,aAAAA,CAAa,EAAG,CAC/F,GAAG,IAAI,CAAC2jB,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAorB,iBAAiBnkB,CAAY,CAAE8jB,EAAoB,CAAC,CAAC,CAAE,CACnD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACluB,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACgX,cAAc,GAAG,eAAe,CAAC,CAAE,CAC1E,GAAG,IAAI,CAACqX,WAAW,CACnBrrB,OAAQ,CACJ0H,aAAAA,CACJ,EACA+jB,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAyc,gBAAgBxV,CAAY,CAAE0C,CAAgB,CAAE,CAK5C,IAAMqhB,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,iBAAiB,CAAC,CANhE,CACXtM,aAAAA,EACA0C,iBAAAA,CACJ,EAGyF,CACrF,GAAG,IAAI,CAACihB,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAqrB,UAAUC,EAAmB,CAAC,CAAC,CAAEP,EAAoB,CAAC,CAAC,CAAE,CAErD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,WAAW,CAAC,CAH1D+X,EAGoE,CAC/E,GAAG,IAAI,CAACV,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAD,oBAAoBsY,CAAO,CAAE0S,EAAoB,CAAC,CAAC,CAAE,CACjD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,sBAAsB,CAAC,CAAE,CAClF8E,QAAAA,CACJ,EAAG,CACC,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAC,yBAAyBoY,CAAO,CAAE0S,EAAoB,CAAC,CAAC,CAAE,CACtD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,4BAA4B,CAAC,CAAE,CACxF8E,QAAAA,CACJ,EAAG,CACC,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAurB,UAAUD,EAAmB,CAAC,CAAC,CAAEP,EAAoB,CAAE,CAAC,CAAE,CAEtD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,WAAW,CAAC,CAH1D+X,EAGoE,CAC/E,GAAG,IAAI,CAACV,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAwrB,aAAaF,EAAmB,CAAC,CAAC,CAAEP,EAAoB,CAAC,CAAC,CAAE,CAExD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,cAAc,CAAC,CAH7D+X,EAGuE,CAClF,GAAG,IAAI,CAACV,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAmc,SAASmP,EAAmB,CAAC,CAAC,CAAEP,EAAoB,CAAC,CAAC,CAAE,CAEpD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,UAAU,CAAC,CAHzD+X,EAGmE,CAC9E,GAAG,IAAI,CAACV,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAod,kBAAkB/E,CAAO,CAAE,CACvB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,mBAAmB,CAAC,CAAE,CAAE8E,QAAAA,CAAQ,EAAG,CAC5F,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAkhB,eAAe7I,CAAO,CAAE,CACpB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,gBAAgB,CAAC,CAAE,CAAE8E,QAAAA,CAAQ,EAAG,CACzF,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAG,gBAAgBkY,CAAO,CAAE,CACrB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,iBAAiB,CAAC,CAAE,CAAE8E,QAAAA,CAAQ,EAAG,CAC1F,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAme,aAAa9F,CAAO,CAAE,CAClB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,cAAc,CAAC,CAAE,CAAE8E,QAAAA,CAAQ,EAAG,CACvF,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAuN,mBAAmB8K,CAAO,CAAE,CACxB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,oBAAoB,CAAC,CAAE,CAAE8E,QAAAA,CAAQ,EAAG,CAC7F,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAygB,gBAAgBpI,CAAO,CAAEjN,CAAU,CAAE,CACjC,IAAM4f,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,iBAAiB,CAAC,CAAE,CAAE8E,QAAAA,EAASjN,WAAAA,CAAW,EAAG,CACtG,GAAG,IAAI,CAACwf,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAonB,aAAc,CACV,IAAM4D,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACluB,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACgX,cAAc,GAAG,aAAa,CAAC,CAAE,CACxE,GAAG,IAAI,CAACqX,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEA+nB,YAAY9f,CAAW,CAAE,CACrB,IAAM+iB,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACluB,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACgX,cAAc,GAAG,aAAa,CAAC,CAAE,CACxE,GAAG,IAAI,CAACqX,WAAW,CACnBrrB,OAAQ,CACJ0I,YAAAA,CACJ,EACA+iB,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAgI,sBAAsBC,CAAW,CAAEC,CAAW,CAAE,CAC5C,IAAM8iB,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACluB,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACgX,cAAc,GAAG,wBAAwB,CAAC,CAAE,CACnF,GAAG,IAAI,CAACqX,WAAW,CACnBrrB,OAAQ,CACJ0I,YAAAA,EACAC,YAAAA,CACJ,EACA8iB,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEA8V,oBAAoBuC,CAAO,CAAE,CACzB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACluB,GAAG,CAAC,CAAC,EAAE,IAAI,CAACgX,cAAc,GAAG,wBAAwB,CAAC,CAAE,CAC3E,GAAG,IAAI,CAACqX,WAAW,CACnBrrB,OAAQ,CACJ8Y,QAAAA,CACJ,EACA2S,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAuU,eAAe8D,CAAO,CAAE,CACpB,IAAM2S,EAAU,IAAI,CAACC,eAAe,GAEpC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,kBAAkB,CAAC,CAAE,CAC9E8E,QAAAA,CACJ,EAAG,CACC,GAAG,IAAI,CAACuS,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAiJ,eAAehC,CAAY,CAAE8jB,EAAoB,CAAC,CAAC,CAAE,CACjD,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAErC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,gBAAgB,CAAC,CAAE,CAC5EtM,aAAAA,CACJ,EAAG,CACC,GAAG,IAAI,CAAC2jB,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CAEAyrB,SAASV,EAAoB,CAAC,CAAC,CAAE,CAC7B,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GACrC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,gBAAiB,CACzC,GAAG,IAAI,CAACN,WAAW,CACnBI,QAAAA,CACJ,EACJ,CAEA7hB,qBAAqB4hB,EAAoB,CAAC,CAAC,CAAE,CACzC,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GACrC,OAAO,IAAI,CAACN,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,uBAAuB,CAAC,CAAE,CACnF,GAAG,IAAI,CAACqX,WAAW,CACnBI,QAAAA,CACJ,EACJ,CAEA7X,kBAAkB4X,EAAoB,CAAC,CAAC,CAAE,CACtC,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GACrC,OAAO,IAAI,CAACN,UAAU,CAACluB,GAAG,CAAC,CAAC,QAAQ,EAAE,IAAI,CAACgX,cAAc,GAAG,oBAAoB,CAAC,CAAE,CAC/E,GAAG,IAAI,CAACqX,WAAW,CACnBI,QAAAA,CACJ,EACJ,CACJ,ECvTA,GAAM,CAAE/sB,MAAK,GAAE,CAAGrO,SACZ,CAAE2T,SAAQ,GAAE,CAAG3T,SAAS4T,IAAI,CAqDlC,OAhDA,MACI5E,YAAYC,CAAgB,CAAEgF,CAAiB,CAAE7P,CAAO,CAAE,CACtD,IAAI,CAAC8K,iBAAiB,CAAGD,EACzB,IAAI,CAAC6sB,kCAAkC,CAAG7nB,EAAkB7S,MAAM,CAAC,kCACnE,IAAI,CAAC26B,QAAQ,CAAG33B,CACpB,CAEAoV,kBAAmB,CACf,OAAO,IAAIhK,QAAQ,CAAC7P,EAAS8P,KACzBpB,GAAM2B,MAAM,CAAC,wCAAyC,EAAE,EACxD3B,GAAM2B,MAAM,CAAC,kDAAmD,CAAC,GACjE,IAAM2H,EAAW,IAAIhE,GAAS,EAAG,GAEjC,IAAI,CAACmoB,kCAAkC,CAAChkB,MAAM,CAACH,EAAU,IAAI,CAACokB,QAAQ,EAAE16B,IAAI,CAAC,IACzE,GAAI26B,IAAAA,EAASv5B,MAAM,CAEf,OADAgN,IACO,KAGX,IAAM4H,EAAe2kB,EAAShkB,KAAK,GAAGid,oBAAoB,QAE1D,OAAI5d,GACA5H,IACO,OAGXpB,GAAM2B,MAAM,CAAC,wCAAyCqH,GAC/CA,EACX,GAAGhW,IAAI,CAAC,IACJ,GAAIgW,OAAAA,EAAuB,CACvB5H,IACA,MACJ,CAEA,IAAI,CAACP,iBAAiB,CAACqhB,eAAe,CAAClZ,GAClChW,IAAI,CAAC,IACFgN,GAAM2B,MAAM,CAAC,kDAAmDwgB,GAChE7wB,GACJ,GAAGmE,KAAK,CAAC,KACL2L,GACJ,EACR,GAAG3L,KAAK,CAAC,KACL2L,GACJ,EACJ,EACJ,CACJ,ECpDA,GAAM,CAAEpB,MAAK,GAAE,CAAGrO,SAkClB,OA7BA,MACIgP,YAAYC,CAAgB,CAAE,CAC1B,IAAI,CAACC,iBAAiB,CAAGD,EACzB,IAAI,CAACE,sBAAsB,CAAGd,GAAM1B,GAAG,CAAC,wBAC5C,CAEAsV,aAAc,CACV,OAAO,IAAIzS,QAAQ,CAAC7P,EAAS8P,KACzB,IAAM4H,EAAe,IAAI,CAAClI,sBAAsB,CAACkI,YAAY,CAE7D,GAAIA,KAAiBxU,IAAjBwU,EAA4B,CAC5B1X,IACA,MACJ,CAEA,IAAI,CAACuP,iBAAiB,CAACssB,gBAAgB,CAACnkB,GAAchW,IAAI,CAAC,IACvDgN,GAAM2B,MAAM,CAAC,iCAAkC,EAAE,EACjD3B,GAAM2B,MAAM,CAAC,6CAA8CisB,GAC3D,IAAMC,EAAcD,EAAchxB,MAAM,CAACiP,GAAaA,EAAUE,iBAAiB,EAC5Enb,GAAG,CAACib,GAAaA,EAAUpa,EAAE,EAClCuO,GAAM2B,MAAM,CAAC,uCAAwCksB,GACrDv8B,GACJ,GAAGmE,KAAK,CAAC,KACL2L,GACJ,EACJ,EACJ,CACJ,EChCA,IAAMmrB,GAAa56B,SAASyE,OAAO,CAACm2B,UAAU,CAoC9C,OA/BA,cAA0CA,GACtC5rB,YAAY6rB,CAAU,CAAEC,CAAY,CAAEC,EAAc,WAAW,CAAE,CAC7D,KAAK,CAACF,EAAYC,EAAcC,GAChC,IAAI,CAACC,WAAW,CAAG,CACfC,QAAS,GACb,CACJ,CAEAY,SAASM,EAAc,IAAI,CAAE3R,EAAS,IAAI,CAAE4R,EAAY,IAAI,CAAEjB,EAAoB,CAAC,CAAC,CAAE,CAClF,IAAMC,EAAU,IAAI,CAACC,eAAe,CAACF,GAE/BxrB,EAAS,CAAC,EAWhB,aAVIwsB,GACAxsB,CAAAA,EAAOwsB,WAAW,CAAGA,CAAU,QAE/B3R,GACA7a,CAAAA,EAAO6a,MAAM,CAAGA,CAAK,QAErB4R,GACAzsB,CAAAA,EAAOysB,SAAS,CAAGA,CAAQ,EAGxB,IAAI,CAACvB,UAAU,CAACS,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC3X,cAAc,GAAG,SAAS,CAAC,CAAEhU,EAAQ,CAC7E,GAAG,IAAI,CAACqrB,WAAW,CACnBI,QAAAA,CACJ,GAAG/5B,IAAI,CAAC,GACGu5B,GAAWW,cAAc,CAACnrB,GAEzC,CACJ,EC7BA,GAAM,CAAE0X,YAAW,GAAE,CAAG9nB,SAExB8nB,GAAYuU,kBAAkB,CAAC,mBAAoB,GAExC,IAAIC,GAAoBC,GADGC,YAAY,CAAC,QACF3B,UAAU,CAAE4B,EAAU3B,YAAY,GAGnFhT,GAAYuU,kBAAkB,CAAC,0BAA2B,GAC/C,IAAIK,GACPD,EAAUxtB,gBAAgB,CAC1BwtB,EAAUxoB,iBAAiB,CAC3BjU,SAASoV,OAAO,CAACC,GAAG,GAI5ByS,GAAYuU,kBAAkB,CAAC,qBAAsB,GAC1C,IAAIM,GAAmBF,EAAUxtB,gBAAgB,GAG5D6Y,GAAYuU,kBAAkB,CAAC,8BAA+B,GAEnD,IAAIO,GAA4BL,GADLC,YAAY,CAAC,QACM3B,UAAU,CAAE4B,EAAU3B,YAAY,GCU3F,OAjCA,MAII9rB,YAAY6tB,CAAkB,CAAE,CAC5B,IAAI,CAACC,mBAAmB,CAAGD,CAC/B,CAEAzc,OAAQ,CACJ,OAAO,IAAI5Q,QAAQ,MAAO7P,IACtB,IAAIo9B,EAAU,GACVC,EAAa,CAAC,EAClB,KAAOD,GAEH,MAAM,IAAI,CAACD,mBAAmB,CAACjB,QAAQ,CACnCmB,EAAWb,WAAW,CACtBa,EAAWxS,MAAM,CACjBwS,EAAWZ,SAAS,EAEtB/6B,IAAI,CAAC,IACH,GAAIk1B,KAAgB1zB,IAAhB0zB,EAAO0G,IAAI,EAAkB1G,CAAgB,IAAhBA,EAAO0G,IAAI,CAAW,CACnDF,EAAU,GACV,MACJ,CAEAC,EAAazG,CACjB,GAEJ52B,GACJ,EACJ,CACJ,EC/BA,GAAM,CAAEmoB,YAAW,GAAE,CAAG9nB,SAExB8nB,GAAYuU,kBAAkB,CAAC,yBAA0B,GAC9C,IAAI9Q,GACPkR,EAAUxtB,gBAAgB,CAC1BwtB,EAAUS,8BAA8B,GAIhDpV,GAAYuU,kBAAkB,CAAC,iCAAkC,GACtD,IAAIc,GACPV,EAAUW,2BAA2B,G","sources":["webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/ sync \\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/worker-notification.init.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/mixin/swag-wizard.mixin.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-credential-form/swag-migration-profile-shopware-api-credential-form.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/api/swag-migration-profile-shopware-api-page-information/swag-migration-profile-shopware-api-page-information.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware/local/swag-migration-profile-shopware-local-credential-form/swag-migration-profile-shopware-local-credential-form.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-credential-form/swag-migration-profile-shopware6-api-credential-form.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.scss?fdfc","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.scss?297d","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.scss?4826","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.scss?ad5a","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.scss?035e","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.scss?457d","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.scss?7200","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.scss?00e9","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.scss?ea00","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.scss?2412","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.scss?7de4","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.scss?12b9","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.scss?966d","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.scss?9c3f","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.scss?62db","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.scss?7734","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.scss?d00f","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.scss?a4df","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.scss?cfba","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.scss?995c","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.scss?ab0c","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.scss?2fab","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.scss?e1bd","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.scss?557d","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.scss?ea6e","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.scss?c7e3","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.scss?db90","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.scss?5f56","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/profile/shopware6/api/swag-migration-profile-shopware6-api-page-information/swag-migration-profile-shopware6-api-page-information.scss?0327","webpack://administration/./node_modules/vue-style-loader/lib/listToStyles.js","webpack://administration/./node_modules/vue-style-loader/lib/addStylesClient.js","webpack://administration/webpack/bootstrap","webpack://administration/webpack/runtime/define property getters","webpack://administration/webpack/runtime/hasOwnProperty shorthand","webpack://administration/webpack/runtime/make namespace object","webpack://administration/webpack/runtime/publicPath","webpack://administration/data:text/javascript;charset=utf-8;base64,CiAgICAgICAgICAgIF9fd2VicGFja19wdWJsaWNfcGF0aF9fID0gd2luZG93Ll9fc3dfXy5hc3NldFBhdGggKyAnL2J1bmRsZXMvc3dhZ21pZ3JhdGlvbmFzc2lzdGFudC8nOwogICAgICAgIA==","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-extended/swag-migration-grid-extended.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-history-selected-data/swag-migration-history-selected-data.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-status-manager.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen/swag-migration-loading-screen.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-result-screen/swag-migration-result-screen.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-takeover/swag-migration-loading-screen-takeover.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-loading-screen-connection-lost/swag-migration-loading-screen-connection-lost.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/loading-screen/swag-migration-pause-screen/swag-migration-pause-screen.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-shop-information/swag-migration-shop-information.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-data-selector/swag-migration-data-selector.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationUI.store.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-premapping/swag-migration-premapping.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-progress-bar/swag-migration-progress-bar.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-assistant/swag-migration-assistant.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-confirm-warning/swag-migration-confirm-warning.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/card/swag-migration-media-process/swag-migration-media-process.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card/swag-migration-tab-card.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-tab-card-item/swag-migration-tab-card-item.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-grid-selection/swag-migration-grid-selection.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-expand-div/swag-migration-expand-div.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-shop-avatar/swag-migration-shop-avatar.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-settings-icon/swag-migration-settings-icon.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/component/swag-migration-dashboard-card/swag-migration-dashboard-card.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-index/swag-migration-index.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-empty-screen/swag-migration-empty-screen.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-main-page/swag-migration-main-page.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history/swag-migration-history.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail/swag-migration-history-detail.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-errors/swag-migration-history-detail-errors.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-history-detail-data/swag-migration-history-detail-data.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/storage-broadcaster.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker-request.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-worker.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/swag-migration-process-screen/swag-migration-process-screen.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard/swag-migration-wizard.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-introduction/swag-migration-wizard-page-introduction.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-installation/swag-migration-wizard-page-profile-installation.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-select/swag-migration-wizard-page-connection-select.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-connection-create/swag-migration-wizard-page-connection-create.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-profile-information/swag-migration-wizard-page-profile-information.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials/swag-migration-wizard-page-credentials.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-success/swag-migration-wizard-page-credentials-success.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/page/wizard/swag-migration-wizard-page-credentials-error/swag-migration-wizard-page-credentials-error.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/extension/sw-dashboard-index/sw-dashboard-index.html.twig","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/data/migrationProcess.store.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/module/swag-migration/index.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration.api.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-process-store-init.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-ui-store-init.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/api/swag-migration-indexing.api.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/api-service.init.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/core/service/migration/swag-migration-indexing-worker.service.js","webpack://administration/../../../../../custom/plugins/SwagMigrationAssistant/Resources/app/administration/src/init/migration-worker-service.init.js"],"sourcesContent":["var map = {\n\t\"./shopware/api/swag-migration-profile-shopware-api-credential-form/index.js\": 2875,\n\t\"./shopware/api/swag-migration-profile-shopware-api-page-information/index.js\": 7610,\n\t\"./shopware/local/swag-migration-profile-shopware-local-credential-form/index.js\": 8802,\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-credential-form/index.js\": 2147,\n\t\"./shopware54/api/swag-migration-profile-shopware54-api-page-information/index.js\": 7873,\n\t\"./shopware54/local/swag-migration-profile-shopware54-local-credential-form/index.js\": 1487,\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-credential-form/index.js\": 3622,\n\t\"./shopware55/api/swag-migration-profile-shopware55-api-page-information/index.js\": 7663,\n\t\"./shopware55/local/swag-migration-profile-shopware55-local-credential-form/index.js\": 2913,\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-credential-form/index.js\": 8596,\n\t\"./shopware56/api/swag-migration-profile-shopware56-api-page-information/index.js\": 1671,\n\t\"./shopware56/local/swag-migration-profile-shopware56-local-credential-form/index.js\": 483,\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-credential-form/index.js\": 1985,\n\t\"./shopware57/api/swag-migration-profile-shopware57-api-page-information/index.js\": 8717,\n\t\"./shopware57/local/swag-migration-profile-shopware57-local-credential-form/index.js\": 3623,\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-credential-form/index.js\": 2024,\n\t\"./shopware6/api/swag-migration-profile-shopware6-api-page-information/index.js\": 291\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2904;","let notificationId = null;\n\nShopware.WorkerNotification.register('newsletterRecipientTask', {\n    name: 'SwagMigrationAssistant\\\\Migration\\\\MessageQueue\\\\Message\\\\ProcessMediaMessage',\n    fn: onMediaProcessingMessageFound,\n});\n\n/**\n * @package services-settings\n */\nfunction onMediaProcessingMessageFound(next, { $root, entry, notification }) {\n    const mediaFileCount = entry.size * 5;\n\n    // Create notification config object\n    const config = {\n        title: $root.$t('swag-migration.worker-listener.mediaProcessing.title'),\n        message: $root.$tc(\n            'swag-migration.worker-listener.mediaProcessing.message',\n            mediaFileCount,\n        ),\n        variant: 'info',\n        metadata: {\n            size: mediaFileCount,\n        },\n        growl: false,\n        isLoading: true,\n    };\n\n    // Create new notification\n    if (mediaFileCount && notificationId === null) {\n        notification.create(config).then((uuid) => {\n            notificationId = uuid;\n        });\n        next();\n    }\n\n    // Update existing notification\n    if (notificationId !== null) {\n        config.uuid = notificationId;\n\n        if (mediaFileCount === 0) {\n            config.title = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.titleSuccess',\n            );\n            config.message = $root.$t(\n                'swag-migration.worker-listener.mediaProcessing.messageSuccess',\n            );\n            config.isLoading = false;\n        }\n        notification.update(config);\n    }\n\n    next();\n}\n","const { Mixin } = Shopware;\nconst { debug } = Shopware.Utils;\n\n/**\n * Mixin for the navigation logic inside a wizard.\n * See swag-migration-wizard as an example.\n *\n * @package services-settings\n */\nMixin.register('swag-wizard', {\n    inject: [\n        'feature'\n    ],\n    data() {\n        return {\n            routes: {},\n            /* Example routes\n            routes: {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0 // the index defines the order of the navigation (it can be changed a runtime)\n                },\n                profile: {\n                    name: 'swag.migration.wizard.profile',\n                    index: 1\n                },\n                profileCreate: {\n                    name: 'swag.migration.wizard.profileCreate',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileSelect: {\n                    name: 'swag.migration.wizard.profileSelect',\n                    index: 1.1 // not available through nextRoute (child from profile)\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 2\n                }\n            } */\n            currentRoute: {\n                name: '',\n                index: 0,\n            },\n        };\n    },\n\n    computed: {\n        /**\n         * Current route index (wizard step).\n         * This does not include child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeIndex() {\n            return Math.floor(this.currentRoute.index);\n        },\n\n        /**\n         * Get the number of steps that the wizard runs through.\n         * This includes all routes except for the child routes like 5.1\n         *\n         * @returns {number}\n         */\n        routeCount() {\n            const routeIndices = [];\n            Object.keys(this.routes).forEach((routeIndex) => {\n                if (!routeIndices.includes(Math.floor(this.routes[routeIndex].index))) {\n                    routeIndices.push(Math.floor(this.routes[routeIndex].index));\n                }\n            });\n\n            return routeIndices.length;\n        },\n\n        /**\n         * Returns the previous route (next round number that is smaller than the current index).\n         * If the user is on a child route for example 5.1 it will return the route with index of 5.\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routePrevious() {\n            let previousRoute;\n\n            Object.keys(this.routes).forEach((route) => {\n                if (this.routes[route].index < this.currentRoute.index) {\n                    if (previousRoute === undefined ||\n                        Math.floor(this.routes[route].index) > previousRoute.index\n                    ) {\n                        previousRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return previousRoute !== undefined ? previousRoute : false;\n        },\n\n        /**\n         * Returns the next route (next round number that is bigger than the current index).\n         * (except for child routes which are excluded like 5.1).\n         *\n         * @returns {Object|boolean<false>}\n         */\n        routeNext() {\n            let nextRoute;\n            Object.keys(this.routes).forEach((route) => {\n                if (Math.floor(this.routes[route].index) > this.routeIndex) {\n                    if (nextRoute === undefined ||\n                        Math.floor(this.routes[route].index) < nextRoute.index\n                    ) {\n                        nextRoute = this.routes[route];\n                    }\n                }\n            });\n\n            return nextRoute !== undefined ? nextRoute : false;\n        },\n\n        /**\n         * Checks if there is a previous route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPreviousPossible() {\n            return this.routePrevious !== false;\n        },\n\n        /**\n         * Checks if there is a next route we can navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNextPossible() {\n            return this.routeNext !== false;\n        },\n    },\n\n    /**\n     * Match the current route when the component gets created.\n     */\n    created() {\n        // don't trigger the callback when the wizard is created.\n        // but set the right current route.\n        this.matchCurrentRoute(false);\n    },\n\n    updated() {\n        this.matchCurrentRoute(true);\n    },\n\n    methods: {\n        /**\n         * Logic for matching the current route.\n         * It searches for the route inside this.routes.\n         */\n        matchCurrentRoute(notifyCallback = true) {\n            const routerCurrentRoute = this.$router.currentRoute.value;\n\n            // check for current child route\n            let currentRoute;\n            const currentRouteFound = Object.keys(this.routes).some((routeIndex) => {\n                if (this.routes[routeIndex].name === routerCurrentRoute.name) {\n                    currentRoute = this.routes[routeIndex];\n                    return true;\n                }\n\n                return false;\n            });\n\n            if (currentRouteFound) {\n                this.currentRoute = currentRoute;\n                if (notifyCallback) {\n                    this.onChildRouteChanged();\n                }\n            }\n        },\n\n        /**\n         * Gets called when a route change has happened. This is useful to update texts inside the modal but\n         * outside of the router view (for example headlines, buttons, ...)\n         * Note: does not get called on created (to allow loading things from the api first)\n         */\n        onChildRouteChanged() {\n            debug.warn(\n                'swag-wizard Mixin',\n                'When using the wizard mixin you have to implement your custom \"onChildRouteChanged()\" method.',\n            );\n        },\n\n        /**\n         * Navigate to the specified route. You can get the route from this.routes\n         *\n         * @param {Object} route\n         */\n        navigateToRoute(route) {\n            this.$router.push({ name: route.name }).catch((error) => {\n                console.info(error.message)\n            });\n        },\n\n        /**\n         * Navigate to the previous route inside this.routes.\n         * It will skip route child indices like '3.1'\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToPrevious() {\n            if (this.navigateToPreviousPossible) {\n                this.navigateToRoute(this.routePrevious);\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Navigate to the next route inside this.routes.\n         * It will skip route child indices like '3.1'.\n         * It will return false if there is nothing to navigate to.\n         *\n         * @returns {boolean}\n         */\n        navigateToNext() {\n            if (this.navigateToNextPossible) {\n                this.navigateToRoute(this.routeNext);\n                return true;\n            }\n\n            return false;\n        },\n    },\n});\n","const context = require.context('./', true, /\\.\\/[a-z0-9-]+\\/[a-z0-9-]+\\/[a-z0-9-]+\\/index\\.js$/);\ncontext.keys().forEach((key) => {\n    context(key);\n});\n","import template from './swag-migration-profile-shopware-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\nconst API_KEY_INVALID_ERROR_CODE = 'SWAG_MIGRATION_INVALID_API_KEY';\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiKey: '',\n            },\n            apiKeyErrorCode: '',\n        };\n    },\n\n    computed: {\n        apiKeyLength() {\n            if (this.inputCredentials.apiKey === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiKey.length;\n        },\n\n        apiKeyError() {\n            if (this.apiKeyErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.apiKeyErrorCode,\n                meta: {\n                    parameters: {\n                        length: this.apiKeyLength,\n                    },\n                },\n            });\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiKeyValid(newInputCredentials.apiKey) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiKeyValid(apiKey) {\n            if (apiKey === null || apiKey.length < 40 || apiKey.length > 40) {\n                this.apiKeyErrorCode = API_KEY_INVALID_ERROR_CODE;\n                return false;\n            }\n\n            this.apiKeyErrorCode = '';\n            return true;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware55.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n            <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_apikey_field %}\\n                    <sw-text-field v-autofocus\\n                                   v-model:value=\\\"inputCredentials.apiKey\\\"\\n                                   name=\\\"sw-field--apiKey\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiKeyTooltip')\\\"\\n                                   :error=\\\"apiKeyError\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apikey_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-key\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                    <sw-text-field\\n                                   v-model:value=\\\"inputCredentials.apiUser\\\"\\n                                   name=\\\"sw-field--apiUser\\\"\\n                                   :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserLabel')\\\"\\n                                   :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserPlaceholder')\\\"\\n                                   :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.apiUserTooltip')\\\"\\n                                   validation=\\\"required\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                            <template #suffix>\\n                                <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                            </template>\\n                        {% endblock %}\\n                    </sw-text-field>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                    <sw-url-field\\n                                  v-model:value=\\\"inputCredentials.endpoint\\\"\\n                                  :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                  :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointLabel')\\\"\\n                                  :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointPlaceholder')\\\"\\n                                  :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.api.endpointSSLLabel')\\\">\\n                    </sw-url-field>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","import template from './swag-migration-profile-shopware-api-page-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-api-page-information', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_svg %}\\n                            <img class=\\\"swag-migration-wizard__plugin\\\" :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-shopware55-api-plugin-information.svg')\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_api_hint %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_plugin_link %}\\n                            <div class=\\\"swag-migration-wizard__link\\\">\\n                                <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"https://store.shopware.com/search?sSearch=Swag226607479310\\\">{{ $tc('swag-migration.wizard.pages.profileInformation.shopware55Api.pluginLink') }}</a>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-profile-shopware-local-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware-local-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                dbHost: '',\n                dbPort: '3306',\n                dbUser: '',\n                dbPassword: '',\n                dbName: '',\n                installationRoot: '',\n            },\n        };\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (newInputCredentials.dbHost !== '' &&\n                newInputCredentials.dbPort !== '' &&\n                newInputCredentials.dbName !== '' &&\n                newInputCredentials.dbUser !== '' &&\n                newInputCredentials.dbPassword !== '' &&\n                newInputCredentials.installationRoot !== ''\n            );\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_hint %}\\n                        {{ $tc('swag-migration.wizard.pages.credentials.shopware55.local.contentInformation') }}\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_local_db_host_port_group %}\\n                        <sw-container columns=\\\"1fr 80px\\\"\\n                                      gap=\\\"16px\\\">\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbhost_field %}\\n                                <sw-text-field v-autofocus\\n                                               v-model:value=\\\"inputCredentials.dbHost\\\"\\n                                               name=\\\"sw-field--dbHost\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostLabel')\\\"\\n                                               :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbHostPlaceholder')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_credentials_local_dbport_field %}\\n                                <sw-text-field\\n                                               v-model:value=\\\"inputCredentials.dbPort\\\"\\n                                               name=\\\"sw-field--dbPort\\\"\\n                                               :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPortLabel')\\\">\\n                                </sw-text-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbuser_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.dbUser\\\"\\n                                       name=\\\"sw-field--dbUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbUserPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbpassword_field %}\\n                        <sw-password-field\\n                                           v-model:value=\\\"inputCredentials.dbPassword\\\"\\n                                           name=\\\"sw-field--dbPassword\\\"\\n                                           :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordLabel')\\\"\\n                                           :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbPasswordPlaceholder')\\\">\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_dbname_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.dbName\\\"\\n                                       name=\\\"sw-field--dbName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNameLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.dbNamePlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_local_installationroot_field %}\\n                        <sw-text-field\\n                                       v-model:value=\\\"inputCredentials.installationRoot\\\"\\n                                       name=\\\"sw-field--installationRoot\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRoot')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware55.local.installationRootPlaceholder')\\\">\\n                        </sw-text-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware54-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware55-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware56-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-credential-form',\n    'swag-migration-profile-shopware-api-credential-form',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-api-page-information',\n    'swag-migration-profile-shopware-api-page-information',\n    {},\n);\n","const { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend(\n    'swag-migration-profile-shopware57-local-credential-form',\n    'swag-migration-profile-shopware-local-credential-form',\n    {},\n);\n","import template from './swag-migration-profile-shopware6-api-credential-form.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-credential-form', {\n    template,\n\n    props: {\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    data() {\n        return {\n            inputCredentials: {\n                endpoint: '',\n                apiUser: '',\n                apiPassword: '',\n            },\n        };\n    },\n\n    computed: {\n        apiPasswordLength() {\n            if (this.inputCredentials.apiPassword === null) {\n                return 0;\n            }\n\n            return this.inputCredentials.apiPassword.length;\n        },\n    },\n\n    watch: {\n        credentials: {\n            immediate: true,\n            handler(newCredentials) {\n                if (newCredentials === null || Object.keys(newCredentials).length < 1) {\n                    this.emitCredentials(this.inputCredentials);\n                    return;\n                }\n\n                this.inputCredentials = newCredentials;\n                this.emitOnChildRouteReadyChanged(\n                    this.areCredentialsValid(this.inputCredentials),\n                );\n            },\n        },\n\n        inputCredentials: {\n            deep: true,\n            handler(newInputCredentials) {\n                delete newInputCredentials.bearer_token;\n                this.emitCredentials(newInputCredentials);\n            },\n        },\n    },\n\n    methods: {\n        areCredentialsValid(newInputCredentials) {\n            return (\n                this.apiPasswordValid(newInputCredentials.apiPassword) &&\n                this.validateInput(newInputCredentials.endpoint) &&\n                this.validateInput(newInputCredentials.apiUser) &&\n                newInputCredentials.endpoint !== 'http://' &&\n                newInputCredentials.endpoint !== 'https://'\n            );\n        },\n\n        validateInput(input) {\n            return input !== null && input !== '';\n        },\n\n        apiPasswordValid(apiPassword) {\n            return apiPassword !== null && apiPassword.length >= 1;\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        emitCredentials(newInputCredentials) {\n            this.$emit('onCredentialsChanged', newInputCredentials);\n            this.emitOnChildRouteReadyChanged(\n                this.areCredentialsValid(newInputCredentials),\n            );\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"<div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials\\\"\\n     @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n    {% block swag_migration_wizard_page_credentials_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_information %}\\n                <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_api_hint %}\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc('swag-migration.wizard.pages.credentials.shopware6.api.contentInformation') }}\\n                        </p>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_wizard_page_credentials_credentials %}\\n                <div class=\\\"swag-migration-wizard__form\\\">\\n\\n                    {% block swag_migration_wizard_page_credentials_apiuser_field %}\\n                        <sw-text-field v-autofocus\\n                                       v-model:value=\\\"inputCredentials.apiUser\\\"\\n                                       name=\\\"sw-field--apiUser\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiUserTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n\\n                            {% block swag_migration_wizard_page_credentials_apiuser_icon %}\\n                                <template #suffix>\\n                                    <sw-icon name=\\\"regular-user\\\"></sw-icon>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-text-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_apiPassword_field %}\\n                        <sw-password-field\\n                                       v-model:value=\\\"inputCredentials.apiPassword\\\"\\n                                       name=\\\"sw-field--apiPassword\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordPlaceholder')\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.apiPasswordTooltip')\\\"\\n                                       validation=\\\"required\\\"\\n                                       required>\\n                        </sw-password-field>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_page_credentials_endpoint_field %}\\n                        <sw-url-field\\n                                      v-model:value=\\\"inputCredentials.endpoint\\\"\\n                                      :validation=\\\"inputCredentials.endpoint !== 'http://' && inputCredentials.endpoint !== 'https://'\\\"\\n                                      :label=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointLabel')\\\"\\n                                      :placeholder=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointPlaceholder')\\\"\\n                                      :switchLabel=\\\"$tc('swag-migration.wizard.pages.credentials.shopware6.api.endpointSSLLabel')\\\"\\n                                      required>\\n                        </sw-url-field>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n</div>\\n\";","import template from './swag-migration-profile-shopware6-api-page-information.html.twig';\nimport './swag-migration-profile-shopware6-api-page-information.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-profile-shopware6major-api-page-information', {\n    template,\n});\n","export default \"{% block swag_migration_wizard_page_plugin_information_shopware6 %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-plugin-information swag-migration-profile-shopware6-api-page-information\\\">\\n\\n        {% block swag_migration_wizard_page_plugin_information_shopware6_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_plugin_information_shopware6_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_icon %}\\n                            <div class=\\\"swag-migration-profile-shopware6-api-page-information__icon sw-settings-item\\\">\\n                                <div class=\\\"sw-settings-item__icon background--enabled\\\">\\n                                    <sw-icon name=\\\"regular-cog\\\">\\n                                    </sw-icon>\\n                                </div>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_title %}\\n                            <h3 class=\\\"information__header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_plugin %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.plugin.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_page_plugin_information_shopware6_api_hint_integration %}\\n                                <div class=\\\"swag-migration-wizard__description swag-migration-profile-shopware6-api-page-information__card\\\">\\n                                    <h4 class=\\\"information__header\\\">\\n                                        {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.title') }}\\n                                    </h4>\\n                                    <p>{{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.description') }}</p>\\n\\n                                    <div class=\\\"swag-migration-wizard__link\\\">\\n                                        <a class=\\\"link\\\"\\n                                           target=\\\"_blank\\\"\\n                                           :href=\\\"$tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.link')\\\">\\n                                            {{ $tc('swag-migration.wizard.pages.profileInformation.shopware6Api.integration.linkText') }}\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-assistant.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f2dfc138\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-confirm-warning.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"286afa9a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-data-selector.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b8979fc0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-media-process.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"10c16d3c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-premapping.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"bb4ffeea\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-progress-bar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0c007d13\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-shop-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7ca2fa2d\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-loading-screen-connection-lost.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1aebcf36\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-loading-screen-takeover.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"451f924a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-loading-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"15188db0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-pause-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4c39b254\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-result-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2082f1f9\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-dashboard-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4bdeea0d\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-expand-div.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f07632d0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-grid-selection.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"dead041e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-settings-icon.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4b7036cd\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-shop-avatar.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"57c56a4c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-tab-card.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"25970ea4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-empty-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2296396c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-history-detail-data.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"32467319\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-history-detail-errors.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"67015a98\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-history-detail.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9d444f60\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-history.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"705e90f2\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-main-page.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"8dc400ba\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-process-screen.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"415c22a0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-wizard-page-connection-create.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5d21ba9c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-wizard-page-profile-installation.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d8855606\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-wizard.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c92bbb68\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[12].use[1]!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[12].use[3]!./swag-migration-profile-shopware6-api-page-information.scss\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../../../../../../../../src/Administration/Resources/app/administration/node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"29683fdc\", content, true, {});","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nimport listToStyles from './listToStyles'\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nexport default function addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/bundles/swagmigrationassistant/\";","\n            __webpack_public_path__ = window.__sw__.assetPath + '/bundles/swagmigrationassistant/';\n        ","import template from './swag-migration-grid-extended.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.extend('swag-migration-grid-extended', 'sw-grid', {\n    template,\n\n    props: {\n        disabledAttribute: {\n            type: String,\n            default: 'disabled',\n        },\n    },\n\n    methods: {\n        isDisabled(item) {\n            return item[this.disabledAttribute];\n        },\n\n        extendedGridRowClasses(item, index) {\n            const classes = {\n                'is--selected': this.isSelected(item.id) && !this.isDisabled(item),\n                'is--deleted': item.isDeleted,\n                'is--new': item.isLocal,\n                'is--disabled': this.isDisabled(item),\n            };\n\n            classes[`sw-grid__row--${index}`] = true;\n\n            return classes;\n        },\n    },\n});\n","export default \"{% block sw_grid_body_slot_items %}\\n    <sw-grid-row :class=\\\"extendedGridRowClasses(item, index)\\\"\\n                 :style=\\\"columnFlex\\\"\\n                 :key=\\\"item.id\\\"\\n                 :item=\\\"item\\\"\\n                 :index=\\\"index\\\"\\n                 @inline-edit-finish=\\\"onInlineEditFinish\\\"\\n                 @inline-edit-start=\\\"onInlineEditStart\\\">\\n\\n        {% block sw_grid_body_item_selectable %}\\n            <div v-if=\\\"selectable\\\" class=\\\"sw-grid-column\\\">\\n                <div class=\\\"sw-grid__cell-content\\\">\\n                    <sw-checkbox-field :value=\\\"isSelected(item.id)\\\"\\n                                       :disabled=\\\"isDisabled(item)\\\"\\n                                       @update:value=\\\"selectItem($event, item)\\\">\\n                    </sw-checkbox-field>\\n                </div>\\n            </div>\\n        {% endblock %}\\n\\n        <slot name=\\\"columns\\\" :item=\\\"item\\\">\\n            {% block sw_grid_slot_columns %}{% endblock %}\\n        </slot>\\n    </sw-grid-row>\\n{% endblock %}\\n\";","import template from './swag-migration-history-selected-data.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-selected-data', {\n    template,\n\n    props: {\n        entityGroups: {\n            type: Array,\n            default: () => { return []; },\n        },\n    },\n\n    computed: {\n        dataSnippets() {\n            const snippets = [];\n            this.entityGroups.forEach((group) => {\n                if (group.id !== 'processMediaFiles') {\n                    snippets.push(\n                        group.snippet,\n                    );\n                }\n            });\n\n            return snippets;\n        },\n    },\n});\n","export default \"{% block swag_migration_history_selected_data %}\\n    <div class=\\\"swag-migration-history-selected-data\\\">\\n        <template v-for=\\\"(snippet, index) in dataSnippets\\\">\\n\\n            {% block swag_migration_history_selected_data_entityGroupSnippet %}\\n                {{ $tc(snippet) }}<template v-if=\\\"index !== (dataSnippets.length - 1)\\\">, </template>\\n            {% endblock %}\\n        </template>\\n    </div>\\n{% endblock %}\";","const { State } = Shopware;\n\n/**\n * Describes the current step in the migration (status).\n *\n * @package services-settings\n * @type {Readonly<{\n *                  WAITING: number,\n *                  PREMAPPING:number,\n *                  FETCH_DATA: number,\n *                  WRITE_DATA: number,\n *                  PROCESS_MEDIA_FILES: number,\n *                  FINISHED: number\n *                 }>}\n */\nexport const MIGRATION_STATUS = Object.freeze({\n    WAITING: -1,\n    PREMAPPING: 0,\n    FETCH_DATA: 1,\n    WRITE_DATA: 2,\n    PROCESS_MEDIA_FILES: 3,\n    FINISHED: 4,\n});\n\nconst MIGRATION_DISPLAY_STATUS = {};\nObject.keys(MIGRATION_STATUS).forEach((key) => {\n    if (!(key === 'WAITING' || key === 'PREMAPPING' || key === 'FINISHED')) {\n        MIGRATION_DISPLAY_STATUS[MIGRATION_STATUS[key]] = key;\n    }\n});\n\n\nexport { MIGRATION_DISPLAY_STATUS };\n\n\nexport class WorkerStatusManager {\n    /**\n     * @param {MigrationApiService} migrationService\n     */\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    /**\n     * This handles the necessary things before we start working on the new status.\n     * For example it resets the progress and updates the counts before the 'WRITE_DATA' operation.\n     *\n     * @param {string} runId\n     * @param {?number} newStatus\n     * @returns {Promise}\n     */\n    changeStatus(runId, newStatus = null) {\n        if (newStatus === null) {\n            newStatus = this._migrationProcessState.statusIndex;\n        }\n\n        return new Promise((resolve, reject) => {\n            if (newStatus === MIGRATION_STATUS.WRITE_DATA) {\n                this.beforeWriteProgress(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.beforeProcessMedia(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            if (newStatus === MIGRATION_STATUS.FINISHED) {\n                this.onFinish(runId).then((...params) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    resolve(...params);\n                }).catch((err) => {\n                    this.onStatusPreparationFinished(newStatus);\n                    reject(err);\n                });\n                return;\n            }\n\n            this.onStatusPreparationFinished(newStatus);\n            resolve();\n        });\n    }\n\n    onStatusPreparationFinished(newStatus) {\n        State.commit('swagMigration/process/setStatusIndex', newStatus);\n    }\n\n    beforeWriteProgress(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateWriteProgress(runId).then((response) => {\n                    response = response.filter((group) => {\n                        return group.id !== 'processMediaFiles';\n                    });\n                    State.commit('swagMigration/process/setEntityGroups', response);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    beforeProcessMedia(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.updateMediaFilesProgress(runId).then((response) => {\n                    const newEntityGroups = response.filter(group => group.id === 'processMediaFiles');\n                    State.commit('swagMigration/process/setEntityGroups', newEntityGroups);\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    onFinish(runId) {\n        return new Promise(async (resolve, reject) => {\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                await this._migrationService.finishMigration(runId).then(() => {\n                    requestRetry = false;\n                }).catch(() => {\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    requestRetry = false;\n                    reject();\n                    return;\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n}\n\nexport default {\n    WorkerStatusManager,\n    MIGRATION_STATUS,\n};\n","import template from './swag-migration-loading-screen.html.twig';\nimport './swag-migration-loading-screen.scss';\nimport { MIGRATION_DISPLAY_STATUS } from\n'../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen', {\n    template,\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'currentEntityGroupId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isPaused',\n        ]),\n\n        ...mapGetters('swagMigration/process', [\n            'displayEntityGroups',\n        ]),\n\n        currentStatus() {\n            return MIGRATION_DISPLAY_STATUS[this.statusIndex];\n        },\n\n        progressBarValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.currentCount, 0);\n        },\n\n        progressBarMaxValue() {\n            return this.displayEntityGroups.reduce((sum, group) => sum + group.total, 0);\n        },\n\n        progressBarTitle() {\n            if (this.currentEntityGroupId === '') {\n                return '';\n            }\n\n            return `${this.$tc(\n                `swag-migration.index.selectDataCard.dataSelection.${this.currentEntityGroupId}`,\n            )}`;\n        },\n\n        progressBarLeftPointDescription() {\n            return this.currentStatus === undefined ? '' :\n                `${this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.short`)}`;\n        },\n\n        caption() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.caption`);\n        },\n\n        statusLong() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.long`);\n        },\n\n        hint() {\n            return this.currentStatus === undefined ? '' :\n                this.$tc(`swag-migration.index.loadingScreenCard.status.${this.currentStatus}.hint`);\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/process/resetProgress');\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen %}\\n    <div class=\\\"swag-migration-loading-screen\\\">\\n\\n        {% block swag_migration_loading_screen_card %}\\n            <sw-card\\n                v-show=\\\"!isPaused\\\"\\n                class=\\\"swag-migration-loading-screen__card\\\"\\n                position-identifier=\\\"swag-migration-loading-screen__card\\\"\\n            >\\n\\n                {% block swag_migration_index_loading_screen_content %}\\n                    <div class=\\\"swag-migration-loading-screen__content\\\">\\n\\n                        {% block swag_migration_index_loading_screen_header %}\\n                            <div class=\\\"swag-migration-loading-screen__header\\\">\\n\\n                                {% block swag_migration_index_loading_screen_title %}\\n                                    <div class=\\\"swag-migration-loading-screen__title\\\">\\n                                        {{ statusLong }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_loading_screen_caption %}\\n                                    <div class=\\\"swag-migration-loading-screen__caption\\\">\\n                                        {{ caption }}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_progress_bar %}\\n                            <swag-migration-progress-bar\\n                                    :title=\\\"progressBarTitle\\\"\\n                                    :leftPointDescription=\\\"progressBarLeftPointDescription\\\"\\n                                    :rightPointDescription=\\\"$tc('swag-migration.index.loadingScreenCard.status.finish')\\\"\\n                                    :value=\\\"progressBarValue\\\"\\n                                    :maxValue=\\\"progressBarMaxValue\\\"></swag-migration-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_loading_screen_alert %}\\n                            <sw-alert class=\\\"swag-migration-loading-screen__hint\\\" variant=\\\"success\\\">\\n                                {{ hint }}\\n                                <template #customIcon>\\n                                    <sw-icon class=\\\"swag-migration-loading-screen__alert-icon\\\"\\n                                             name=\\\"regular-lightbulb\\\"\\n                                             size=\\\"20px\\\"\\n                                             decorative>\\n                                    </sw-icon>\\n                                </template>\\n                            </sw-alert>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_loading_screen_pause_overlay %}\\n            <swag-migration-pause-screen v-show=\\\"isPaused\\\"></swag-migration-pause-screen>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-result-screen.html.twig';\nimport './swag-migration-result-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-result-screen', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    props: {\n        runId: {\n            type: String,\n            required: true,\n        },\n    },\n});\n","export default \"{% block swag_migration_result_screen %}\\n    <div>\\n\\n        {% block swag_migration_result_screen_card %}\\n            <sw-card class=\\\"swag-migration-result-screen\\\" position-identifier=\\\"swag-migration-result-screen\\\">\\n\\n                {% block swag_migration_result_screen_content %}\\n                    <div class=\\\"swag-migration-result-screen__content\\\">\\n\\n                        {% block swag_migration_result_screen_icon %}\\n                            <div class=\\\"swag-migration-result-screen__bubble\\\">\\n                                <sw-icon class=\\\"swag-migration-result-screen__icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_title %}\\n                            <div class=\\\"swag-migration-result-screen__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.title') }}\\n                            </div>\\n                            <div class=\\\"swag-migration-result-screen__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_link %}\\n                            <router-link class=\\\"swag-migration-result-screen__link\\\"\\n                                         :to=\\\"{ name: 'swag.migration.index.history.detail', params: { id: runId } }\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.historyLink') }}\\n                            </router-link>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_result_screen_survey_card %}\\n            <sw-card class=\\\"swag-migration-result-survey\\\" position-identifier=\\\"swag-migration-result-survey\\\">\\n\\n                {% block swag_migration_result_screen_survey_content %}\\n                    <div class=\\\"swag-migration-result-survey__content\\\">\\n\\n                        {% block swag_migration_result_screen_survey_title %}\\n                            <div class=\\\"swag-migration-result-survey__title\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.title') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_caption %}\\n                            <div class=\\\"swag-migration-result-survey__caption\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.caption') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_link %}\\n                            <a class=\\\"sw-button sw-button--small\\\"\\n                               :href=\\\"$tc('swag-migration.index.loadingScreenCard.result.survey.link')\\\"\\n                               target=\\\"_blank\\\"\\n                               rel=\\\"noopener\\\">\\n                                {{ $tc('swag-migration.index.loadingScreenCard.result.survey.buttonText') }}\\n                                <sw-icon class=\\\"swag-migration-result-survey__external-icon\\\" name=\\\"regular-external-link-s\\\" size=\\\"8\\\"></sw-icon>\\n                            </a>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_result_screen_survey_icon %}\\n                            <div>\\n                                <img class=\\\"swag-migration-result-survey__icon\\\"\\n                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-result-survey-icon.svg')\\\">\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-loading-screen-takeover.html.twig';\nimport './swag-migration-loading-screen-takeover.scss';\nimport { MIGRATION_STATUS } from '../../../../../core/service/migration/swag-migration-worker-status-manager.service';\n\nconst { Component, State } = Shopware;\n\nconst TAKEOVER_STATE = Object.freeze({\n    RUNNING: 'running',\n    INTERRUPTED: 'interrupted',\n    ABORTED: 'aborted',\n});\n\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-takeover', {\n    template,\n\n    inject: {\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    props: {\n        isTakeoverForbidden: {\n            type: Boolean,\n        },\n        isMigrationInterrupted: {\n            type: Boolean,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            possibleState: TAKEOVER_STATE,\n            state: TAKEOVER_STATE.RUNNING,\n            showTakeoverModal: false,\n            showAbortModal: false,\n            showRedirectModal: false,\n        };\n    },\n\n    computed: {\n        titleSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.title';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.title`;\n        },\n        messageSnippet() {\n            if (this.isTakeoverForbidden) {\n                return 'swag-migration.index.loadingScreenCard.takeoverScreen.forbidden.message';\n            }\n\n            return `swag-migration.index.loadingScreenCard.takeoverScreen.${this.state}.message`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.isMigrationInterrupted) {\n                this.state = TAKEOVER_STATE.INTERRUPTED;\n            } else {\n                this.state = TAKEOVER_STATE.RUNNING;\n            }\n\n            this.isLoading = false;\n        },\n\n        refreshState() {\n            this.isLoading = true;\n            return this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    this.isLoading = false;\n                    return Promise.resolve();\n                }\n\n                return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.isMigrationRunning === false) {\n                        this.isLoading = false;\n                        this.state = TAKEOVER_STATE.ABORTED;\n                        return;\n                    }\n\n                    if (this.isMigrationInterrupted) {\n                        this.state = TAKEOVER_STATE.INTERRUPTED;\n                    } else {\n                        this.state = TAKEOVER_STATE.RUNNING;\n                    }\n\n                    this.isLoading = false;\n                }).catch(() => {\n                    this.isLoading = false;\n                });\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onCheckButtonClick() {\n            this.isLoading = true;\n            return this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    this.isLoading = false;\n                    this.showRedirectModal = true;\n                    return;\n                }\n\n                if (runState.status === MIGRATION_STATUS.PREMAPPING) {\n                    this.isLoading = false;\n                    this.showAbortModal = true;\n                    return;\n                }\n\n                this.isLoading = false;\n                this.showTakeoverModal = true;\n            });\n        },\n\n        onCloseTakeoverModal() {\n            this.showTakeoverModal = false;\n        },\n\n        onTakeover() {\n            this.showTakeoverModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onTakeoverMigration');\n            });\n        },\n\n        onCloseAbortModal() {\n            this.showAbortModal = false;\n        },\n\n        onAbort() {\n            this.showAbortModal = false;\n            this.$nextTick(() => {\n                // this will remove this component from the DOM so it must be called after the modal ist closed.\n                this.$emit('onAbortMigration');\n            });\n        },\n\n        onCloseRedirectModal() {\n            this.showRedirectModal = false;\n        },\n\n        onRedirect() {\n            this.showRedirectModal = false;\n            this.$nextTick(() => {\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$router.push({ name: 'swag.migration.index.main' });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen_takeover %}\\n    <sw-card\\n        class=\\\"swag-migration-loading-screen-takeover\\\"\\n        :isLoading=\\\"isLoading\\\"\\n        position-identifier=\\\"swag-migration-loading-screen-takeover\\\"\\n    >\\n\\n        {% block swag_migration_loading_screen_takeover_content %}\\n            <div class=\\\"swag-migration-loading-screen-takeover__content\\\">\\n\\n                {% block swag_migration_loading_screen_takeover_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-comment\\\" color=\\\"#189EFF\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-takeover__title\\\">\\n                        {{ $tc(titleSnippet) }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_content_message %}\\n                    {{ $tc(messageSnippet) }}\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_takeover_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-takeover__actions\\\">\\n                        <sw-button v-if=\\\"state !== possibleState.ABORTED && !isTakeoverForbidden\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onCheckButtonClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonCheck') }}\\n                        </sw-button>\\n                        <sw-button v-if=\\\"state === possibleState.ABORTED\\\"\\n                                   variant=\\\"ghost\\\"\\n                                   @click=\\\"onRedirect\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.buttonRedirect') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n\\n            {% block swag_migration_loading_screen_takeover_modal %}\\n                <sw-modal v-if=\\\"showTakeoverModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseTakeoverModal\\\">\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_takeover_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseTakeoverModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_takeover_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onTakeover\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.takeoverModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_abort_modal %}\\n                <sw-modal v-if=\\\"showAbortModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseAbortModal\\\">\\n\\n                    {% block swag_migration_loading_screen_abort_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_hint %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-hint\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.hint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_abort_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_cancelAction %}\\n                                <sw-button size=\\\"small\\\"\\n                                           @click=\\\"onCloseAbortModal\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_loading_screen_abort_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onAbort\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.abortModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n\\n            {% block swag_migration_loading_screen_redirect_modal %}\\n                <sw-modal v-if=\\\"showRedirectModal\\\"\\n                          class=\\\"swag-migration-loading-screen-takeover__modal\\\"\\n                          :title=\\\"$tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.title')\\\"\\n                          variant=\\\"small\\\"\\n                          @modal-close=\\\"onCloseRedirectModal\\\">\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_message %}\\n                        <p class=\\\"swag-migration-loading-screen-takeover__modal-message\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.message') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_loading_screen_redirect_modal_footer %}\\n                        <template #modal-footer>\\n                            {% block swag_migration_loading_screen_redirect_modal_footer_confirmAction %}\\n                                <sw-button variant=\\\"primary\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onRedirect\\\">\\n                                    {{ $tc('swag-migration.index.loadingScreenCard.takeoverScreen.redirectModal.confirm') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                    {% endblock %}\\n                </sw-modal>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-loading-screen-connection-lost.html.twig';\nimport './swag-migration-loading-screen-connection-lost.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-loading-screen-connection-lost', {\n    template,\n\n    methods: {\n        onNavigateMainClick() {\n            window.location.reload(); // trigger full page refresh, because the user can be still offline.\n        },\n    },\n});\n","export default \"{% block swag_migration_loading_screen_connection_lost %}\\n    <sw-card class=\\\"swag-migration-loading-screen-connection-lost\\\" position-identifier=\\\"swag-migration-loading-screen-connection-lost\\\">\\n\\n        {% block swag_migration_loading_screen_connection_lost_content %}\\n            <div class=\\\"swag-migration-loading-screen-connection-lost__content\\\">\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_icon %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-exclamation-triangle\\\" color=\\\"#ffb75d\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_title %}\\n                    <h5 class=\\\"swag-migration-loading-screen-connection-lost__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_content_message %}\\n                    <p class=\\\"swag-migration-loading-screen-connection-lost__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_loading_screen_connection_lost_hint %}\\n                    <div class=\\\"swag-migration-loading-screen-connection-lost__actions\\\">\\n                        <sw-button variant=\\\"ghost\\\"\\n                                   @click=\\\"onNavigateMainClick\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.connectionLostScreen.buttonNavigateToMain') }}\\n                        </sw-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-pause-screen.html.twig';\nimport './swag-migration-pause-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-pause-screen', {\n    template,\n});\n","export default \"{% block swag_migration_pause_screen %}\\n    <sw-card class=\\\"swag-migration-pause-screen\\\" position-identifier=\\\"swag-migration-pause-screen\\\">\\n\\n        {% block swag_migration_pause_screen_content %}\\n            <div class=\\\"swag-migration-pause-screen__content\\\">\\n\\n                {% block swag_migration_pause_screen_content_icon %}\\n                    <div class=\\\"swag-migration-pause-screen__icon-wrapper\\\">\\n                        <sw-icon name=\\\"regular-sofa\\\" color=\\\"#189eff\\\" large></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_title %}\\n                    <h5 class=\\\"swag-migration-pause-screen__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_pause_screen_content_message %}\\n                    <p class=\\\"swag-migration-pause-screen__content-message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.pauseScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-information.html.twig';\nimport './swag-migration-shop-information.scss';\n\nconst { Component, Mixin } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\nconst { format } = Shopware.Utils;\nconst { Criteria } = Shopware.Data;\n\nconst BADGE_TYPE = Object.freeze({\n    SUCCESS: 'success',\n    DANGER: 'danger',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-information', {\n    template,\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    filters: {\n        localizedNumberFormat(value) {\n            const locale = `${this.adminLocaleLanguage}-${this.adminLocaleRegion}`;\n            const formatter = new Intl.NumberFormat(locale);\n            return formatter.format(value);\n        },\n    },\n\n    props: {\n        connected: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            showMoreInformation: true,\n            confirmModalIsLoading: false,\n            showRemoveCredentialsConfirmModal: false,\n            showResetChecksumsConfirmModal: false,\n            showResetMigrationConfirmModal: false,\n            lastConnectionCheck: '-',\n            lastMigrationDate: '-',\n            connection: null,\n            context: Shopware.Context.api,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'connectionId',\n            'environmentInformation',\n        ]),\n\n        ...mapGetters([\n            'adminLocaleLanguage',\n            'adminLocaleRegion',\n        ]),\n\n        displayEnvironmentInformation() {\n            return this.environmentInformation === null ? {} :\n                this.environmentInformation;\n        },\n\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        connectionName() {\n            return this.connection === null ? '' :\n                this.connection.name;\n        },\n\n        shopUrl() {\n            return this.displayEnvironmentInformation.sourceSystemDomain === undefined ? '' :\n                this.displayEnvironmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.displayEnvironmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.displayEnvironmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        connectionBadgeLabel() {\n            if (this.serverUnreachable) {\n                return 'swag-migration.index.shopInfoCard.serverUnreachable';\n            }\n\n            if (this.connected) {\n                return 'swag-migration.index.shopInfoCard.connected';\n            }\n\n            return 'swag-migration.index.shopInfoCard.notConnected';\n        },\n\n        connectionBadgeVariant() {\n            if (this.connected) {\n                return BADGE_TYPE.SUCCESS;\n            }\n\n            return BADGE_TYPE.DANGER;\n        },\n\n        shopFirstLetter() {\n            return this.displayEnvironmentInformation.sourceSystemName === undefined ? 'S' :\n                this.displayEnvironmentInformation.sourceSystemName[0];\n        },\n\n        profile() {\n            return this.connection === null || this.connection.profile === undefined ? '' :\n                `${this.connection.profile.sourceSystemName} ${this.connection.profile.version} - ${this.connection.profile.author}`;\n        },\n\n        profileIcon() {\n            return this.connection === null ||\n                this.connection.profile === undefined ||\n                this.connection.profile.icon === undefined ? null : this.connection.profile.icon;\n        },\n\n        gateway() {\n            return this.connection === null || this.connection.gateway === undefined ? '' :\n                this.connection.gateway.snippet;\n        },\n\n        lastConnectionCheckDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastConnectionCheck),\n                time: this.getTimeString(this.lastConnectionCheck),\n            };\n        },\n\n        lastMigrationDateTimeParams() {\n            return {\n                date: this.getDateString(this.lastMigrationDate),\n                time: this.getTimeString(this.lastMigrationDate),\n            };\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    watch: {\n        $route: {\n            immediate: true,\n            handler() {\n                this.showResetMigrationConfirmModal = this.$route.meta.resetMigration;\n            },\n        },\n\n        connectionId: {\n            immediate: true,\n            /**\n             * @param {string} newConnectionId\n             */\n            handler(newConnectionId) {\n                this.fetchConnection(newConnectionId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.updateLastMigrationDate();\n        },\n\n        openResetMigrationModal() {\n            this.showResetMigrationConfirmModal = true;\n            this.$router.push({\n                name: 'swag.migration.index.resetMigration',\n            });\n        },\n\n        onCloseResetModal() {\n            this.showResetMigrationConfirmModal = false;\n            this.$router.push({\n                name: 'swag.migration.index.main',\n            });\n        },\n\n        updateLastMigrationDate() {\n            const criteria = new Criteria(1, 1);\n            criteria.addSorting(Criteria.sort('createdAt', 'DESC'));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                if (runs.length > 0) {\n                    this.lastMigrationDate = runs.first().createdAt;\n                } else {\n                    this.lastMigrationDate = '-';\n                }\n            });\n        },\n\n        /**\n         * @param {string} connectionId\n         */\n        fetchConnection(connectionId) {\n            return this.migrationConnectionRepository.get(connectionId, this.context).then((connection) => {\n                delete connection.credentialFields;\n                this.connection = connection;\n                this.lastConnectionCheck = new Date();\n\n                return this.migrationService.getProfileInformation(\n                    connection.profileName,\n                    connection.gatewayName,\n                ).then((profileInformation) => {\n                    this.connection.profile = profileInformation.profile;\n                    this.connection.gateway = profileInformation.gateway;\n                });\n            });\n        },\n\n        getTimeString(date) {\n            return format.date(date, {\n                day: undefined,\n                month: undefined,\n                year: undefined,\n                hour: 'numeric',\n                minute: '2-digit',\n            });\n        },\n\n        getDateString(date) {\n            return format.date(date);\n        },\n\n        onClickEditConnectionCredentials() {\n            this.$router.push({\n                name: 'swag.migration.wizard.credentials',\n                params: {\n                    connectionId: this.connectionId,\n                },\n            });\n        },\n\n        onClickCreateConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionCreate',\n            });\n        },\n\n        onClickSelectConnection() {\n            this.$router.push({\n                name: 'swag.migration.wizard.connectionSelect',\n            });\n        },\n\n        onClickProfileInstallation() {\n            this.$router.push({\n                name: 'swag.migration.wizard.profileInstallation',\n            });\n        },\n\n        onClickRemoveConnectionCredentials() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.updateConnectionCredentials(\n                this.connectionId,\n                { },\n            ).then(() => {\n                this.$router.go(); // Refresh the page\n            });\n        },\n\n        onClickResetChecksums() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.resetChecksums(this.connectionId).then(() => {\n                this.showResetChecksumsConfirmModal = false;\n                this.confirmModalIsLoading = false;\n            });\n        },\n\n        onClickResetMigration() {\n            this.confirmModalIsLoading = true;\n            return this.migrationService.cleanupMigrationData().then(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n                this.migrationProcessStoreInitService.initProcessStore();\n\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.emptyScreen' });\n                });\n            }).catch(() => {\n                this.showResetMigrationConfirmModal = false;\n                this.confirmModalIsLoading = false;\n\n                this.createNotificationError({\n                    title: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.title'),\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    variant: 'error',\n                    growl: true,\n                });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_information %}\\n    <sw-card\\n        class=\\\"swag-migration-shop-information\\\"\\n        :title=\\\"$tc('swag-migration.index.shopInfoCard.cardTitle')\\\"\\n        position-identifier=\\\"swag-migration-shop-information\\\"\\n    >\\n\\n        {% block swag_migration_shop_information_content %}\\n            <template #grid>\\n                <sw-container rows=\\\"auto auto\\\">\\n                    <sw-card-section :divider=\\\"showMoreInformation ? 'bottom' : ''\\\">\\n\\n                        {% block swag_migration_shop_information_connection %}\\n                            <div class=\\\"swag-migration-shop-information__connection\\\">\\n\\n                                {% block swag_migration_shop_information_connection_avatar %}\\n                                    <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                        <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                    color=\\\"#189EFF\\\"\\n                                                                    size=\\\"80px\\\">\\n                                            {{ shopFirstLetter }}\\n                                        </swag-migration-shop-avatar>\\n                                    </template>\\n\\n                                    <template v-else>\\n                                        <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                             :src=\\\"assetFilter(profileIcon)\\\"\\n                                             size=\\\"80px\\\">\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection_info %}\\n                                    <div class=\\\"swag-migration-shop-information__connection-info\\\">\\n\\n                                        {% block swag_migration_shop_information_shop_system %}\\n                                            <div class=\\\"swag-migration-shop-information__connection-name\\\">\\n                                                {{ connectionName }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_shop_domain %}\\n                                            <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-shop-information__shop-domain\\\">\\n                                                <span class=\\\"swag-migration-shop-information__shop-domain-prefix\\\"\\n                                                      :class=\\\"shopUrlPrefixClass\\\">\\n                                                    <sw-icon v-if=\\\"sslActive\\\"\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    <sw-icon v-else\\n                                                             class=\\\"swag-migration-shop-information__shop-domain-prefix-icon\\\"\\n                                                             name=\\\"regular-lock-open-s\\\"\\n                                                             size=\\\"12px\\\">\\n                                                    </sw-icon>\\n                                                    {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_actions %}\\n                                            <div class=\\\"swag-migration-shop-information__actions\\\">\\n\\n                                                {% block swag_migration_shop_information_actions_editSettings %}\\n                                                    <sw-button size=\\\"small\\\"\\n                                                               @click=\\\"onClickEditConnectionCredentials\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.buttonEditSettings') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_shop_information_actions_contextMenu %}\\n                                                    <sw-context-button>\\n                                                        <template #button>\\n                                                            <sw-button size=\\\"small\\\" square>\\n                                                                <sw-icon name=\\\"solid-ellipsis-h-s\\\" small></sw-icon>\\n                                                            </sw-button>\\n                                                        </template>\\n\\n                                                        {% block swag_migration_shop_information_actions_createConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickCreateConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonCreateConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_selectConnectionItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickSelectConnection\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonSelectConnection') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_profileInstallationItem %}\\n                                                            <sw-context-menu-item @click=\\\"onClickProfileInstallation\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonProfileInstallation') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_removeCredentialsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showRemoveCredentialsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonRemoveCredentials') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetChecksumsItem %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"showResetChecksumsConfirmModal = true\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetChecksums') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_divider %}\\n                                                            <sw-context-menu-divider></sw-context-menu-divider>\\n                                                        {% endblock %}\\n\\n                                                        {% block swag_migration_shop_information_actions_resetMigrationItem %}\\n                                                            <sw-context-menu-item @click=\\\"openResetMigrationModal\\\">\\n                                                                {{ $tc('swag-migration.index.shopInfoCard.buttonResetMigration') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_connection %}\\n                                    <div class=\\\"swag-migration-shop-information__connection\\\">\\n                                        <div class=\\\"swag-migration-shop-information__connection-badge\\\">\\n                                            <sw-label class=\\\"swag-migration-shop-information__connection-status\\\"\\n                                                      :variant=\\\"connectionBadgeVariant\\\"\\n                                                      appearance=\\\"pill\\\">\\n                                                <sw-color-badge class=\\\"swag-migration-shop-information__connection-status-dot\\\"\\n                                                                :variant=\\\"connectionBadgeVariant\\\"\\n                                                                rounded>\\n                                                </sw-color-badge>\\n                                                <span class=\\\"swag-migration-shop-information__connection-status-text\\\">\\n                                                    {{ $tc(connectionBadgeLabel) }}\\n                                                </span>\\n                                            </sw-label>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </sw-card-section>\\n\\n                    <sw-card-section v-if=\\\"showMoreInformation\\\" secondary slim>\\n                        <sw-container class=\\\"swag-migration-shop-information__metadata\\\"\\n                                      columns=\\\"repeat(auto-fit, minmax(250px, 1fr)\\\"\\n                                      gap=\\\"0px 15px\\\">\\n\\n                            {% block swag_migration_shop_information_metadata_columns %}\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_metadata_column_left %}\\n                                        {% block swag_migration_shop_information_metadata_profile %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.profile') }}</dt>\\n                                                <dd>{{ profile }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_gateway %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.gateway') }}</dt>\\n                                                    <dd>{{ $tc(gateway) }}</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                                <div class=\\\"swag-migration-shop-information__metadata-columns\\\">\\n\\n                                    {% block swag_migration_shop_information_column_right %}\\n                                        {% block swag_migration_shop_information_metadata_lastConnectionCheck %}\\n                                            <sw-description-list>\\n                                                <dt>{{ $tc('swag-migration.index.shopInfoCard.connectionCheck') }}</dt>\\n                                                <dd v-if=\\\"lastConnectionCheck !== '-'\\\">\\n                                                    {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastConnectionCheckDateTimeParams) }}\\n                                                </dd>\\n                                                <dd v-else>-</dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_shop_information_metadata_lastMigration %}\\n                                            <sw-description-list>\\n                                                    <dt>{{ $tc('swag-migration.index.shopInfoCard.lastMigration') }}</dt>\\n                                                    <dd v-if=\\\"lastMigrationDate !== '-'\\\">\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.displayDateTime', 0, lastMigrationDateTimeParams) }}\\n                                                    </dd>\\n                                                    <dd v-else>\\n                                                        {{ $tc('swag-migration.index.shopInfoCard.noMigrationDoneYet') }}\\n                                                    </dd>\\n                                            </sw-description-list>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card-section>\\n                </sw-container>\\n\\n                {% block swag_migration_shop_information_remove_credentials_confirm_modal %}\\n                    <sw-modal v-if=\\\"showRemoveCredentialsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_remove_credentials_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showRemoveCredentialsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_remove_credentials_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickRemoveConnectionCredentials\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.removeCredentialsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_checksums_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetChecksumsConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              size=\\\"460px\\\"\\n                              @modal-close=\\\"showResetChecksumsConfirmModal = false\\\">\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_checksums_confirm_modal_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_abort %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"showResetChecksumsConfirmModal = false\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.abortButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_shop_information_reset_checksums_confirm_modal_confirm %}\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               :disabled=\\\"confirmModalIsLoading\\\"\\n                                               @click=\\\"onClickResetChecksums\\\">\\n                                        {{ $tc('swag-migration.index.shopInfoCard.resetChecksumsConfirmDialog.confirmButtonText') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block swag_migration_shop_information_reset_migration_confirm_modal %}\\n                    <sw-modal v-if=\\\"showResetMigrationConfirmModal\\\"\\n                              class=\\\"swag-migration-shop-information__reset-confirm-modal\\\"\\n                              :title=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.title')\\\"\\n                              :isLoading=\\\"confirmModalIsLoading\\\"\\n                              @modal-close=\\\"onCloseResetModal\\\">\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_icon %}\\n                            <div class=\\\"swag-migration-shop-information__reset-confirm-modal-icon-wrapper\\\">\\n                                <sw-icon class=\\\"swag-migration-shop-information__confirm-modal-icon\\\" name=\\\"regular-trophy\\\" color=\\\"#37D046\\\" size=\\\"40\\\"></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_header %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-header\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.header')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content\\\"\\n                               v-html=\\\"$tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.content')\\\">\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_content_hint %}\\n                            <p class=\\\"swag-migration-shop-information__reset-confirm-modal-content-hint\\\">\\n                                {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.contentHint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_shop_information_reset_migration_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onCloseResetModal\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.abortButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_shop_information_reset_migration_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"confirmModalIsLoading\\\"\\n                                           @click=\\\"onClickResetMigration\\\">\\n                                    {{ $tc('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.confirmButtonText') }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-data-selector.html.twig';\nimport './swag-migration-data-selector.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-data-selector', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'dataSelectionTableData',\n            'dataSelectionIds',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.fetchTableData();\n        },\n\n        fetchTableData() {\n            if (this.dataSelectionTableData.length > 0) {\n                this.$nextTick(() => {\n                    if (!this.$refs.tableDataGrid) {\n                        this.fetchTableData();\n                    }\n\n                    this.dataSelectionIds.forEach((id) => {\n                        this.$refs.tableDataGrid?.selectItem(true, { id });\n                    });\n                });\n            }\n        },\n\n        onGridSelectItem(selection) {\n            const selectionIds = Object.keys(selection);\n\n            this.dataSelectionTableData.forEach((data) => {\n                if (data.requiredSelection !== true) {\n                    return;\n                }\n\n                if (!selectionIds.includes(data.id)) {\n                    selectionIds.push(data.id);\n                    this.$nextTick(() => {\n                        this.$refs.tableDataGrid.selectItem(true, data);\n                    });\n                }\n            });\n\n            State.commit('swagMigration/ui/setDataSelectionIds', selectionIds);\n        },\n\n        showHelptext(entityTotals) {\n            return entityTotals !== undefined && Object.keys(entityTotals).length > 1;\n        },\n\n        getHelptext(item) {\n            if (item.entityTotals === undefined || Object.keys(item.entityTotals).length === 0) {\n                return '';\n            }\n\n            let string = '';\n            Object.keys(item.entityTotals).forEach((key) => {\n                string += `${this.$tc(item.entityNames[key])\n                } ${\n                    item.entityTotals[key]\n                }</br>`;\n            });\n\n            return string;\n        },\n    },\n});\n","export default \"{% block swag_migration_data_selector %}\\n    <div class=\\\"swag-migration-data-selector\\\">\\n\\n        {% block swag_migration_data_selector_warnings %}\\n            <div class=\\\"swag-migration-data-selector__warnings\\\">\\n                <sw-alert v-for=\\\"warning in displayWarnings\\\"\\n                          class=\\\"swag-migration-data-selector__warning\\\"\\n                          :key=\\\"warning.snippetKey\\\"\\n                          variant=\\\"warning\\\">\\n                    {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                </sw-alert>\\n            </div>\\n        {% endblock %}\\n\\n        <sw-card\\n            v-if=\\\"this.dataSelectionTableData.length > 0\\\"\\n            :title=\\\"$tc('swag-migration.index.selectDataCard.cardTitle')\\\"\\n            position-identifier=\\\"swag-migration-data-selector\\\"\\n        >\\n\\n            {% block swag_migration_data_selector_grid %}\\n                <template #grid>\\n                    <swag-migration-grid-extended\\n                        ref=\\\"tableDataGrid\\\"\\n                        :items=\\\"dataSelectionTableData\\\"\\n                        disabledAttribute=\\\"requiredSelection\\\"\\n                        table\\n                        @sw-grid-select-item=\\\"onGridSelectItem\\\"\\n                        @sw-grid-select-all=\\\"onGridSelectItem\\\">\\n                        <template #columns=\\\"{ item }\\\">\\n\\n                            {% block swag_migration_data_selector_grid_column_data %}\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.name')\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.dataType')\\\">\\n                                    {{ $tc('swag-migration.index.selectDataCard.dataTypes.' + item.dataType) }}\\n                                </sw-grid-column>\\n\\n                                <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.selectDataCard.headers.total')\\\" align=\\\"right\\\">\\n                                    {{ item.total }}\\n\\n                                    <sw-help-text v-if=\\\"showHelptext(item.entityTotals)\\\"\\n                                                  class=\\\"swag-migration-data-selector__help-text\\\"\\n                                                  :text=\\\"getHelptext(item)\\\">\\n                                    </sw-help-text>\\n                                    <div v-else class=\\\"swag-migration-data-selector__help-text-placeholder\\\"></div>\\n                                </sw-grid-column>\\n                            {% endblock %}\\n                        </template>\\n                    </swag-migration-grid-extended>\\n                </template>\\n            {% endblock %}\\n        </sw-card>\\n\\n        <sw-card v-else class=\\\"swag-migration-data-selector\\\" position-identifier=\\\"swag-migration-data-selector-no-data\\\">\\n\\n            {% block swag_migration_data_selector_no_data %}\\n                <div class=\\\"swag-migration-index-data-selector__no-data\\\">\\n                    <p class=\\\"swag-migration-index-data-selector__no-data-label\\\">\\n                        {{ $tc('swag-migration.index.selectDataCard.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","/**\n * @package services-settings\n */\nexport const UI_COMPONENT_INDEX = Object.freeze({\n    WARNING_CONFIRM: -1,\n    DATA_SELECTOR: 0,\n    PREMAPPING: 1,\n    LOADING_SCREEN: 2,\n    MEDIA_SCREEN: 3,\n    RESULT_SUCCESS: 4,\n    PAUSE_SCREEN: 5,\n    TAKEOVER: 6,\n    CONNECTION_LOST: 7,\n});\n\n/**\n * The vuex store for global data handling inside the UI components of the migration module.\n * These are used for preparing and supporting the migration process (which is running in the background)\n * and to display the correct things to the user.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The current component to display in the migration process. This is very similar to the migration status,\n         * but only represents which component to render at the moment.\n         */\n        componentIndex: UI_COMPONENT_INDEX.DATA_SELECTOR,\n\n        /**\n         * Flag which sets the whole module into a loading state\n         */\n        isLoading: false,\n\n        /**\n         * Flag to start the migration process when redirecting from different pages.\n         */\n        startMigration: false,\n\n        /**\n         * Flag to set the migration ui into a pause state\n         */\n        isPaused: false,\n\n        /**\n         * Flag to specify that the premapping is valid\n         */\n        isPremappingValid: false,\n\n        /**\n         * The selected data ids that the user wants to migrate.\n         */\n        dataSelectionIds: [],\n\n        /**\n         * The possible data that the user can migrate.\n         */\n        dataSelectionTableData: [],\n\n        /**\n         * The premapping structure, that the user must match.\n         */\n        premapping: [],\n\n        /**\n         * Only the unfilled part of the premapping.\n         */\n        unfilledPremapping: [],\n\n        /**\n         * Only the filled part of the premapping.\n         */\n        filledPremapping: [],\n    },\n\n    mutations: {\n        setComponentIndex(state, newIndex) {\n            state.componentIndex = newIndex;\n        },\n\n        setIsLoading(state, isLoading) {\n            state.isLoading = isLoading;\n        },\n\n        setStartMigration(state, startMigration) {\n            state.startMigration = startMigration;\n        },\n\n        setIsPaused(state, isPaused) {\n            state.isPaused = isPaused;\n        },\n\n        setIsPremappingValid(state, isValid) {\n            state.isPremappingValid = isValid;\n        },\n\n        setDataSelectionIds(state, newIds) {\n            state.dataSelectionIds = newIds;\n        },\n\n        setDataSelectionTableData(state, newTableData) {\n            state.dataSelectionTableData = newTableData;\n        },\n\n        setPremapping(state, newPremapping) {\n            if (newPremapping === undefined && newPremapping.length < 1) {\n                state.unfilledPremapping = [];\n                state.filledPremapping = [];\n                return;\n            }\n\n            const unfilledMapping = [];\n            const filledMapping = [];\n\n            newPremapping.forEach((group) => {\n                const newFilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                const newUnfilledGroup = {\n                    choices: group.choices,\n                    entity: group.entity,\n                    mapping: [],\n                };\n\n                group.mapping.forEach((mapping) => {\n                    if (mapping.destinationUuid.length > 0) {\n                        newFilledGroup.mapping.push(mapping);\n                    } else {\n                        newUnfilledGroup.mapping.push(mapping);\n                    }\n                });\n\n                if (newFilledGroup.mapping.length > 0) {\n                    filledMapping.push(newFilledGroup);\n                }\n\n                if (newUnfilledGroup.mapping.length > 0) {\n                    unfilledMapping.push(newUnfilledGroup);\n                }\n            });\n\n            state.unfilledPremapping = unfilledMapping;\n            state.filledPremapping = filledMapping;\n            state.premapping = newPremapping;\n        },\n    },\n\n    getters: {\n        isMigrationAllowed(state) {\n            const tableDataIds = state.dataSelectionTableData.map((data) => {\n                if (data.requiredSelection === false) {\n                    return data.id;\n                }\n\n                return null;\n            });\n            return state.dataSelectionIds.some(id => tableDataIds.includes(id));\n        },\n    },\n};\n","import template from './swag-migration-premapping.html.twig';\nimport { UI_COMPONENT_INDEX } from '../../../../../core/data/migrationUI.store';\nimport './swag-migration-premapping.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-premapping', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n    },\n\n    data() {\n        return {\n            isLoading: false,\n            premappingInput: [],\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'unfilledPremapping',\n            'filledPremapping',\n            'isPremappingValid',\n            'premapping',\n        ]),\n\n        displayUnfilledPremapping() {\n            return this.unfilledPremapping.length > 0;\n        },\n\n        displayFilledPremapping() {\n            return this.filledPremapping.length > 0;\n        },\n    },\n\n    watch: {\n        runId: {\n            immediate: true,\n            handler(newRunId) {\n                if (newRunId.length < 1) {\n                    return;\n                }\n\n                this.fetchPremapping(newRunId);\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swagMigration/ui/setIsPremappingValid', false);\n        },\n\n        fetchPremapping(runId) {\n            this.isLoading = true;\n\n            if (this.premapping !== null && this.premapping.length > 0) {\n                this.$nextTick(() => {\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n                    this.isLoading = false;\n                });\n                return Promise.resolve();\n            }\n\n            return this.migrationService.generatePremapping(runId).then((premapping) => {\n                if (premapping.length === 0) {\n                    State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                    this.migrationWorkerService.startMigration(this.runId).catch(() => {\n                        this.onInvalidMigrationAccessToken();\n                    });\n                } else {\n                    State.commit('swagMigration/ui/setPremapping', premapping);\n                    this.notifyPremappingValidWatchers(\n                        this.validatePremapping(false),\n                    );\n\n                    this.isLoading = false;\n                }\n            });\n        },\n\n        notifyPremappingValidWatchers(isValid) {\n            if (isValid !== this.isPremappingValid) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n                return;\n            }\n\n            // It is needed to trigger a watcher event here, even if the value does not have been changed.\n            State.commit('swagMigration/ui/setIsPremappingValid', !isValid);\n            this.$nextTick(() => {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            });\n        },\n\n        validatePremapping(updateStore = true) {\n            const isValid = !this.premapping.some((group) => {\n                return group.mapping.some((mapping) => {\n                    return mapping.destinationUuid === null || mapping.destinationUuid.length === 0;\n                });\n            });\n\n            if (updateStore) {\n                State.commit('swagMigration/ui/setIsPremappingValid', isValid);\n            }\n\n            return isValid;\n        },\n    },\n});\n","export default \"{% block swag_migration_premapping %}\\n    <div class=\\\"swag-migration-premapping\\\">\\n\\n        {% block swag_migration_premapping_unfilled_alert %}\\n            <sw-alert v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                      class=\\\"swag-migration-premapping__alert\\\"\\n                      variant=\\\"error\\\">\\n                {{ $tc('swag-migration.index.premappingCard.unfilledAlert') }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_card %}\\n            <sw-card\\n                v-if=\\\"!isLoading && !isPremappingValid\\\"\\n                class=\\\"swag-migration-premapping__unfilled-card\\\"\\n                position-identifier=\\\"swag-migration-premapping\\\"\\n            >\\n\\n                {% block swag_migration_premapping_unfilled_title %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_unfilled_caption %}\\n                    <div class=\\\"swag-migration-premapping__unfilled-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.unfilledCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_success_card %}\\n            <sw-card v-if=\\\"!isLoading && isPremappingValid\\\"\\n                     class=\\\"swag-migration-premapping__success-card\\\"\\n                     position-identifier=\\\"swag-migration-premapping__success-card\\\">\\n\\n                {% block swag_migration_premapping_success_bubble %}\\n                    <div class=\\\"swag-migration-premapping__success-bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-premapping__success-icon\\\"\\n                                 name=\\\"regular-checkmark\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_title %}\\n                    <div class=\\\"swag-migration-premapping__success-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_success_caption %}\\n                    <div class=\\\"swag-migration-premapping__success-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.validCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_unfilled_mapping %}\\n            <swag-migration-tab-card\\n                v-if=\\\"displayUnfilledPremapping\\\"\\n                class=\\\"swag-migration-premapping__tab-card\\\"\\n                :title=\\\"$tc('swag-migration.index.premappingCard.unfilledCardTitle')\\\"\\n                :items=\\\"unfilledPremapping\\\"\\n            >\\n                <template #items=\\\"{ item }\\\" >\\n                    <swag-migration-grid-selection\\n                        :choices=\\\"item.choices\\\"\\n                        :mapping=\\\"item.mapping\\\"\\n                        @update:value=\\\"validatePremapping\\\"\\n                    ></swag-migration-grid-selection>\\n                </template>\\n            </swag-migration-tab-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_premapping_expand_div %}\\n            <swag-migration-expand-div\\n                v-if=\\\"!isLoading && displayFilledPremapping\\\"\\n                class=\\\"swag-migration-premapping__expand-div\\\"\\n                :expandTitle=\\\"$tc('swag-migration.index.premappingCard.expandTitle')\\\"\\n                :collapseTitle=\\\"$tc('swag-migration.index.premappingCard.collapseTitle')\\\"\\n            >\\n                {% block swag_migration_premapping_filled_mapping %}\\n                    <swag-migration-tab-card\\n                        v-if=\\\"displayFilledPremapping\\\"\\n                        class=\\\"swag-migration-premapping__filled-tab-card swag-migration-premapping__tab-card\\\"\\n                        :title=\\\"$tc('swag-migration.index.premappingCard.filledCardTitle')\\\"\\n                        :items=\\\"filledPremapping\\\"\\n                    >\\n                        <template #items=\\\"{ item }\\\">\\n                            <swag-migration-grid-selection\\n                                :choices=\\\"item.choices\\\"\\n                                :mapping=\\\"item.mapping\\\"\\n                                @update:value=\\\"validatePremapping\\\"\\n                            ></swag-migration-grid-selection>\\n                        </template>\\n                    </swag-migration-tab-card>\\n                {% endblock %}\\n            </swag-migration-expand-div>\\n        {% endblock %}\\n\\n        <sw-card v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-premapping__loading-card\\\"\\n                 position-identifier=\\\"swag-migration-premapping__loading-card\\\">\\n            <div>\\n\\n                {% block swag_migration_premapping_loader %}\\n                    <sw-loader class=\\\"swag-migration-premapping__loader\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_title %}\\n                    <div class=\\\"swag-migration-premapping__loading-title\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingTitle') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_premapping_loading_caption %}\\n                    <div class=\\\"swag-migration-premapping__loading-caption\\\">\\n                        {{ $tc('swag-migration.index.premappingCard.loadingCaption') }}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-progress-bar.html.twig';\nimport './swag-migration-progress-bar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-progress-bar', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        leftPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        rightPointDescription: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        value: {\n            type: Number,\n            default: 0,\n            required: false,\n        },\n        maxValue: {\n            type: Number,\n            default: 100,\n            required: false,\n        },\n    },\n\n    computed: {\n        rightPointClasses() {\n            return {\n                'swag-migration-progress-bar__bubble': true,\n                'swag-migration-progress-bar__bubble--disabled': this.value < this.maxValue,\n                'swag-migration-progress-bar__bubble--active': this.value >= this.maxValue,\n            };\n        },\n    },\n});\n","export default \"{% block swag_migration_progress_bar %}\\n    <div class=\\\"swag-migration-progress-bar\\\">\\n\\n        {% block swag_migration_progress_bar_heading %}\\n            <div class=\\\"swag-migration-progress-bar__heading\\\">\\n                {{ title }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_progress_bar %}\\n            <div class=\\\"swag-migration-progress-bar__progress-bar-container\\\">\\n\\n                {% block swag_migration_progress_bar_left_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__left-point\\\">\\n\\n                        {% block swag_migration_progress_bar_left_bubble %}\\n                            <div class=\\\"swag-migration-progress-bar__bubble swag-migration-progress-bar__bubble--active\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-circle-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_left_description %}\\n                            <div class=\\\"swag-migration-progress-bar__left-description\\\">\\n                                {{ leftPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_center_bar %}\\n                    <div class=\\\"swag-migration-progress-bar__center-bar\\\">\\n\\n                        {% block swag_migration_progress_bar_progress_bar %}\\n                            <sw-progress-bar class=\\\"swag-migration-progress-bar__progress-bar\\\" :value=\\\"value\\\" :maxValue=\\\"maxValue\\\"></sw-progress-bar>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_caption %}\\n                            <div class=\\\"swag-migration-progress-bar__caption\\\">\\n                                {{ value }} / {{ maxValue }}\\n                            </div>\\n                        {% endblock%}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_progress_bar_right_point %}\\n                    <div class=\\\"swag-migration-progress-bar__point swag-migration-progress-bar__right-point\\\">\\n\\n                        {% block swag_migration_progress_bar_right_bubble %}\\n                            <div :class=\\\"rightPointClasses\\\">\\n                                <sw-icon class=\\\"swag-migration-progress-bar__icon\\\" name=\\\"regular-checkmark-xs\\\" size=\\\"16px\\\" small></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_progress_bar_right_description %}\\n                            <div class=\\\"swag-migration-progress-bar__right-description\\\">\\n                                {{ rightPointDescription }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-assistant.html.twig';\nimport './swag-migration-assistant.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-assistant', {\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    template,\n});\n","export default \"{% block swag_migration_assistant %}\\n    <sw-card class=\\\"swag-migration-assistant\\\"\\n             position-identifier=\\\"swag-migration-assistant\\\"\\n             :title=\\\"$tc('swag-migration.index.assistantCard.title')\\\">\\n\\n        {% block swag_migration_assistant_headline %}\\n            <h4 class=\\\"swag-migration-assistant__headline\\\">\\n                {{ $tc('swag-migration.index.assistantCard.headline') }}\\n            </h4>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_connection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_connection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-connection.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.connection.content') }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_connection_content_link %}\\n                    <div class=\\\"swag-migration-assistant__link\\\">\\n                        <a class=\\\"link\\\" target=\\\"_blank\\\" href=\\\"http://docs.shopware.com/en/migration-en\\\">{{ $tc('swag-migration.index.assistantCard.connection.link') }}</a>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_dataSelection %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_dataSelection_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-dataSelection.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_dataSelection_content %}\\n                    <p class=\\\"swag-migration-assistant__content\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.dataSelection.content') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_migrationOverview %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_migrationOverview_illustration %}\\n                    <img class=\\\"swag-migration-assistant__illustration\\\"\\n                         :src=\\\"assetFilter('/swagmigrationassistant/static/img/assistant-migrationOverview.svg')\\\">\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.migrationOverview.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_assistant_migrationOverview_content %}\\n                <p class=\\\"swag-migration-assistant__content\\\">{{ $tc('swag-migration.index.assistantCard.migrationOverview.content') }}</p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_assistant_finish %}\\n            <div class=\\\"swag-migration-assistant__paragraph\\\">\\n\\n                {% block swag_migration_assistant_finish_title %}\\n                    <h5 class=\\\"swag-migration-assistant__title\\\">\\n                        {{ $tc('swag-migration.index.assistantCard.finish') }}\\n                    </h5>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-confirm-warning.html.twig';\nimport './swag-migration-confirm-warning.scss';\n\nconst { Component } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-confirm-warning', {\n    template,\n\n    data() {\n        return {\n            isCurrencyChecked: false,\n            isLanguageChecked: false,\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n        ]),\n\n        hasDifferentCurrency() {\n            return this.sourceSystemCurrency !== this.targetSystemCurrency;\n        },\n\n        sourceSystemCurrency() {\n            return this.environmentInformation.sourceSystemCurrency;\n        },\n\n        targetSystemCurrency() {\n            return this.environmentInformation.targetSystemCurrency;\n        },\n\n        hasDifferentLanguage() {\n            return this.sourceSystemLanguage !== this.targetSystemLanguage;\n        },\n\n        sourceSystemLanguage() {\n            return this.environmentInformation.sourceSystemLocale;\n        },\n\n        targetSystemLanguage() {\n            return this.environmentInformation.targetSystemLocale;\n        },\n\n        isContinuable() {\n            return (!this.hasDifferentCurrency || this.isCurrencyChecked) &&\n                (!this.hasDifferentLanguage || this.isLanguageChecked);\n        },\n    },\n\n    methods: {\n        onCheckboxValueChanged() {\n            this.$emit('confirmation-change', this.isContinuable);\n        },\n    },\n});\n","export default \"{% block swag_migration_confirm_warning %}\\n    <div class=\\\"swag-migration-confirm-warning\\\">\\n\\n        {% block swag_migration_confirm_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentCurrency\\\"\\n                class=\\\"swag-migration-confirm-warning\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning\\\"\\n            >\\n\\n                {% block swag_migration_confirm_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.text', 0, { sourceSystemCurrency, targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.currencyMismatch.question', 0, { targetSystemCurrency }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model:value=\\\"isCurrencyChecked\\\"\\n                                       @update:value=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block swag_migration_confirm_language_warning_card %}\\n            <sw-card\\n                v-if=\\\"hasDifferentLanguage\\\"\\n                class=\\\"swag-migration-confirm-warning__card\\\"\\n                position-identifier=\\\"swag-migration-confirm-warning__card\\\"\\n            >\\n\\n                {% block swag_migration_confirm_language_warning_bubble %}\\n                    <div class=\\\"swag-migration-confirm-warning__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-confirm-warning__bubble-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_title %}\\n                    <h5 class=\\\"swag-migration-confirm-warning__title\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.title') }}\\n                    </h5>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_text %}\\n                    <p class=\\\"swag-migration-confirm-warning__text\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.text', 0, { sourceSystemLanguage, targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_question %}\\n                    <p class=\\\"swag-migration-confirm-warning__question\\\">\\n                        {{ $tc('swag-migration.index.confirmWarningCard.languageMismatch.question', 0, { targetSystemLanguage }) }}\\n                    </p>\\n                {% endblock %}\\n\\n                {% block swag_migration_confirm_language_warning_checkbox %}\\n                    <sw-checkbox-field class=\\\"swag-migration-confirm-warning__checkbox\\\"\\n                                       :label=\\\"$tc('swag-migration.index.confirmWarningCard.currencyMismatch.checkboxLabel')\\\"\\n                                       v-model:value=\\\"isLanguageChecked\\\"\\n                                       @update:value=\\\"onCheckboxValueChanged\\\">\\n                    </sw-checkbox-field>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-media-process.html.twig';\nimport './swag-migration-media-process.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-media-process', {\n    template,\n});\n","export default \"{% block swag_migration_media_process %}\\n    <sw-card class=\\\"swag-migration-media-process\\\" position-identifier=\\\"swag-migration-media-process\\\">\\n\\n        {% block swag_migration_media_process_content %}\\n            <div class=\\\"swag-migration-media-process__content\\\">\\n\\n                {% block swag_migration_media_process_icon %}\\n                    <div class=\\\"swag-migration-media-process__bubble\\\">\\n                        <sw-icon class=\\\"swag-migration-media-process__icon\\\" name=\\\"regular-activity\\\" size=\\\"36px\\\" decorative></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_title %}\\n                    <div class=\\\"swag-migration-media-process__title\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.title') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_media_process_message %}\\n                    <p class=\\\"swag-migration-media-process__message\\\">\\n                        {{ $tc('swag-migration.index.loadingScreenCard.mediaProcessScreen.message') }}\\n                    </p>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card.html.twig';\nimport './swag-migration-tab-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @example\n * <swag-migration-tab-card>\n *  <swag-migration-tab-card-item title=\"Item 1\">\n *      My item content 1\n *  </swag-migration-tab-card-item>\n *  <swag-migration-tab-card-item title=\"Item 2\">\n *      My item content 2\n *  </swag-migration-tab-card-item>\n * </swag-migration-tab-card>\n *\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: false,\n        },\n        items: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            selectedNumber: '',\n        };\n    },\n\n    computed: {\n        tabItems() {\n            return this.$refs.swTabsItems;\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.$nextTick(() => {\n                // let the tabs component know that the content may need a scrollbar\n                this.$refs.tabs.checkIfNeedScroll();\n                this.$refs.tabs.addScrollbarOffset();\n\n                // select first tab\n                if (this.tabItems !== undefined && this.tabItems.length > 0) {\n                    this.selectedNumber = this.tabItems[0].name;\n                    setTimeout(() => {\n                        this.$refs.tabs.setActiveItem(this.tabItems[0]);\n                    });\n                }\n            });\n        },\n\n        onNewActiveItem(item) {\n            this.$refs.contentContainer[this.selectedNumber].setActive(false);\n            this.selectedNumber = item.name;\n            this.$refs.contentContainer[this.selectedNumber].setActive(true);\n        },\n\n        getErrorCountForGroupTab(group) {\n            return group.mapping.reduce((currentValue, mapping) => {\n                if (mapping.destinationUuid === null || mapping.destinationUuid.length === 0) {\n                    return currentValue + 1;\n                }\n\n                return currentValue;\n            }, 0);\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card %}\\n    <div class=\\\"swag-migration-tab-card\\\">\\n        <sw-card\\n            class=\\\"sw-card--grid\\\"\\n            ref=\\\"card\\\"\\n            :title=\\\"title\\\"\\n            position-identifier=\\\"swag-migration-tab-card\\\"\\n        >\\n            <template #tabs>\\n\\n                {% block swag_migration_tab_card_item_tab %}\\n                    <sw-tabs\\n                        :small=\\\"false\\\"\\n                        ref=\\\"tabs\\\"\\n                        @new-item-active=\\\"onNewActiveItem\\\"\\n                        position-identifier=\\\"swag-migration-tab-card-item-tab\\\"\\n                    >\\n                        <sw-tabs-item\\n                            v-for=\\\"(item, key) in items\\\"\\n                            :name=\\\"key.toString()\\\"\\n                            :key=\\\"key.toString() + '-tab'\\\"\\n                            ref=\\\"swTabsItems\\\"\\n                        >\\n\\n                            {% block swag_migration_tab_card_item_tab_content %}\\n                                <span class=\\\"swag-migration-tab-card__title\\\">\\n                                    {{ $tc(`swag-migration.index.premappingCard.group.${item.entity}`) }}\\n                                </span>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_tab_card_item_tab_invalid_badge %}\\n                                <span v-show=\\\"item.errorBadgeNumber\\\" class=\\\"swag-migration-tab-card__invalid-badge\\\">\\n                                    {{ getErrorCountForGroupTab(item) }}\\n                                </span>\\n                            {% endblock %}\\n                        </sw-tabs-item>\\n                    </sw-tabs>\\n                {% endblock %}\\n            </template>\\n\\n            <template\\n                v-for=\\\"(item, key) in items\\\"\\n                :key=\\\"key.toString() + '-content'\\\"\\n            >\\n                <swag-migration-tab-card-item ref=\\\"contentContainer\\\">\\n                    <slot\\n                        name=\\\"items\\\"\\n                        :item=\\\"item\\\"\\n                    ></slot>\\n                </swag-migration-tab-card-item>\\n            </template>\\n\\n            <slot>\\n                {% block swag_migration_tab_card_slot %}{% endblock %}\\n            </slot>\\n        </sw-card>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-tab-card-item.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-tab-card-item', {\n    template,\n\n    data() {\n        return {\n            active: false,\n        };\n    },\n\n    methods: {\n        setActive(active) {\n            this.active = active;\n        },\n    },\n});\n","export default \"{% block swag_migration_tab_card_item %}\\n    <div class=\\\"swag-migration-tab-card-item\\\">\\n        <div v-show=\\\"active\\\">\\n            <slot>\\n                {% block swag_migration_tab_card_item_slot %}{% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-grid-selection.html.twig';\nimport './swag-migration-grid-selection.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-grid-selection', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        choices: {\n            type: Array,\n            required: true,\n        },\n        mapping: {\n            type: Array,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            items: [],\n            disableRouteParams: true,\n            limit: 10,\n            paginationSteps: [5, 10, 15, 20, 25, 30],\n        };\n    },\n\n    methods: {\n        getList() {\n            this.total = this.mapping.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.items = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.items.push(this.mapping[i]);\n            }\n\n            return this.items;\n        },\n\n        onInput() {\n            this.$emit('update:value');\n        },\n\n        getClassesAfterValidation(item) {\n            const hasError = item.destinationUuid === null || item.destinationUuid.length === 0;\n            return { 'has--error': hasError };\n        },\n    },\n});\n","export default \"{% block swag_migration_grid_selection %}\\n    <div class=\\\"swag-migration-grid-selection\\\">\\n\\n        {% block swag_migration_grid_selection_grid %}\\n            <sw-grid ref=\\\"tableDataGrid\\\"\\n                     :items=\\\"items\\\"\\n                     :selectable=\\\"false\\\">\\n                <template #columns=\\\"{ item }\\\">\\n\\n                    {% block swag_migration_grid_selection_grid_column_description %}\\n                        <sw-grid-column flex=\\\"1fr\\\" :label=\\\"$tc('swag-migration.index.premappingCard.previousTitle')\\\">\\n                            {{ item.description }}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_grid_selection_grid_column_choice %}\\n                        <sw-grid-column class=\\\"swag-migration-grid-selection__choice-column\\\"\\n                                        flex=\\\"1fr\\\"\\n                                        :label=\\\"$tc('swag-migration.index.premappingCard.newAssignmentTitle')\\\">\\n\\n                            {% block swag_migration_grid_selection_grid_column_choice_field %}\\n                                <sw-select-field\\n                                    v-model:value=\\\"item.destinationUuid\\\"\\n                                    class=\\\"swag-migration-grid-selection__choice-field\\\"\\n                                    :class=\\\"getClassesAfterValidation(item)\\\"\\n                                    @update:value=\\\"onInput\\\"\\n                                >\\n                                    <option\\n                                        class=\\\"sw-field--select__placeholder-option\\\"\\n                                        :value=\\\"''\\\"\\n                                    >\\n                                        {{ $tc('swag-migration.index.premappingCard.placeholder') }}\\n                                    </option>\\n                                    <option v-for=\\\"choice in choices\\\" :key=\\\"choice.uuid\\\" :value=\\\"choice.uuid\\\">\\n                                        {{ choice.description }}\\n                                    </option>\\n                                </sw-select-field>\\n                            {% endblock %}\\n                        </sw-grid-column>\\n                    {% endblock %}\\n                </template>\\n\\n                {% block swag_migration_grid_selection_grid_pagination %}\\n                    <template #pagination>\\n                        <sw-pagination\\n                            :page=\\\"page\\\"\\n                            :limit=\\\"limit\\\"\\n                            :total=\\\"total\\\"\\n                            :total-visible=\\\"7\\\"\\n                            :steps=\\\"paginationSteps\\\"\\n                            @page-change=\\\"onPageChange\\\">\\n                        </sw-pagination>\\n                    </template>\\n                {% endblock %}\\n            </sw-grid>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-expand-div.html.twig';\nimport './swag-migration-expand-div.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-expand-div', {\n    template,\n\n    props: {\n        expandTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n\n        collapseTitle: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isExpanded: false,\n        };\n    },\n\n    methods: {\n        onClick() {\n            this.isExpanded = !this.isExpanded;\n        },\n    },\n});\n","export default \"{% block swag_migration_expand_div %}\\n    <div class=\\\"swag-migration-expand-div\\\">\\n        <div class=\\\"swag-migration-expand-div__title\\\">\\n            <div class=\\\"swag-migration-expand-div__link\\\"\\n                 @click=\\\"onClick\\\">\\n                <div v-if=\\\"isExpanded\\\">\\n                    {{ expandTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-up\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n                <div v-else>\\n                    {{ collapseTitle }}\\n                    <sw-icon class=\\\"swag-migration-expand-div__icon\\\"\\n                             name=\\\"regular-chevron-circle-down\\\"\\n                             size=\\\"16px\\\">\\n                    </sw-icon>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div v-if=\\\"isExpanded\\\" class=\\\"swag-migration-expand-div__slot\\\">\\n            <slot>\\n\\n                {% block swag_migration_expand_div_slot %}\\n                {% endblock %}\\n            </slot>\\n        </div>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-shop-avatar.html.twig';\nimport './swag-migration-shop-avatar.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-shop-avatar', {\n    template,\n\n    props: {\n        size: {\n            type: String,\n            required: true,\n        },\n        color: {\n            type: String,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            fontSize: 16,\n            lineHeight: 16,\n        };\n    },\n\n    computed: {\n        avatarStyle() {\n            return {\n                width: this.size,\n                height: this.size,\n                'background-color': this.color,\n                'font-size': `${this.fontSize}px`,\n                'line-height': `${this.lineHeight}px`,\n            };\n        },\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.generateAvatarInitialsSize();\n        },\n\n        generateAvatarInitialsSize() {\n            const avatarSize = this.$refs.shopAvatar.offsetHeight;\n\n            this.fontSize = Math.round(avatarSize * 0.4);\n            this.lineHeight = Math.round(avatarSize * 0.98);\n        },\n    },\n});\n","export default \"{% block swag_migration_shop_avatar %}\\n    <span class=\\\"swag-migration-shop-avatar\\\"\\n          :style=\\\"avatarStyle\\\"\\n          role=\\\"img\\\"\\n          ref=\\\"shopAvatar\\\">\\n        <slot></slot>\\n    </span>\\n{% endblock %}\";","import template from './swag-migration-settings-icon.html.twig';\nimport './swag-migration-settings-icon.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-settings-icon', {\n    template,\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_settings_icon %}\\n    <img\\n        class=\\\"swag-migration-settings_icon__img\\\"\\n        :src=\\\"assetFilter('/swagmigrationassistant/static/img/migration-assistant-plugin.svg')\\\"\\n    >\\n{% endblock %}\\n\";","import template from './swag-migration-dashboard-card.html.twig';\nimport './swag-migration-dashboard-card.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-dashboard-card', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n});\n","export default \"{% block swag_migration_dashboard_card %}\\n    <sw-card class=\\\"swag-migration-dashboard-card\\\" position-identifier=\\\"swag-migration-dashboard-card\\\">\\n\\n        {% block swag_migration_dashboard_card_wrapper %}\\n            {%  block swag_migration_dashboard_card_title %}\\n                <template #title>\\n                    <span class=\\\"swag-migration-dashboard-card__title\\\">\\n                        {{ $tc('swag-migration.dashboard.title') }}\\n                    </span>\\n                </template>\\n            {% endblock %}\\n\\n            {% block swag_migration_dashboard_card_container %}\\n                <sw-container class=\\\"swag-migration-shop-information\\\" rows=\\\"auto auto\\\">\\n                    {% block fuuuu %}\\n                    {% endblock %}\\n\\n                    {%  block swag_migration_dashboard_card_content %}\\n                        <div class=\\\"swag-migration-dashboard-card__content\\\">\\n\\n                            {%  block swag_migration_dashboard_card_wrapper %}\\n                                <div class=\\\"swag-migration-dashboard-card__wrapper\\\">\\n\\n                                    {%  block swag_migration_dashboard_card_left_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__left-content\\\">\\n\\n                                            {%  block swag_migration_dashboard_card_headline %}\\n                                                <div class=\\\"swag-migration-dashboard-card__headline\\\">\\n                                                    {{ $tc('swag-migration.dashboard.headline') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_information %}\\n                                                <div class=\\\"swag-migration-dashboard-card__information\\\">\\n                                                    {{ $tc('swag-migration.dashboard.information') }}\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            {%  block swag_migration_dashboard_card_button %}\\n                                                <sw-button variant=\\\"primary\\\" :routerLink=\\\"{ name: 'swag.migration.index.main'}\\\">\\n                                                    {{ $tc('swag-migration.dashboard.button') }}\\n                                                </sw-button>\\n                                            {%  endblock %}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {%  block swag_migration_dashboard_card_right_content %}\\n                                        <div class=\\\"swag-migration-dashboard-card__right-content\\\">\\n                                            <img :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-introduction.svg')\\\">\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </sw-container>\\n            {% endblock %}\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-index.html.twig';\n\nconst { Component, State } = Shopware;\nconst { mapState, mapGetters } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-index', {\n    template,\n\n    inject: {\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    data() {\n        return {\n            storesInitializing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'isMigrating',\n            'environmentInformation',\n            'connectionId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n            'dataSelectionTableData',\n        ]),\n\n        ...mapGetters({\n            storeIsMigrationAllowed: 'swagMigration/ui/isMigrationAllowed',\n        }),\n\n        isMigrationAllowed() {\n            return this.storeIsMigrationAllowed &&\n                this.environmentInformation.migrationDisabled === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isMigrating ||\n                !this.isMigrationAllowed;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.connectionId === null\n                || Object.keys(this.environmentInformation).length === 0\n            ) {\n                return this.migrationProcessStoreInitService.initProcessStore().then(() => {\n                    return this.migrationUiStoreInitService.initUiStore();\n                }).catch(() => {}).finally(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            if (this.dataSelectionTableData.length === 0) {\n                return this.migrationUiStoreInitService.initUiStore().then(() => {\n                    this.storesInitializing = false;\n                }).catch(() => {\n                    this.storesInitializing = false;\n                });\n            }\n\n            this.storesInitializing = false;\n            return Promise.resolve();\n        },\n\n        onMigrate() {\n            if (this.$refs.contentComponent.onMigrate !== undefined) {\n                this.$refs.contentComponent.onMigrate();\n            } else {\n                this.$nextTick(() => {\n                    State.commit('swagMigration/ui/setStartMigration', true);\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            }\n        },\n\n        /**\n         * Calls methods on the child router view component (contentComponent) dynamically\n         * if existing. This is used to trigger some method on the child via action button.\n         *\n         * @param methodName\n         */\n        onActionButtonClick(methodName) {\n            if (this.$refs.contentComponent[methodName] !== undefined) {\n                this.$refs.contentComponent[methodName]();\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_index %}\\n    <sw-page class=\\\"swag-migration-index\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template v-if=\\\"!storesInitializing\\\" #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" @click=\\\"onMigrate\\\" :disabled=\\\"migrateButtonDisabled\\\">\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-card-view v-if=\\\"!storesInitializing\\\">\\n\\n                    {% block swag_migration_index_tabs %}\\n                        <sw-tabs class=\\\"swag-migration-index-tabs\\\" position-identifier=\\\"swag-migration-index-tabs\\\">\\n\\n                            {% block swag_migration_index_tab_main %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.main' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabMain')\\\">\\n                                    {{ $tc('swag-migration.general.tabMain') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_data_selector %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.dataSelector' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabDataSelector')\\\">\\n                                    {{ $tc('swag-migration.general.tabDataSelector') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_index_tab_history %}\\n                                <sw-tabs-item :route=\\\"{ name: 'swag.migration.index.history' }\\\"\\n                                              :title=\\\"$tc('swag-migration.general.tabHistory')\\\">\\n                                    {{ $tc('swag-migration.general.tabHistory') }}\\n                                </sw-tabs-item>\\n                            {% endblock %}\\n                        </sw-tabs>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_index_content_view %}\\n                        <router-view ref=\\\"contentComponent\\\">\\n                        </router-view>\\n                    {% endblock %}\\n                </sw-card-view>\\n\\n                {% block swag_migration_index_loader_content %}\\n                    <sw-loader v-if=\\\"storesInitializing\\\"></sw-loader>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-empty-screen.html.twig';\nimport './swag-migration-empty-screen.scss';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-empty-screen', {\n    template,\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    methods: {\n        onConnectClick() {\n            this.$router.push({name: 'swag.migration.wizard.introduction'});\n        },\n    },\n});\n","export default \"{% block swag_migration_empty_screen %}\\n    <sw-page class=\\\"swag-migration-empty-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n                <sw-button variant=\\\"primary\\\" disabled>\\n                    {{ $tc('swag-migration.index.migrateButton') }}\\n                </sw-button>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_content %}\\n            <template #content>\\n                <sw-empty-state :title=\\\"$tc('swag-migration.emptyScreen.title')\\\">\\n                    <template>\\n                        <i18n-t class=\\\"swag-migration-empty-screen__description\\\"\\n                                keypath=\\\"swag-migration.emptyScreen.description\\\"\\n                                tag=\\\"p\\\">\\n                            <template #linebreak>\\n                                <br>\\n                            </template>\\n                            <template #link>\\n                                <a class=\\\"link\\\"\\n                                   href=\\\"https://docs.shopware.com/en/migration-en\\\"\\n                                   target=\\\"_blank\\\">\\n                                    {{ $tc('swag-migration.emptyScreen.link') }}\\n                                </a>\\n                            </template>\\n                        </i18n-t>\\n                    </template>\\n\\n                    <template #actions>\\n                        <sw-button variant=\\\"primary\\\"\\n                                   @click=\\\"onConnectClick\\\">\\n                            {{ $tc('swag-migration.emptyScreen.connectButton') }}\\n                        </sw-button>\\n                    </template>\\n                </sw-empty-state>\\n            </template>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-main-page.html.twig';\nimport './swag-migration-main-page.scss';\n\nconst { Component, State } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-main-page', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'environmentInformation',\n            'connectionId',\n            'isMigrating',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'isLoading',\n            'startMigration',\n        ]),\n\n        displayWarnings() {\n            return this.environmentInformation.displayWarnings;\n        },\n\n        connectionEstablished() {\n            return this.environmentInformation !== undefined &&\n                (\n                    this.environmentInformation.requestStatus.isWarning === true ||\n                    (\n                        this.environmentInformation.requestStatus.isWarning === false &&\n                        this.environmentInformation.requestStatus.code === ''\n                    )\n                );\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return;\n            }\n\n            if (Object.keys(this.environmentInformation).length < 1) {\n                this.$router.push({ name: 'swag.migration.emptyScreen' });\n                return;\n            }\n\n            if (this.isMigrating) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            let isTakeoverForbidden = false;\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                isTakeoverForbidden = isRunning;\n            });\n\n            let isMigrationRunning = isTakeoverForbidden;\n            if (!isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    isMigrationRunning = runState.isMigrationRunning;\n                });\n            }\n\n            if (isMigrationRunning) {\n                this.$router.push({ name: 'swag.migration.processScreen' });\n                return;\n            }\n\n            if (this.startMigration) {\n                await this.onMigrate();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        async onMigrate() {\n            this.$nextTick().then(() => {\n                State.commit('swagMigration/process/setIsMigrating', true);\n                /**\n                 * reset the premapping because it does not get fetched again if not empty\n                 * this will ensure that the user can navigate outside of the module and keep the premapping\n                 */\n                State.commit('swagMigration/ui/setPremapping', []);\n\n                // navigate to process screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.$router.push({ name: 'swag.migration.processScreen' });\n            });\n        },\n    },\n});\n","export default \"{% block swag_migration_index_main_page %}\\n    <div class=\\\"swag-migration-index-main-page\\\">\\n\\n        {% block swag_migration_index_main_page_content %}\\n            <div v-if=\\\"!isLoading\\\">\\n\\n                {% block swag_migration_index_main_page_warnings %}\\n                    <div class=\\\"swag-migration-index-main-page__warnings\\\">\\n                        <template\\n                            v-for=\\\"warning in displayWarnings\\\"\\n                            :key=\\\"warning.snippetKey\\\"\\n                        >\\n\\n                            <sw-alert\\n                                class=\\\"swag-migration-index-main-page__warning\\\"\\n                                variant=\\\"warning\\\"\\n                            >\\n                                {{ $tc(warning.snippetKey, warning.pluralizationCount, warning.snippetArguments) }}\\n                            </sw-alert>\\n                        </template>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_shopInformation %}\\n                    <swag-migration-shop-information :connected=\\\"connectionEstablished\\\">\\n                    </swag-migration-shop-information>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_assistant %}\\n            <swag-migration-assistant v-if=\\\"!isLoading\\\"></swag-migration-assistant>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_main_page_loader %}\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history.html.twig';\nimport './swag-migration-history.scss';\n\nconst { Component, Mixin, State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            migrationRuns: [],\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            oldParams: {},\n            context: Shopware.Context.api,\n            logDownloadEndpoint: '',\n            runIdForLogDownload: '',\n            runIdForRunClear: '',\n            showRunClearConfirmModal: false,\n            runClearConfirmModalIsLoading: false,\n            isMediaProcessing: true,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        migrationColumns() {\n            return this.getMigrationColumns();\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        },\n    },\n\n    created() {\n        this.migrationService.isMediaProcessing().then((response) => {\n            this.isMediaProcessing = response.data;\n        });\n        this.logDownloadEndpoint = '/api/_action/' +\n            `${this.migrationService.getApiBasePath()}/download-logs-of-run`;\n    },\n\n    methods: {\n        getMigrationColumns() {\n            return [\n                {\n                    property: 'connection.name',\n                    dataIndex: 'connection.name',\n                    label: this.$tc('swag-migration.history.connectionName'),\n                    primary: true,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemDomain',\n                    dataIndex: 'environmentInformation.sourceSystemDomain',\n                    label: this.$tc('swag-migration.history.shopDomain'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'environmentInformation.sourceSystemName',\n                    dataIndex: 'environmentInformation.sourceSystemName',\n                    label: this.$tc('swag-migration.history.shopSystem'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'connection.profile',\n                    dataIndex: 'connection.profileName',\n                    label: this.$tc('swag-migration.history.profileAndGateway'),\n                    allowResize: true,\n                },\n                {\n                    property: 'status',\n                    dataIndex: 'status',\n                    label: this.$tc('swag-migration.history.status'),\n                    align: 'center',\n                    allowResize: true,\n                },\n                {\n                    property: 'progress',\n                    dataIndex: 'progress',\n                    label: this.$tc('swag-migration.history.selectedData'),\n                    visible: false,\n                    allowResize: true,\n                },\n                {\n                    property: 'createdAt',\n                    dataIndex: 'createdAt',\n                    label: this.$tc('swag-migration.history.importDateTime'),\n                    align: 'right',\n                    allowResize: true,\n                },\n            ];\n        },\n\n        getList() {\n            this.isLoading = true;\n\n            const params = this.normalizeListingParams(\n                this.getMainListingParams(),\n            );\n\n            if (JSON.stringify(this.oldParams) === JSON.stringify(params)) {\n                // Do not request the data again if the parameters don't change.\n                // For example if the detail window (child route) is opened.\n                this.isLoading = false;\n                return Promise.resolve(this.migrationRuns);\n            }\n\n            this.oldParams = params;\n            const criteria = new Criteria(params.page, params.limit);\n            criteria.addSorting(Criteria.sort(params.sortBy, params.sortDirection, params.naturalSorting));\n\n            return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n                this.total = runs.total;\n                this.migrationRuns = runs;\n                this.isLoading = false;\n\n                return this.migrationRuns;\n            });\n        },\n\n        /**\n         * This will convert string values to int values in the param object.\n         * It is needed because Vue Routers '$router.go(-1)' method will mix up\n         * the types of the original params object for integers to strings.\n         *\n         * @param {Object} params\n         * @returns {Object}\n         */\n        normalizeListingParams(params) {\n            params.limit = parseInt(params.limit, 10);\n            params.page = parseInt(params.page, 10);\n\n            return params;\n        },\n\n        onMigrateButtonClick() {\n            State.commit('swagMigration/ui/setStartMigration', true);\n            this.$router.push({ name: 'swag.migration.index.main' });\n        },\n\n        onContextDownloadLogFile(runId) {\n            this.runIdForLogDownload = runId;\n            this.$nextTick(() => {\n                this.$refs.downloadLogsOfRunForm.submit();\n            });\n        },\n\n        clearDataOfRun(runId) {\n            this.runClearConfirmModalIsLoading = true;\n            return this.migrationService.clearDataOfRun(runId).then(() => {\n                this.showRunClearConfirmModal = false;\n                this.runClearConfirmModalIsLoading = false;\n                this.$router.go();\n            }).catch(() => {\n                this.createNotificationError({\n                    message: this.$t('swag-migration.index.shopInfoCard.resetMigrationConfirmDialog.errorNotification.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onContextClearRunClicked(runId) {\n            this.runIdForRunClear = runId;\n            this.showRunClearConfirmModal = true;\n        },\n\n        onClearRunConfirmed() {\n            this.clearDataOfRun(this.runIdForRunClear);\n        },\n    },\n});\n","export default \"{% block swag_migration_history %}\\n    <sw-card class=\\\"swag-migration-history\\\"\\n             :isLoading=\\\"isLoading\\\"\\n             :large=\\\"true\\\"\\n             position-identifier=\\\"swag-migration-history\\\">\\n        <template #grid>\\n\\n            {% block swag_migration_history_grid %}\\n                <sw-data-grid v-if=\\\"migrationRuns.length > 0\\\"\\n                              identifier=\\\"swag-migration-history\\\"\\n                              :dataSource=\\\"migrationRuns\\\"\\n                              :columns=\\\"migrationColumns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"true\\\"\\n                              :allowColumnEdit=\\\"true\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_grid_column_status %}\\n                        <template #column-status=\\\"{ item }\\\">\\n                            <sw-icon v-if=\\\"item.status === 'finished'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--finished\\\"\\n                                     name=\\\"regular-checkmark\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'aborted'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--aborted\\\"\\n                                     name=\\\"regular-times\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                            <sw-icon v-else-if=\\\"item.status === 'running'\\\"\\n                                     class=\\\"swag-migration-history__status-icon swag-migration-history__status-icon--loading\\\"\\n                                     name=\\\"regular-circle\\\"\\n                                     size=\\\"16px\\\">\\n                            </sw-icon>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_profile %}\\n                        <template #column-connection.profile=\\\"{ item }\\\">\\n                            {{ item.connection.profileName }} /\\n                            {{ item.connection.gatewayName }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_createdAt %}\\n                        <template #column-createdAt=\\\"{ item }\\\">\\n                            {{ dateFilter(item.createdAt, migrationDateOptions) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_sourceSystemName %}\\n                        <template #column-environmentInformation.sourceSystemName=\\\"{ item }\\\">\\n                            {{ item.environmentInformation.sourceSystemName }}\\n                            {{ item.environmentInformation.sourceSystemVersion }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_column_selectedData %}\\n                        <template #column-progress=\\\"{ item }\\\">\\n                            <swag-migration-history-selected-data :entityGroups=\\\"item.progress\\\">\\n                            </swag-migration-history-selected-data>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_actions %}\\n                        <template #actions=\\\"{ item }\\\">\\n                            <sw-context-menu-item :routerLink=\\\"{ name: 'swag.migration.index.history.detail', params:{ id:item.id } }\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.details') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item @click=\\\"onContextDownloadLogFile(item.id)\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.downloadLogs') }}\\n                            </sw-context-menu-item>\\n                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onContextClearRunClicked(item.id)\\\" :disabled=\\\"isMediaProcessing\\\">\\n                                {{ $tc('swag-migration.history.contextMenu.clearLogs') }}\\n                            </sw-context-menu-item>\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_grid_pagination %}\\n                        <template #pagination>\\n                                <sw-pagination :page=\\\"page\\\"\\n                                               :limit=\\\"limit\\\"\\n                                               :total=\\\"total\\\"\\n                                               :total-visible=\\\"7\\\"\\n                                               @page-change=\\\"onPageChange\\\">\\n                                </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_no_data %}\\n                <div v-if=\\\"migrationRuns.length === 0\\\" class=\\\"swag-migration-history__no-data\\\">\\n                    <p class=\\\"swag-migration-history__no-data-label\\\">\\n                        {{ $tc('swag-migration.history.noData') }}\\n                    </p>\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_router_view %}\\n                <router-view></router-view>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_log_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadLogsOfRunForm\\\"\\n                      :action=\\\"logDownloadEndpoint\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"runIdForLogDownload\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_run_clear_confirm_modal %}\\n                <sw-modal v-if=\\\"showRunClearConfirmModal\\\"\\n                          class=\\\"swag-migration-history__run-clear-confirm-modal\\\"\\n                          :title=\\\"$tc('swag-migration.history.clearRunDialog.title')\\\"\\n                          :isLoading=\\\"runClearConfirmModalIsLoading\\\"\\n                          size=\\\"460px\\\"\\n                          @modal-close=\\\"showRunClearConfirmModal = false\\\">\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.content') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_content_hint %}\\n                        <p class=\\\"swag-migration-history__run-clear-confirm-modal-content-hint\\\">\\n                            {{ $tc('swag-migration.history.clearRunDialog.contentHint') }}\\n                        </p>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_run_clear_confirm_modal_footer %}\\n                        <template #modal-footer>\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_abort %}\\n                                <sw-button size=\\\"small\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"showRunClearConfirmModal = false\\\">\\n                                    {{ $tc('global.default.cancel') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_run_clear_confirm_modal_confirm %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"runClearConfirmModalIsLoading\\\"\\n                                           @click=\\\"onClearRunConfirmed\\\">\\n                                    {{ $tc('global.default.delete') }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                        </template>\\n                    {% endblock %}\\n\\n                </sw-modal>\\n            {% endblock %}\\n\\n        </template>\\n    </sw-card>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail.html.twig';\nimport './swag-migration-history-detail.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    data() {\n        return {\n            runId: '',\n            migrationRun: {},\n            showModal: true,\n            isLoading: true,\n            migrationDateOptions: {\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n            },\n            currentTab: 'data',\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n\n        shopFirstLetter() {\n            return this.migrationRun.environmentInformation.sourceSystemName === undefined ? 'S' :\n                this.migrationRun.environmentInformation.sourceSystemName[0];\n        },\n\n        profileIcon() {\n            return this.migrationRun.connection === null ||\n                this.migrationRun.connection.profile === undefined ||\n                this.migrationRun.connection.profile.icon === undefined ? null : this.migrationRun.connection.profile.icon;\n        },\n\n        connectionName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.name;\n        },\n\n        shopUrl() {\n            return this.migrationRun.environmentInformation.sourceSystemDomain === undefined ? '' :\n                this.migrationRun.environmentInformation.sourceSystemDomain.replace(/^\\s*https?:\\/\\//, '');\n        },\n\n        shopUrlPrefix() {\n            if (this.migrationRun.environmentInformation.sourceSystemDomain === undefined) {\n                return '';\n            }\n\n            const match = this.migrationRun.environmentInformation.sourceSystemDomain.match(/^\\s*https?:\\/\\//);\n            if (match === null) {\n                return '';\n            }\n\n            return match[0];\n        },\n\n        sslActive() {\n            return (this.shopUrlPrefix === 'https://');\n        },\n\n        shopUrlPrefixClass() {\n            return this.sslActive ? 'swag-migration-shop-information__shop-domain-prefix--is-ssl' : '';\n        },\n\n        profileName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.profileName;\n        },\n\n        gatewayName() {\n            return this.migrationRun.connection === null ? '' :\n                this.migrationRun.connection.gatewayName;\n        },\n\n        runStatusSnippet() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration.history.detailPage.status.${this.migrationRun.status}`;\n        },\n\n        runStatusClasses() {\n            return this.migrationRun.status === null ? '' :\n                `swag-migration-history-detail__run-status-value--${this.migrationRun.status}`;\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n\n        dateFilter() {\n            return Shopware.Filter.getByName('date');\n        }\n    },\n\n    created() {\n        if (!this.$route.params.id) {\n            this.isLoading = false;\n            this.onCloseModal();\n            return Promise.resolve();\n        }\n\n        this.runId = this.$route.params.id;\n        const criteria = new Criteria(1, 1);\n        criteria.addFilter(Criteria.equals('id', this.runId));\n\n        return this.migrationRunRepository.search(criteria, this.context).then((runs) => {\n            if (runs.length < 1) {\n                this.isLoading = false;\n                this.onCloseModal();\n                return Promise.resolve();\n            }\n\n            this.migrationRun = runs.first();\n\n            return this.migrationService.getProfileInformation(this.migrationRun.connection.profileName, this.migrationRun.connection.gatewayName).then((profileInformation) => {\n                this.migrationRun.connection.profile = profileInformation.profile;\n\n                this.isLoading = false;\n                this.$nextTick(() => {\n                    this.$refs.tabReference.setActiveItem(this.$refs.dataTabItem);\n                });\n            });\n        }).catch(() => {\n            this.isLoading = false;\n            this.onCloseModal();\n        });\n    },\n\n    methods: {\n        onCloseModal() {\n            this.showModal = false;\n            this.$nextTick(() => {\n                this.$router.go(-1);\n            });\n        },\n\n        newActiveTabItem(item) {\n            this.currentTab = item.name;\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail %}\\n    <div class=\\\"swag-migration-history-detail\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-history-detail__modal\\\"\\n                  size=\\\"800px\\\"\\n                  :title=\\\"$tc('swag-migration.history.detailPage.title')\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_history_detail_modal_content %}\\n                <div v-if=\\\"isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__loading-placeholder\\\">\\n                </div>\\n                <div v-if=\\\"!isLoading\\\"\\n                     class=\\\"swag-migration-history-detail__content\\\">\\n\\n                    {% block swag_migration_history_detail_header %}\\n                        <div class=\\\"swag-migration-history-detail__header\\\">\\n\\n                            {% block swag_migration_history_detail_connectin_avatar %}\\n                                <template v-if=\\\"profileIcon === null || profileIcon === ''\\\">\\n                                    <swag-migration-shop-avatar class=\\\"swag-migration-shop-information__connection-avatar\\\"\\n                                                                color=\\\"#189EFF\\\"\\n                                                                size=\\\"80px\\\">\\n                                        {{ shopFirstLetter }}\\n                                    </swag-migration-shop-avatar>\\n                                </template>\\n\\n                                <template v-else>\\n                                    <img class=\\\"swag-migration-shop-information__profile-avatar\\\"\\n                                         :src=\\\"assetFilter(profileIcon)\\\"\\n                                         size=\\\"80px\\\">\\n                                </template>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_connection_info %}\\n                                <div class=\\\"swag-migration-history-detail__connection-info\\\">\\n\\n                                    {% block swag_migration_history_detail_shop_system %}\\n                                        <div class=\\\"swag-migration-history-detail__connection-name\\\">\\n                                            {{ connectionName }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_shop_domain %}\\n                                        <div v-if=\\\"shopUrl !== ''\\\" class=\\\"swag-migration-history-detail__shop-domain\\\">\\n                                                        <span class=\\\"swag-migration-history-detail__shop-domain-prefix\\\"\\n                                                              :class=\\\"shopUrlPrefixClass\\\">\\n                                                            <sw-icon v-if=\\\"sslActive\\\"\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            <sw-icon v-else\\n                                                                     class=\\\"swag-migration-history-detail__shop-domain-prefix-icon\\\"\\n                                                                     name=\\\"regular-lock-open-s\\\"\\n                                                                     size=\\\"12px\\\">\\n                                                            </sw-icon>\\n                                                            {{ shopUrlPrefix }}</span>{{ shopUrl }}\\n                                        </div>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_profile %}\\n                                        <div class=\\\"swag-migration-history-detail__profile\\\">\\n                                            {{ profileName }} / {{ gatewayName }}\\n                                        </div>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_run_info %}\\n                                <div class=\\\"swag-migration-history-detail__run-info\\\">\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.timestamp') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-timestamp-value\\\">\\n                                        {{ dateFilter(migrationRun.createdAt, migrationDateOptions) }}\\n                                    </div>\\n\\n                                    <div class=\\\"swag-migration-history-detail__run-status-label\\\">\\n                                        {{ $tc('swag-migration.history.detailPage.runStatus') }}\\n                                    </div>\\n                                    <div class=\\\"swag-migration-history-detail__run-status-value\\\" :class=\\\"runStatusClasses\\\">\\n                                        {{ $tc(runStatusSnippet) }}\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_body %}\\n                        <div class=\\\"swag-migration-history-detail__body\\\">\\n\\n                            {% block swag_migration_history_detail_body_tabs %}\\n                                <sw-tabs\\n                                    ref=\\\"tabReference\\\"\\n                                    @new-item-active=\\\"newActiveTabItem\\\"\\n                                    position-identifier=\\\"swag-migration-history-detail-body-tabs\\\"\\n                                >\\n\\n                                    {% block swag_migration_history_detail_body_tabs_data %}\\n                                        <sw-tabs-item name=\\\"data\\\" ref=\\\"dataTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.data') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n\\n                                    {% block swag_migration_history_detail_body_tabs_errors %}\\n                                        <sw-tabs-item name=\\\"errors\\\" ref=\\\"errorsTabItem\\\">\\n                                            {{ $tc('swag-migration.history.detailPage.errors') }}\\n                                        </sw-tabs-item>\\n                                    {% endblock %}\\n                                </sw-tabs>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_data %}\\n                                <swag-migration-history-detail-data v-show=\\\"currentTab === 'data'\\\"\\n                                                                    :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-data>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_history_detail_body_errors %}\\n                                <swag-migration-history-detail-errors v-show=\\\"currentTab === 'errors'\\\"\\n                                                                      :migrationRun=\\\"migrationRun\\\">\\n                                </swag-migration-history-detail-errors>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_footer %}\\n                <template #modal-footer>\\n                    <sw-button size=\\\"small\\\" @click=\\\"onCloseModal\\\">\\n                        {{ $tc('swag-migration.history.detailPage.close') }}\\n                    </sw-button>\\n                </template>\\n            {% endblock %}\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail-errors.html.twig';\nimport './swag-migration-history-detail-errors.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-errors', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationErrors: null,\n            migrationErrors: [],\n            sortBy: 'count',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n            downloadUrl: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'title',\n                    dataIndex: 'title',\n                    label: this.$tc('swag-migration.history.detailPage.errorCode'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n                {\n                    property: 'count',\n                    dataIndex: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.errorCount'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: true,\n                },\n            ];\n        },\n    },\n\n    methods: {\n        async getList() {\n            this.isLoading = true;\n            const params = this.getMainListingParams();\n\n            if (this.allMigrationErrors === null) {\n                await this.loadAllMigrationErrors();\n            }\n\n            this.applySorting(params);\n\n            const startIndex = (params.page - 1) * this.limit;\n            const endIndex = Math.min((params.page - 1) * this.limit + this.limit, this.allMigrationErrors.length);\n            this.migrationErrors = [];\n            for (let i = startIndex; i < endIndex; i += 1) {\n                this.migrationErrors.push(this.allMigrationErrors[i]);\n            }\n\n            this.isLoading = false;\n            return this.migrationErrors;\n        },\n\n        loadAllMigrationErrors() {\n            return this.migrationService.getGroupedLogsOfRun(\n                this.migrationRun.id,\n            ).then((response) => {\n                this.total = response.total;\n                this.allMigrationErrors = response.items;\n                this.allMigrationErrors.forEach((item) => {\n                    item.title = this.$tc(this.getErrorTitleSnippet(item), 0, { entity: item.entity });\n                });\n                this.downloadUrl = response.downloadUrl;\n                return this.allMigrationErrors;\n            });\n        },\n\n        applySorting(params) {\n            this.allMigrationErrors.sort((first, second) => {\n                if (params.sortDirection === 'ASC') {\n                    if (first[params.sortBy] < second[params.sortBy]) {\n                        return -1;\n                    }\n\n                    return 1;\n                }\n\n                if (first[params.sortBy] > second[params.sortBy]) {\n                    return -1;\n                }\n\n                return 1;\n            });\n        },\n\n        getErrorTitleSnippet(item) {\n            const snippetKey = item.titleSnippet;\n            if (this.$te(snippetKey)) {\n                return snippetKey;\n            }\n\n            return 'swag-migration.index.error.unknownError';\n        },\n\n        submitDownload() {\n            this.$refs.downloadForm.submit();\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail_errors %}\\n    <div class=\\\"swag-migration-history-detail-errors\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_errors_grid %}\\n                <sw-data-grid v-if=\\\"migrationErrors.length > 0\\\"\\n                              identifier=\\\"swag-migration-history-detail-errors\\\"\\n                              :dataSource=\\\"migrationErrors\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_errors_grid_code%}\\n                        <template #column-title=\\\"{ item }\\\">\\n                            {{ item.title }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.count }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_errors_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_noError %}\\n                <p v-if=\\\"migrationErrors.length === 0\\\"\\n                   class=\\\"swag-migration-history-detail-errors__no-error\\\">\\n                    {{ $tc('swag-migration.history.detailPage.noErrorsOccurred') }}\\n                </p>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_download_form %}\\n                <form class=\\\"swag-migration-history-detail-errors__download-form\\\"\\n                      ref=\\\"downloadForm\\\"\\n                      :action=\\\"downloadUrl\\\"\\n                      method=\\\"POST\\\">\\n                    <input type=\\\"hidden\\\"\\n                           name=\\\"runUuid\\\"\\n                           :value=\\\"migrationRun.id\\\">\\n                </form>\\n            {% endblock %}\\n\\n            {% block swag_migration_history_detail_errors_description %}\\n                <p class=\\\"swag-migration-history-detail-errors__description\\\">\\n                    {{ $tc('swag-migration.history.detailPage.logDescription') }}\\n\\n                    <a class=\\\"link\\\"\\n                       href=\\\"#\\\"\\n                       @click.prevent=\\\"submitDownload\\\">\\n                        {{ $tc('swag-migration.history.detailPage.logDownload') }}\\n                    </a>\\n                </p>\\n            {% endblock %}\\n\\n        </div>\\n\\n        {% block swag_migration_history_detail_errors_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-errors__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-history-detail-data.html.twig';\nimport './swag-migration-history-detail-data.scss';\n\nconst { Component, Mixin } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-history-detail-data', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n    ],\n\n    props: {\n        migrationRun: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            allMigrationData: [],\n            migrationData: [],\n            sortBy: 'createdAt',\n            sortDirection: 'DESC',\n            disableRouteParams: true,\n            limit: 10,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        columns() {\n            return [\n                {\n                    property: 'name',\n                    label: this.$tc('swag-migration.history.detailPage.dataName'),\n                    primary: true,\n                    allowResize: true,\n                    sortable: false,\n                },\n                {\n                    property: 'count',\n                    label: this.$tc('swag-migration.history.detailPage.dataCount'),\n                    allowResize: true,\n                    sortable: false,\n                },\n            ];\n        },\n\n        entityGroups() {\n            return this.migrationRun.progress.filter((group) => (group.id !== 'processMediaFiles'));\n        },\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n\n            // ToDo MIG-35 - Implement sorting\n\n            this.total = this.entityGroups.length;\n            const start = (this.page - 1) * this.limit;\n            const end = Math.min(start + this.limit, this.total);\n            this.migrationData = [];\n\n            // Copy the object references into the display items array (for pagination). Note: Array.slice dont work\n            for (let i = start; i < end; i += 1) {\n                this.migrationData.push(this.entityGroups[i]);\n            }\n\n            this.isLoading = false;\n            return this.items;\n        },\n    },\n});\n","export default \"{% block swag_migration_history_detail_data %}\\n    <div class=\\\"swag-migration-history-detail-data\\\">\\n        <div v-if=\\\"!isLoading\\\">\\n\\n            {% block swag_migration_history_detail_data_grid %}\\n                <sw-data-grid identifier=\\\"swag-migration-history-detail-data\\\"\\n                              :dataSource=\\\"migrationData\\\"\\n                              :columns=\\\"columns\\\"\\n                              :showSelection=\\\"false\\\"\\n                              :showSettings=\\\"false\\\"\\n                              :allowColumnEdit=\\\"false\\\"\\n                              :showActions=\\\"false\\\"\\n                              :sortBy=\\\"sortBy\\\"\\n                              :sortDirection=\\\"sortDirection\\\"\\n                              @column-sort=\\\"onSortColumn\\\">\\n\\n                    {% block swag_migration_history_detail_data_grid_name %}\\n                        <template #column-name=\\\"{ item }\\\">\\n                            {{ $tc(item.snippet) }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_count %}\\n                        <template #column-count=\\\"{ item }\\\">\\n                            {{ item.total }}\\n                        </template>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_history_detail_data_grid_pagination %}\\n                        <template #pagination>\\n                            <sw-pagination :page=\\\"page\\\"\\n                                           :limit=\\\"limit\\\"\\n                                           :total=\\\"total\\\"\\n                                           :steps=\\\"[5,10]\\\"\\n                                           :total-visible=\\\"7\\\"\\n                                           @page-change=\\\"onPageChange\\\">\\n                            </sw-pagination>\\n                        </template>\\n                    {% endblock %}\\n                </sw-data-grid>\\n            {% endblock %}\\n        </div>\\n\\n        {% block swag_migration_history_detail_data_noError__loader %}\\n            <div v-if=\\\"isLoading\\\"\\n                 class=\\\"swag-migration-history-detail-data__loading-placeholder\\\"></div>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","const utils = Shopware.Utils;\n\n/**\n * @package services-settings\n */\nexport default class StorageBroadcastService {\n    constructor(receiveCallback = () => {}, channelKey) {\n        this._clientId = utils.createId();\n        this._channelKey = channelKey; // To identify the messages of all StorageBroadcastServices\n        this._receiveCallback = receiveCallback;\n\n        window.addEventListener('storage', this.messageReceived.bind(this));\n    }\n\n    getClientId() {\n        return this._clientId;\n    }\n\n    setClientId(id) {\n        this._clientId = id;\n    }\n\n    /**\n     * Send a data packet to all other browser tabs that listens\n     *\n     * @param data\n     */\n    sendMessage(data) {\n        if (!data.id || !data.id.length) {\n            data.id = this._clientId;\n        }\n\n        data = JSON.stringify(data);\n\n        localStorage.setItem(this._channelKey, data);\n    }\n\n    /**\n     * Handles receive logic, so only data from other tabs trigger the callback\n     *\n     * @param event\n     * @returns {boolean}\n     */\n    messageReceived(event) {\n        if (event.key !== this._channelKey) {\n            return false;\n        }\n\n        const data = JSON.parse(localStorage.getItem(this._channelKey));\n        localStorage.removeItem(this._channelKey);\n\n        if (!data || data.id === this._clientId) {\n            return false;\n        }\n\n        this._receiveCallback.call(null, data);\n        return true;\n    }\n}\n","import { WORKER_INTERRUPT_TYPE } from './swag-migration-worker.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * Describes the current API endpoint.\n * Can be easily used together with the MIGRATION_STATUS.\n *\n * Example to get the API operation from status:\n * WORKER_API_OPERATION[MIGRATION_STATUS.FETCH_DATA]\n *\n * @type {Readonly<{\"0\": string, \"1\": string, \"2\": string}>}\n * @package services-settings\n */\nexport const WORKER_API_OPERATION = Object.freeze({\n    1: 'fetchData',\n    2: 'writeData',\n    3: 'processMedia',\n});\n\n/**\n * @package services-settings\n */\nexport class WorkerRequest {\n    /**\n     * @param {Object} requestParams\n     * @param {WorkerStatusManager} workerStatusManager\n     * @param {MigrationApiService} migrationService\n     * @param {function} onInterruptCB\n     */\n    constructor(\n        requestParams,\n        workerStatusManager,\n        migrationService,\n        onInterruptCB,\n    ) {\n        this._MAX_REQUEST_TIME = 10000; // in ms\n        this._DEFAULT_CHUNK_SIZE = 25; // in data sets\n\n        // how much does the chunk factor manipulate the chunk size for under target request times\n        this._CHUNK_PROPORTION_UP_WEIGHT = 0.1;\n\n        // how much does the chunk factor manipulate the chunk size for above target request times\n        this._CHUNK_PROPORTION_DOWN_WEIGHT = 0.9;\n\n        this._migrationProcessState = State.get('swagMigration/process');\n        this._runId = requestParams.runUuid;\n        this._requestParams = requestParams;\n        this._workerStatusManager = workerStatusManager;\n        this._migrationService = migrationService;\n        this._interrupt = '';\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._lastChunkSize = this._DEFAULT_CHUNK_SIZE;\n        this._successfulChunk = this._DEFAULT_CHUNK_SIZE;\n\n        // callbacks\n        this._onInterruptCB = onInterruptCB;\n    }\n\n    /**\n     * @returns {string}\n     */\n    get operation() {\n        return WORKER_API_OPERATION[this._migrationProcessState.statusIndex];\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get interrupt() {\n        return this._interrupt;\n    }\n\n    /**\n     * @param {boolean} value\n     */\n    set interrupt(value) {\n        this._interrupt = value;\n    }\n\n    /**\n     * @param {function} value\n     */\n    set onInterruptCB(value) {\n        this._callInterruptCB = value;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptCB() {\n        if (this._onInterruptCB !== null) {\n            this._onInterruptCB(this._interrupt);\n        }\n    }\n\n    /**\n     * Do all the API requests for all entities with the given methodName\n     *\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    async migrateProcess(statusIndex, groupStartIndex = 0, entityStartIndex = 0, entityOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        return new Promise(async (resolve) => {\n            let statusChangedError = false;\n            await this._workerStatusManager.changeStatus(this._runId, statusIndex).catch(() => {\n                statusChangedError = true;\n            });\n\n            if (statusChangedError === true) {\n                this.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n                this._callInterruptCB();\n                resolve();\n                return;\n            }\n\n            // Reference to store state, don't mutate this!\n            const entityGroups = this._migrationProcessState.entityGroups;\n            for (let groupIndex = groupStartIndex; groupIndex < entityGroups.length; groupIndex += 1) {\n                let groupProgress = 0;\n                for (let entityIndex = 0; entityIndex < entityGroups[groupIndex].entities.length; entityIndex += 1) {\n                    const entityName = entityGroups[groupIndex].entities[entityIndex].entityName;\n                    const entityCount = entityGroups[groupIndex].entities[entityIndex].total;\n\n                    if (entityIndex >= entityStartIndex) {\n                        await this._migrateEntity(\n                            entityName,\n                            entityCount,\n                            entityGroups[groupIndex],\n                            groupProgress,\n                            entityOffset,\n                        );\n\n                        if (this._interrupt !== '') {\n                            this._callInterruptCB();\n                            resolve();\n                            return;\n                        }\n\n                        entityOffset = 0;\n                    }\n\n                    groupProgress += entityCount;\n                }\n                entityStartIndex = 0;\n            }\n\n            resolve();\n        });\n        /* eslint-enable no-await-in-loop */\n    }\n\n    /**\n     * Do all the API requests for one entity in chunks\n     *\n     * @param {string} entityName\n     * @param {number} entityCount\n     * @param {Object} group\n     * @param {number} groupProgress\n     * @param {number} currentOffset\n     * @returns {Promise<void>}\n     * @private\n     */\n    async _migrateEntity(entityName, entityCount, group, groupProgress, currentOffset = 0) {\n        /* eslint-disable no-await-in-loop */\n        while (currentOffset < entityCount) {\n            if (this._interrupt !== '') {\n                return;\n            }\n\n            await this._migrateEntityRequest(entityName, currentOffset);\n            let newOffset = currentOffset + this._successfulChunk;\n            if (newOffset > entityCount) {\n                newOffset = entityCount;\n            }\n\n            // update State\n            State.commit('swagMigration/process/setEntityProgress', {\n                groupId: group.id,\n                groupCurrentCount: groupProgress + newOffset,\n                groupTotal: group.total,\n            });\n\n            currentOffset += this._successfulChunk;\n        }\n        /* eslint-enable no-await-in-loop */\n\n        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n    }\n\n    /**\n     * Do a single API request for the given entity with given offset.\n     *\n     * @param {string} entityName\n     * @param {number} offset\n     * @returns {Promise}\n     * @private\n     */\n    _migrateEntityRequest(entityName, offset) {\n        return new Promise(async (resolve) => {\n            this._requestParams.entity = entityName;\n            this._requestParams.offset = offset;\n            this._requestParams.limit = this._chunkSize;\n\n            let requestRetry = true;\n            let requestFailedCount = 0;\n            /* eslint-disable no-await-in-loop, no-loop-func */\n            while (requestRetry) {\n                const beforeRequestTime = new Date();\n                await this._migrationService[this.operation](this._requestParams).then((response) => {\n                    if (!response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.validToken === undefined) {\n                        // Memory limit behavior: If occurs the validToken is not in the response\n                        // Then we scale the limit down to default and retry\n                        // If the retry also fails with memory limit exceeded we skip this chunk\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._successfulChunk = this._requestParams.limit;\n                            requestRetry = false;\n                            return;\n                        }\n\n                        this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                        this._lastChunkSize = this._chunkSize;\n                        this._requestParams.limit = this._chunkSize;\n                        return;\n                    }\n\n                    if (!response.validToken) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.TAKEOVER;\n                        this._successfulChunk = 0;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    this._successfulChunk = this._requestParams.limit;\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n                    requestRetry = false;\n                }).catch((response) => {\n                    if (!response || !response.response) {\n                        // Request timeout behavior: scale chunk size down on first occur and back to default on second\n                        requestFailedCount += 1;\n                        if (this._requestParams.limit === this._lastChunkSize) {\n                            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n                            this._requestParams.limit = this._chunkSize;\n                        } else {\n                            this._handleChunkSize();\n                            this._lastChunkSize = this._chunkSize; // next time reset to default chunk size\n                            this._requestParams.limit = this._chunkSize;\n                        }\n                        return;\n                    }\n\n                    if (response.response.status === 500) {\n                        // Don't retry if server errors happen, only if something is wrong with the connection.\n                        this._successfulChunk = this._requestParams.limit;\n                        requestRetry = false;\n                        return;\n                    }\n\n                    const afterRequestTime = new Date();\n                    this._handleChunkSize(afterRequestTime.getTime() - beforeRequestTime.getTime());\n\n                    requestFailedCount += 1;\n                });\n\n                if (requestFailedCount >= 3) {\n                    this._successfulChunk = 0;\n                    requestRetry = false;\n                    if (this.operation === WORKER_API_OPERATION[1]) {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.CONNECTION_LOST;\n                    } else {\n                        this.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n                    }\n                }\n            }\n            /* eslint-enable no-await-in-loop, no-loop-func */\n\n            resolve();\n        });\n    }\n\n    /**\n     * Update the chunkSize depending on the requestTime / maxRequestTime proportion\n     *\n     * @param {number} requestTime Request time in milliseconds (fallback to 30s for timeout simulation)\n     * @private\n     */\n    _handleChunkSize(requestTime = 30000) {\n        this._lastChunkSize = this._chunkSize;\n        const factor = this._MAX_REQUEST_TIME / requestTime;\n\n        if (requestTime < this._MAX_REQUEST_TIME) {\n            // Scale chunk size up\n            const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_UP_WEIGHT + 1;\n            this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n            return;\n        }\n\n        // Scale chunk size down\n        const weightedFactor = (factor - 1) * this._CHUNK_PROPORTION_DOWN_WEIGHT + 1;\n        this._chunkSize = Math.ceil(this._chunkSize * weightedFactor);\n\n        if (this._chunkSize < this._DEFAULT_CHUNK_SIZE) {\n            this._chunkSize = this._DEFAULT_CHUNK_SIZE;\n        }\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default WorkerRequest;\n","import StorageBroadcastService from '../storage-broadcaster.service';\nimport { WorkerRequest } from './swag-migration-worker-request.service';\nimport { MIGRATION_STATUS, WorkerStatusManager } from './swag-migration-worker-status-manager.service';\n\nconst { Application, State } = Shopware;\n\n/**\n * @package services-settings\n */\nexport const MIGRATION_ACCESS_TOKEN_NAME = 'swagMigrationAccessToken';\n\n/**\n * @package services-settings\n */\nexport const WORKER_INTERRUPT_TYPE = Object.freeze({\n    TAKEOVER: 'takeover',\n    STOP: 'stop',\n    PAUSE: 'pause',\n    CONNECTION_LOST: 'connectionLost',\n});\n\n/**\n * @package services-settings\n */\nclass MigrationWorkerService {\n    /**\n     * @param {MigrationApiService} migrationService\n     * @param {MigrationIndexingWorker} migrationIndexingWorker\n     */\n    constructor(\n        migrationService,\n        migrationIndexingWorker,\n    ) {\n        // will be toggled when we receive a response for our 'migrationWanted' request\n        this._broadcastResponseFlag = false;\n\n        // handles cross browser tab communication\n        this._broadcastService = new StorageBroadcastService(\n            this._onBroadcastReceived.bind(this),\n            'swag-migration-service',\n        );\n\n        this._migrationService = migrationService;\n        this._migrationIndexingWorker = migrationIndexingWorker;\n        this._workerStatusManager = new WorkerStatusManager(\n            this._migrationService,\n        );\n        this._workRunner = null;\n\n        /** @type MigrationProcessStore */\n        this._migrationProcessState = State.get('swagMigration/process');\n        // state variables\n        this._interruptSubscriber = null;\n        this._restoreState = {};\n\n        window.addEventListener('beforeunload', this.onBrowserTabClosing.bind(this));\n    }\n\n    /**\n     * Show the browser tab closing prompt to confirm the page leave.\n     * Custom text support is deprecated so it will display the browser specific default message.\n     * For more information look here:\n     * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n     *\n     * @param {Event} e\n     * @returns {string}\n     */\n    onBrowserTabClosing(e) {\n        if (this._migrationProcessState.isMigrating &&\n            this._migrationProcessState.statusIndex !== MIGRATION_STATUS.FINISHED) {\n            e.preventDefault();\n            e.returnValue = '';\n            return '';\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the accessToken out of the local storage\n     *\n     * @returns {string}\n     */\n    static get migrationAccessToken() {\n        let token = localStorage.getItem(MIGRATION_ACCESS_TOKEN_NAME);\n\n        if (token === null) {\n            token = '';\n        }\n\n        return token;\n    }\n\n    _onInterrupt(value) {\n        State.commit('swagMigration/process/setIsMigrating', false);\n        this._callInterruptSubscriber(value);\n    }\n\n    /**\n     * Check if the last migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    checkForRunningMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.getState({\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n            }).then((state) => {\n                resolve(this.processStateResponse(state));\n            }).catch((error) => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: false,\n                    status: null,\n                    accessToken: null,\n                    requestErrorCode: error !== undefined && error.response !== undefined ? error.response.code : '',\n                };\n\n                returnValue.isMigrationAccessTokenValid = true;\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Try to create a new migration run and process the return state.\n     *\n     * @returns {Promise<{\n     *   runUuid: null,\n     *   isMigrationRunning: boolean,\n     *   isMigrationAccessTokenValid: boolean,\n     *   status: object|null,\n     *   accessToken: string|null\n     * }>}\n     */\n    createMigration(dataSelectionIds) {\n        return new Promise((resolve) => {\n            this._migrationService.createMigration(\n                this._migrationProcessState.connectionId,\n                dataSelectionIds,\n            ).then((state) => {\n                const returnState = this.processStateResponse(state);\n\n                if (returnState.isMigrationRunning === false && returnState.isMigrationAccessTokenValid === true) {\n                    State.commit('swagMigration/process/setStatusIndex', MIGRATION_STATUS.PREMAPPING);\n                }\n\n                State.commit('swagMigration/process/setRunId', returnState.runUuid);\n                resolve(returnState);\n            }).catch(() => {\n                const returnValue = {\n                    runUuid: null,\n                    isMigrationRunning: false,\n                    isMigrationAccessTokenValid: true,\n                    status: null,\n                    accessToken: null,\n                };\n\n                this._restoreState = {};\n                resolve(returnValue);\n            });\n        });\n    }\n\n    /**\n     * Check if the migration was not finished, the accessToken is valid and set the restoreState.\n     *\n     * @param {Object} state\n     * @return {{\n     *          runUuid: null,\n     *          isMigrationRunning: boolean,\n     *          isMigrationAccessTokenValid: boolean,\n     *          status: object|null,\n     *          accessToken: string|null\n     *          }}\n     */\n    processStateResponse(state) {\n        const returnValue = {\n            runUuid: null,\n            isMigrationRunning: false,\n            isMigrationAccessTokenValid: false,\n            status: null,\n            accessToken: null,\n            runProgress: null,\n        };\n\n        this._restoreState = state;\n        returnValue.runUuid = state.runId;\n        returnValue.accessToken = state.accessToken;\n        returnValue.runProgress = state.runProgress;\n\n        if (state.validMigrationRunToken === false) {\n            State.commit('swagMigration/process/setRunId', state.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        if (state.migrationRunning === true) {\n            State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n            returnValue.isMigrationRunning = true;\n            returnValue.isMigrationAccessTokenValid = true;\n            returnValue.status = state.status;\n\n            return returnValue;\n        }\n\n        returnValue.isMigrationAccessTokenValid = true;\n        return returnValue;\n    }\n\n    /**\n     * Continue the migration (possible after checkForRunningMigration resolved true).\n     */\n    restoreRunningMigration(startMigration = true) {\n        if (this._restoreState === null || this._restoreState === {}) {\n            return;\n        }\n\n        if (this._restoreState.migrationRunning === false) {\n            return;\n        }\n\n        State.commit('swagMigration/process/setRunId', this._restoreState.runId);\n        State.commit('swagMigration/process/setEntityGroups', this._restoreState.runProgress);\n        State.commit('swagMigration/process/setStatusIndex', this._restoreState.status);\n\n        if (!startMigration) {\n            return;\n        }\n\n        // Get current group and entity index\n        const indicies = this._getIndiciesByEntityName(this._restoreState.entity);\n\n        this.startMigration(\n            this._migrationProcessState.runId,\n            this._migrationProcessState.statusIndex,\n            indicies.groupIndex,\n            indicies.entityIndex,\n            this._restoreState.finishedCount,\n        );\n    }\n\n    stopMigration() {\n        if (this._workRunner === null) {\n            this._callInterruptSubscriber(WORKER_INTERRUPT_TYPE.STOP);\n            return;\n        }\n\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.STOP;\n    }\n\n    pauseMigration() {\n        this._workRunner.interrupt = WORKER_INTERRUPT_TYPE.PAUSE;\n    }\n\n    /**\n     * Takeover the current migration and save the given accessToken into the localStorage.\n     *\n     * @return {Promise}\n     */\n    takeoverMigration() {\n        return new Promise((resolve) => {\n            this._migrationService.takeoverMigration(this._migrationProcessState.runId)\n                .then((migrationAccessToken) => {\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, migrationAccessToken.accessToken);\n                    resolve();\n                });\n        });\n    }\n\n    /**\n     * Get the groupIndex and the entityIndex from the entityGroups for the specified entityName.\n     *\n     * @param {string} entityName\n     * @returns {{groupIndex: number, entityIndex: number}}\n     * @private\n     */\n    _getIndiciesByEntityName(entityName) {\n        for (let groupIndex = 0; groupIndex < this._migrationProcessState.entityGroups.length; groupIndex += 1) {\n            for (let entityIndex = 0;\n                entityIndex < this._migrationProcessState.entityGroups[groupIndex].entities.length;\n                entityIndex += 1\n            ) {\n                if (this._migrationProcessState.entityGroups[groupIndex]\n                    .entities[entityIndex].entityName === entityName\n                ) {\n                    return {\n                        groupIndex,\n                        entityIndex,\n                    };\n                }\n            }\n        }\n\n        return {\n            groupIndex: -1,\n            entityIndex: -1,\n        };\n    }\n\n    /**\n     * @param {function} callback\n     */\n    subscribeInterrupt(callback) {\n        this._interruptSubscriber = callback;\n    }\n\n    unsubscribeInterrupt() {\n        this._interruptSubscriber = null;\n    }\n\n    /**\n     * @private\n     */\n    _callInterruptSubscriber(value) {\n        if (this._interruptSubscriber !== null) {\n            this._interruptSubscriber(value);\n        }\n    }\n\n    /**\n     * @param {String} runId\n     * @param {number} statusIndex\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     */\n    startMigration(\n        runId,\n        statusIndex = MIGRATION_STATUS.FETCH_DATA,\n        groupStartIndex = 0,\n        entityStartIndex = 0,\n        entityOffset = 0,\n    ) {\n        return new Promise(async (resolve) => {\n            // Wait for the 'migrationWanted' request and response to allow or deny the migration\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/process/setRunId', runId);\n\n            let processMediaFiles = false;\n            this._migrationProcessState.entityGroups.forEach((group) => {\n                if (group.processMediaFiles) {\n                    processMediaFiles = true;\n                }\n            });\n\n            const params = {\n                swagMigrationAccessToken: MigrationWorkerService.migrationAccessToken,\n                runUuid: this._migrationProcessState.runId,\n            };\n\n            this._workRunner = new WorkerRequest(\n                params,\n                this._workerStatusManager,\n                this._migrationService,\n                this._onInterrupt.bind(this),\n            );\n\n            // fetch\n            if (statusIndex <= MIGRATION_STATUS.FETCH_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.FETCH_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // write\n            if (statusIndex <= MIGRATION_STATUS.WRITE_DATA) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.WRITE_DATA,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // download\n            if (statusIndex <= MIGRATION_STATUS.PROCESS_MEDIA_FILES && processMediaFiles) {\n                await this._startWorkRunner(\n                    MIGRATION_STATUS.PROCESS_MEDIA_FILES,\n                    groupStartIndex,\n                    entityStartIndex,\n                    entityOffset,\n                );\n\n                groupStartIndex = 0;\n                entityStartIndex = 0;\n                entityOffset = 0;\n            }\n\n            // finish\n            await this._migrateFinish();\n            resolve();\n        });\n    }\n\n    /**\n     * Start the WorkerRequest or WorkerMediaFiles runner.\n     *\n     * @param {number} status\n     * @param {number} groupStartIndex\n     * @param {number} entityStartIndex\n     * @param {number} entityOffset\n     * @returns {Promise}\n     * @private\n     */\n    _startWorkRunner(status, groupStartIndex, entityStartIndex, entityOffset) {\n        return new Promise(async (resolve) => {\n            if (!this._migrationProcessState.isMigrating) {\n                resolve();\n                return;\n            }\n\n            if (groupStartIndex === 0 && entityStartIndex === 0 && entityOffset === 0) {\n                this._resetProgress();\n            }\n\n            await this._workRunner.migrateProcess(\n                status,\n                groupStartIndex,\n                entityStartIndex,\n                entityOffset,\n            );\n\n            resolve();\n        });\n    }\n\n    /**\n     * Resolves with true if a migration is already running in another tab. otherwise false.\n     * It will resolve after 300ms.\n     *\n     * @returns {Promise}\n     * @private\n     */\n    isMigrationRunningInOtherTab() {\n        return new Promise(async (resolve) => {\n            this._broadcastService.sendMessage({\n                migrationMessage: 'migrationWanted',\n            });\n\n            const oldFlag = this._broadcastResponseFlag;\n            setTimeout(() => {\n                if (this._broadcastResponseFlag !== oldFlag) {\n                    resolve(true);\n                    return;\n                }\n\n                resolve(false);\n            }, 300);\n        });\n    }\n\n    /**\n     * Gets called with data from another browser tab\n     *\n     * @param {Object} data\n     * @private\n     */\n    _onBroadcastReceived(data) {\n        // answer incoming migration wanted request based on current migration state.\n        if (data.migrationMessage === 'migrationWanted') {\n            if (this._migrationProcessState.isMigrating) {\n                this._broadcastService.sendMessage({\n                    migrationMessage: 'migrationDenied',\n                });\n            }\n        }\n\n        // allow own migration if no migrationDenied response comes back.\n        if (data.migrationMessage === 'migrationDenied') {\n            this._broadcastResponseFlag = !this._broadcastResponseFlag;\n        }\n    }\n\n    /**\n     * @returns {Promise}\n     * @private\n     */\n    _migrateFinish() {\n        if (!this._migrationProcessState.isMigrating) {\n            return Promise.resolve();\n        }\n\n        return this._workerStatusManager.changeStatus(\n            this._migrationProcessState.runId,\n            MIGRATION_STATUS.FINISHED,\n        ).then(() => {\n            this._showFinishNotification(this._migrationProcessState.runId);\n            this._resetProgress();\n            this._assignThemes().finally(() => {\n                this._handleIndexing();\n            });\n\n            return Promise.resolve();\n        });\n    }\n\n    _showFinishNotification(runId) {\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.message'),\n            variant: 'info',\n            growl: false,\n            actions: [\n                {\n                    label: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.notification.actionLabel'),\n                    route: { name: 'swag.migration.index.history.detail', params: { id: runId } },\n                },\n            ],\n        });\n    }\n\n    _assignThemes() {\n        return this._migrationService.assignThemes(this._migrationProcessState.runId);\n    }\n\n    _handleIndexing() {\n        let notificationId = null;\n        State.dispatch('notification/createNotification', {\n            title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.title'),\n            message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.running.message'),\n            variant: 'info',\n            isLoading: true,\n            growl: false,\n        }).then((id) => {\n            notificationId = id;\n            return this._migrationIndexingWorker.start();\n        }).then(() => {\n            // indexing finished\n            State.dispatch('notification/updateNotification', {\n                uuid: notificationId,\n                title: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.title'),\n                message: this.applicationRoot.$t('swag-migration.index.loadingScreenCard.result.indexingNotification.finished.message'),\n                variant: 'info',\n                isLoading: false,\n                visited: false,\n                growl: true,\n            });\n        });\n    }\n\n    _resetProgress() {\n        State.commit('swagMigration/process/resetProgress');\n    }\n\n    /**\n     * @returns {Boolean|Vue}\n     */\n    get applicationRoot() {\n        if (this._applicationRoot) {\n            return this._applicationRoot;\n        }\n        this._applicationRoot = Application.getApplicationRoot();\n        return this._applicationRoot;\n    }\n}\n\nexport default MigrationWorkerService;\n","import template from './swag-migration-process-screen.html.twig';\nimport './swag-migration-process-screen.scss';\nimport { UI_COMPONENT_INDEX } from '../../../../core/data/migrationUI.store';\nimport { MIGRATION_STATUS } from '../../../../core/service/migration/swag-migration-worker-status-manager.service';\nimport {\n    MIGRATION_ACCESS_TOKEN_NAME,\n    WORKER_INTERRUPT_TYPE,\n} from '../../../../core/service/migration/swag-migration-worker.service';\n\nconst { Component, State, Mixin } = Shopware;\nconst { mapState } = Shopware.Component.getComponentHelper();\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-process-screen', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        /** @var {MigrationWorkerService} migrationWorkerService */\n        migrationWorkerService: 'migrationWorkerService',\n        /** @var {MigrationProcessStoreInitService} migrationProcessStoreInitService */\n        migrationProcessStoreInitService: 'processStoreInitService',\n        /** @var {MigrationUiStoreInitService} migrationUiStoreInitService */\n        migrationUiStoreInitService: 'uiStoreInitService',\n    },\n\n    mixins: [\n        Mixin.getByName('notification'),\n    ],\n\n    data() {\n        return {\n            errorList: [],\n            isTakeoverForbidden: false,\n            isMigrationInterrupted: false,\n            isOtherMigrationRunning: false,\n            showAbortMigrationConfirmDialog: false,\n            isPausedBeforeAbortDialog: false,\n            UI_COMPONENT_INDEX: UI_COMPONENT_INDEX,\n            displayFlowChart: true,\n            flowChartItemIndex: 0,\n            flowChartItemVariant: 'info',\n            flowChartInitialItemVariants: [],\n            isWarningConfirmed: false,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        ...mapState('swagMigration/process', [\n            'statusIndex',\n            'isMigrating',\n            'connectionId',\n            'environmentInformation',\n            'runId',\n        ]),\n\n        ...mapState('swagMigration/ui', [\n            'componentIndex',\n            'isPaused',\n            'isLoading',\n            'isPremappingValid',\n            'unfilledPremapping',\n            'premapping',\n            'dataSelectionIds',\n            'startMigration',\n        ]),\n\n        /**\n         * @returns {string}\n         */\n        abortMigrationBackText() {\n            if (this.isPausedBeforeAbortDialog) {\n                return this.$tc('swag-migration.index.confirmAbortDialog.cancelPause');\n            }\n\n            return this.$tc('swag-migration.index.confirmAbortDialog.cancelRunning');\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        componentIndexIsResult() {\n            return this.componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        abortButtonVisible() {\n            return this.isPaused || (\n                this.isMigrating &&\n                !this.isLoading &&\n                !this.componentIndexIsResult\n            );\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        backButtonVisible() {\n            return this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonVisible() {\n            return (!this.isMigrating && !this.isPaused) ||\n                (this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                    this.isMigrating) ||\n                (this.componentIndexIsResult && this.isMigrating);\n        },\n\n        isFetching() {\n            return this.statusIndex === MIGRATION_STATUS.FETCH_DATA &&\n                this.isMigrating;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        migrateButtonDisabled() {\n            return this.isLoading ||\n                this.isFetching ||\n                this.componentIndexIsResult;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonVisible() {\n            return !this.isLoading &&\n                this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.isMigrating;\n        },\n\n        premappingIsNotReady() {\n            return this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isMigrating &&\n                !this.isPremappingValid;\n        },\n\n        warningIsNotReady() {\n            return this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM &&\n                this.isWarningConfirmed === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        startButtonDisabled() {\n            return this.isLoading ||\n                this.premappingIsNotReady ||\n                this.warningIsNotReady;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonVisible() {\n            return this.isMigrating &&\n                !this.isPaused &&\n                !this.componentIndexIsResult &&\n                [\n                    MIGRATION_STATUS.WAITING,\n                    MIGRATION_STATUS.PREMAPPING,\n                ].includes(this.statusIndex) === false;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        pauseButtonDisabled() {\n            return this.isLoading;\n        },\n\n        /**\n         * @returns {boolean}\n         */\n        continueButtonVisible() {\n            return this.isPaused;\n        },\n    },\n\n    watch: {\n        statusIndex: {\n            immediate: true,\n            /**\n             * @param {number} status\n             */\n            handler(status) {\n                if (this.isLoading) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.WAITING) {\n                    return;\n                }\n\n                if (status === MIGRATION_STATUS.PREMAPPING) {\n                    this.$nextTick(() => {\n                        this.flowChartItemIndex = status;\n                    });\n                    return;\n                }\n\n                this.$nextTick(() => {\n                    this.flowChartItemIndex = status;\n\n                    if (status !== MIGRATION_STATUS.FINISHED) {\n                        this.flowChartItemVariant = 'info';\n                    } else {\n                        this.flowChartItemVariant = 'success';\n                    }\n\n                    if (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                        while (this.flowChartInitialItemVariants.length < this.flowChartItemIndex) {\n                            this.flowChartInitialItemVariants.push('success');\n                        }\n                    }\n                });\n\n                if (status === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                    this.onProcessMediaFiles();\n                }\n\n                if (status === MIGRATION_STATUS.FINISHED) {\n                    this.isOtherMigrationRunning = false;\n                    this.onFinishWithoutErrors();\n                }\n            },\n        },\n\n        isPremappingValid: {\n            handler(valid) {\n                if (valid) {\n                    this.flowChartItemVariant = 'success';\n                    return;\n                }\n\n                this.flowChartItemVariant = 'error';\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    beforeDestroy() {\n        this.beforeDestroyedComponent();\n    },\n\n    methods: {\n        async createdComponent() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            const shouldStartMigration = this.startMigration;\n            State.commit('swagMigration/ui/setStartMigration', false);\n\n            let otherInstanceMigrating = this.isMigrating;\n            if (this.isMigrating === false) {\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    if (isRunning) {\n                        otherInstanceMigrating = true;\n                        this.isTakeoverForbidden = true;\n                        this.onInvalidMigrationAccessToken();\n                    }\n                });\n\n                if (!this.isTakeoverForbidden) {\n                    await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                        if (runState.isMigrationAccessTokenValid === false && runState.isMigrationRunning === true) {\n                            otherInstanceMigrating = true;\n                            this.onInvalidMigrationAccessToken();\n                            return;\n                        }\n\n                        State.commit('swagMigration/ui/setIsPaused', runState.isMigrationRunning);\n                        if (this.isPaused) {\n                            otherInstanceMigrating = true;\n                            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                        }\n\n                        this.restoreFlowChart(runState.status);\n                    });\n                }\n            }\n\n            if (\n                this.connectionId === null\n                || this.environmentInformation === null\n            ) {\n                await this.migrationProcessStoreInitService.initProcessStore();\n            }\n\n            if (this.connectionId === null) {\n                this.$router.push({ name: 'swag.migration.wizard.introduction' });\n                return Promise.resolve();\n            }\n\n            // Do connection check\n            return this.migrationService.checkConnection(this.connectionId)\n                .then(async (connectionCheckResponse) => {\n                    State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n\n                    if (\n                        (\n                            connectionCheckResponse.requestStatus.isWarning === false &&\n                            connectionCheckResponse.requestStatus.code !== ''\n                        ) ||\n                        (!otherInstanceMigrating && !shouldStartMigration)\n                    ) {\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return Promise.resolve();\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration(false);\n\n                    if (\n                        (this.isMigrating ||\n                        this.migrationWorkerService.status === MIGRATION_STATUS.FINISHED) &&\n                        !shouldStartMigration\n                    ) {\n                        this.restoreRunningMigration();\n                    }\n\n                    if (shouldStartMigration) {\n                        await this.onMigrate();\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n\n                    return Promise.resolve();\n                }).catch(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n        },\n\n        beforeDestroyedComponent() {\n            this.migrationWorkerService.unsubscribeInterrupt();\n        },\n\n        restoreFlowChart(currentStatus) {\n            this.flowChartItemIndex = currentStatus;\n\n            if (currentStatus !== MIGRATION_STATUS.FINISHED) {\n                this.flowChartItemVariant = 'info';\n            } else {\n                this.flowChartItemVariant = 'success';\n            }\n\n            if (currentStatus === MIGRATION_STATUS.PREMAPPING && this.unfilledPremapping.length > 0) {\n                this.flowChartItemVariant = 'error';\n            }\n\n            this.flowChartInitialItemVariants = [];\n            for (let i = 0; i < currentStatus; i += 1) {\n                this.flowChartInitialItemVariants.push('success');\n            }\n        },\n\n        resetFlowChart() {\n            this.flowChartItemIndex = 0;\n            this.flowChartItemVariant = 'info';\n            this.flowChartInitialItemVariants = [];\n        },\n\n        restoreRunningMigration() {\n            this.displayFlowChart = true;\n\n            // show loading or premapping screen\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING &&\n                this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n            } else if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n            } else if (this.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                this.onProcessMediaFiles();\n            } else if (this.statusIndex === MIGRATION_STATUS.FINISHED) {\n                this.onFinishWithoutErrors();\n            } else {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n            }\n\n            if (this.statusIndex !== MIGRATION_STATUS.WAITING) {\n                this.restoreFlowChart(this.statusIndex);\n            }\n\n            // subscribe to the interrupt event again\n            this.migrationWorkerService.subscribeInterrupt(this.onInterrupt);\n        },\n\n        onAbortButtonClick() {\n            this.isOtherMigrationRunning = false;\n\n            if (this.statusIndex === MIGRATION_STATUS.PREMAPPING) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.onInterrupt(WORKER_INTERRUPT_TYPE.STOP);\n                return;\n            }\n\n            this.showAbortMigrationConfirmDialog = true;\n            this.isPausedBeforeAbortDialog = this.isPaused;\n\n            if (!this.isPaused) {\n                State.commit('swagMigration/ui/setIsLoading', true);\n                this.migrationWorkerService.pauseMigration();\n            }\n        },\n\n        onSaveButtonClick() {\n            this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                this.createNotificationSuccess({\n                    message: this.$t('swag-migration.index.savePremapping.message'),\n                    growl: true,\n                });\n            });\n        },\n\n        onBackButtonClick() {\n            this.migrationWorkerService.status = MIGRATION_STATUS.WAITING;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            this.isOtherMigrationRunning = false;\n            this.$router.push({ name: 'swag.migration.index.main' });\n        },\n\n        onStartButtonClick() {\n            if (this.componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM) {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                return Promise.resolve();\n            }\n\n            State.commit('swagMigration/ui/setIsLoading', true);\n            return this.migrationService.writePremapping(\n                this.runId,\n                this.premapping,\n            ).then(() => {\n                State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.LOADING_SCREEN);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                return this.migrationWorkerService.startMigration(\n                    this.runId,\n                ).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                }).catch(() => {\n                    this.onInvalidMigrationAccessToken();\n                });\n            });\n        },\n\n        onPauseButtonClick() {\n            this.migrationWorkerService.pauseMigration();\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsLoading', true);\n        },\n\n        async onContinueButtonClick() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (!this.isTakeoverForbidden) {\n                await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                    if (runState.requestErrorCode !== undefined &&\n                        runState.requestErrorCode !== '500') {\n                        // Something is wrong with the connection\n                        State.commit('swagMigration/ui/setIsLoading', false);\n                        return;\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    State.commit('swagMigration/ui/setIsPaused', false);\n\n                    if (runState.isMigrationAccessTokenValid === false) {\n                        this.onInterrupt(WORKER_INTERRUPT_TYPE.TAKEOVER);\n                        return;\n                    }\n\n                    if (runState.isMigrationRunning === false) {\n                        State.commit('swagMigration/process/setIsMigrating', false);\n                        this.$router.push({ name: 'swag.migration.index.main' });\n                        return;\n                    }\n\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            }\n        },\n\n        async onMigrate() {\n            this.isOtherMigrationRunning = false;\n\n            this.$nextTick().then(async () => {\n                this.resetFlowChart();\n                State.commit('swagMigration/process/setIsMigrating', true);\n                this.errorList = [];\n\n                // show loading screen\n                State.commit('swagMigration/ui/setIsLoading', true);\n                State.commit('swagMigration/process/resetProgress');\n\n                let isMigrationRunningInOtherTab = false;\n                await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                    isMigrationRunningInOtherTab = isRunning;\n                });\n\n                if (isMigrationRunningInOtherTab) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                    return;\n                }\n\n                this.migrationWorkerService.subscribeInterrupt(this.onInterrupt.bind(this));\n\n                await this.migrationWorkerService.createMigration(\n                    this.dataSelectionIds,\n                ).then((runState) => {\n                    State.commit('swagMigration/process/setEntityGroups', runState.runProgress);\n\n                    if (\n                        runState.isMigrationAccessTokenValid === false ||\n                        runState.isMigrationRunning === true ||\n                        runState.runUuid === null ||\n                        runState.accessToken === null\n                    ) {\n                        this.onInvalidMigrationAccessToken();\n                        return;\n                    }\n\n                    localStorage.setItem(MIGRATION_ACCESS_TOKEN_NAME, runState.accessToken);\n                    State.commit('swagMigration/process/setRunId', runState.runUuid);\n\n                    if (this.environmentInformation.sourceSystemCurrency !== '' &&\n                        this.environmentInformation.targetSystemCurrency !== '' &&\n                        this.environmentInformation.sourceSystemLocale !== '' &&\n                        this.environmentInformation.targetSystemLocale !== '' &&\n                        (\n                            this.environmentInformation.sourceSystemCurrency !==\n                            this.environmentInformation.targetSystemCurrency ||\n                            this.environmentInformation.sourceSystemLocale !==\n                            this.environmentInformation.targetSystemLocale\n                        )\n                    ) {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.WARNING_CONFIRM);\n                    } else {\n                        State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PREMAPPING);\n                    }\n\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                });\n            });\n        },\n\n        onFinishWithoutErrors() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.RESULT_SUCCESS);\n            this.$root.$emit('sales-channel-change');\n        },\n\n        onCloseAbortMigrationConfirmDialog() {\n            this.showAbortMigrationConfirmDialog = false;\n\n            if (!this.isPausedBeforeAbortDialog) {\n                this.$nextTick(() => {\n                    this.onContinueButtonClick();\n                });\n            }\n        },\n\n        /**\n         * Check if a takeover is allowed, takeover migration and restore state\n         */\n        async onTakeoverMigration() {\n            State.commit('swagMigration/process/setIsMigrating', true);\n            State.commit('swagMigration/ui/setIsLoading', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationWorkerService.takeoverMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.migrationWorkerService.restoreRunningMigration();\n                    this.restoreRunningMigration();\n                });\n            });\n        },\n\n        /**\n         * Abort the running migration on the other client so this client can start a new one.\n         */\n        async onAbortOtherMigration() {\n            State.commit('swagMigration/ui/setIsLoading', true);\n            State.commit('swagMigration/process/setIsMigrating', true);\n\n            await this.migrationWorkerService.isMigrationRunningInOtherTab().then((isRunning) => {\n                if (isRunning) {\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isTakeoverForbidden = true;\n                    this.onInvalidMigrationAccessToken();\n                }\n            });\n\n            if (this.isTakeoverForbidden) {\n                return;\n            }\n\n            await this.migrationWorkerService.checkForRunningMigration().then((runState) => {\n                if (runState.isMigrationRunning === false) {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                    return;\n                }\n\n                this.migrationService.abortMigration(runState.runUuid).then(() => {\n                    State.commit('swagMigration/process/setIsMigrating', false);\n                    State.commit('swagMigration/ui/setIsLoading', false);\n                    this.isOtherMigrationRunning = false;\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was interrupted through a takeover, pause or stop\n         *\n         * @param {number} type\n         */\n        onInterrupt(type) {\n            if (type === WORKER_INTERRUPT_TYPE.TAKEOVER) {\n                this.onConfiscatedMigration();\n            } else if (type === WORKER_INTERRUPT_TYPE.STOP) {\n                this.onStop();\n            } else if (type === WORKER_INTERRUPT_TYPE.PAUSE) {\n                this.onPause();\n            } else if (type === WORKER_INTERRUPT_TYPE.CONNECTION_LOST) {\n                this.onConnectionLost();\n            }\n        },\n\n        /**\n         * If the current migration was confiscated by a takeover from another client\n         */\n        onConfiscatedMigration() {\n            this.onInvalidMigrationAccessToken();\n            this.isMigrationInterrupted = true;\n            this.$nextTick(() => {\n                this.$refs.loadingScreenTakeover.refreshState();\n            });\n        },\n\n        /**\n         * If the current migration was stopped\n         */\n        onStop() {\n            return this.migrationService.abortMigration(this.runId).then(() => {\n                this.showAbortMigrationConfirmDialog = false;\n                this.isMigrationInterrupted = false;\n                State.commit('swagMigration/process/setIsMigrating', false);\n                State.commit('swagMigration/ui/setIsPaused', false);\n                State.commit('swagMigration/ui/setIsLoading', false);\n                this.$nextTick(() => {\n                    this.$router.push({ name: 'swag.migration.index.main' });\n                });\n            });\n        },\n\n        /**\n         * If the current migration was paused\n         */\n        onPause() {\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', true);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            this.isOtherMigrationRunning = false;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.PAUSE_SCREEN);\n        },\n\n        onConnectionLost() {\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            State.commit('swagMigration/ui/setDataSelectionIds', []);\n            State.commit('swagMigration/ui/setDataSelectionTableData', []);\n            State.commit('swagMigration/ui/setIsLoading', false);\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.CONNECTION_LOST);\n        },\n\n        /**\n         * If the current accessToken is invalid and a migration is running\n         */\n        onInvalidMigrationAccessToken() {\n            this.displayFlowChart = false;\n            this.isMigrationInterrupted = false;\n            State.commit('swagMigration/process/setIsMigrating', false);\n            State.commit('swagMigration/ui/setIsPaused', false);\n            this.isOtherMigrationRunning = true;\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.TAKEOVER);\n            State.commit('swagMigration/ui/setIsLoading', false);\n        },\n\n        onWarningConfirmationChanged(confirmed) {\n            this.isWarningConfirmed = confirmed;\n        },\n\n        onProcessMediaFiles() {\n            State.commit('swagMigration/ui/setComponentIndex', UI_COMPONENT_INDEX.MEDIA_SCREEN);\n        },\n    },\n});\n","export default \"{% block swag_migration_process_screen %}\\n    <sw-page class=\\\"swag-migration-process-screen\\\">\\n\\n        {% block swag_migration_index_smart_bar_header %}\\n            <template #smart-bar-header>\\n                <h2>\\n                    {{ $tc('sw-settings.index.title') }}\\n                    <sw-icon name=\\\"regular-chevron-right-xs\\\" small></sw-icon>\\n                    {{ $tc('swag-migration.general.mainMenuItemGeneral') }}\\n                </h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block swag_migration_index_smart_bar_actions %}\\n            <template #smart-bar-actions>\\n\\n                {% block swag_migration_index_smart_bar_abort_button %}\\n                    <sw-button v-if=\\\"abortButtonVisible\\\" @click=\\\"onAbortButtonClick\\\">\\n                        {{ $tc('swag-migration.index.abortButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_back_button %}\\n                    <sw-button v-if=\\\"backButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onBackButtonClick\\\">\\n                        {{ $tc('swag-migration.index.backButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_pause_button %}\\n                    <sw-button v-if=\\\"pauseButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               :disabled=\\\"pauseButtonDisabled\\\"\\n                               @click=\\\"onPauseButtonClick\\\">\\n                        {{ $tc('swag-migration.index.pauseButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_continue_button %}\\n                    <sw-button v-if=\\\"continueButtonVisible\\\"\\n                               variant=\\\"primary\\\"\\n                               @click=\\\"onContinueButtonClick\\\">\\n                        {{ $tc('swag-migration.index.continueButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_smart_bar_button_group %}\\n                    <sw-button-group\\n                        v-if=\\\"startButtonVisible\\\"\\n                        :splitButton=\\\"true\\\">\\n\\n                        {% block swag_migration_index_smart_bar_start_button %}\\n                            <sw-button variant=\\\"primary\\\"\\n                                       :disabled=\\\"startButtonDisabled\\\"\\n                                       @click=\\\"onStartButtonClick\\\">\\n                                {{ $tc('swag-migration.index.startButton') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_smart_bar_context_button %}\\n                            <sw-context-button :disabled=\\\"isLoading\\\">\\n                                <template #button>\\n                                    {% block swag_migration_index_smart_bar_context_button_content %}\\n                                        <sw-button\\n                                            square\\n                                            variant=\\\"primary\\\"\\n                                            :disabled=\\\"isLoading\\\"\\n                                        >\\n                                            <sw-icon name=\\\"regular-chevron-down-xs\\\"></sw-icon>\\n                                        </sw-button>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block swag_migration_index_smart_bar_premapping_save_button %}\\n                                    <sw-context-menu-item\\n                                        @click=\\\"onSaveButtonClick\\\"\\n                                        :disabled=\\\"isLoading\\\"\\n                                    >\\n                                        {{ $tc('swag-migration.index.savePremapping.saveButton') }}\\n                                    </sw-context-menu-item>\\n                            {% endblock %}\\n                            </sw-context-button>\\n                        {% endblock %}\\n\\n                    </sw-button-group>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        <template #content>\\n            <sw-card-view v-if=\\\"!isLoading\\\" class=\\\"swag-migration-process-screen\\\">\\n\\n                {% block swag_migration_index_main_page_flow_chart %}\\n                    <sw-step-display v-if=\\\"displayFlowChart && componentIndex !== UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                     class=\\\"swag-migration-process-screen__step-display\\\"\\n                                     :itemIndex=\\\"flowChartItemIndex\\\"\\n                                     :itemVariant=\\\"flowChartItemVariant\\\"\\n                                     :initialItemVariants=\\\"flowChartInitialItemVariants\\\">\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.premapping') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.fetchData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.writeData') }}\\n                        </sw-step-item>\\n                        <sw-step-item>\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.processMedia') }}\\n                        </sw-step-item>\\n                        <sw-step-item disabledIcon=\\\"regular-checkmark-xs\\\">\\n                            {{ $tc('swag-migration.index.loadingScreenCard.flowChart.finish') }}\\n                        </sw-step-item>\\n                    </sw-step-display>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_confirm_warning %}\\n                    <swag-migration-confirm-warning v-if=\\\"componentIndex === UI_COMPONENT_INDEX.WARNING_CONFIRM\\\"\\n                                                    class=\\\"swag-migration-process-screen__confirm-warning\\\"\\n                                                    @confirmation-change=\\\"onWarningConfirmationChanged\\\">\\n                    </swag-migration-confirm-warning>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_premapping %}\\n                    <swag-migration-premapping v-if=\\\"componentIndex === UI_COMPONENT_INDEX.PREMAPPING\\\">\\n                    </swag-migration-premapping>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen %}\\n                    <swag-migration-loading-screen\\n                            v-if=\\\"componentIndex === UI_COMPONENT_INDEX.LOADING_SCREEN || componentIndex === UI_COMPONENT_INDEX.PAUSE_SCREEN\\\">\\n                    </swag-migration-loading-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_media %}\\n                    <swag-migration-media-process v-if=\\\"componentIndex === UI_COMPONENT_INDEX.MEDIA_SCREEN\\\">\\n                    </swag-migration-media-process>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_success %}\\n                    <swag-migration-result-screen v-if=\\\"componentIndex === UI_COMPONENT_INDEX.RESULT_SUCCESS\\\"\\n                                                  :runId=\\\"runId\\\">\\n                    </swag-migration-result-screen>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_takeover %}\\n                    <swag-migration-loading-screen-takeover v-if=\\\"componentIndex === UI_COMPONENT_INDEX.TAKEOVER\\\"\\n                                                            ref=\\\"loadingScreenTakeover\\\"\\n                                                            :isTakeoverForbidden=\\\"isTakeoverForbidden\\\"\\n                                                            :isMigrationInterrupted=\\\"isMigrationInterrupted\\\"\\n                                                            @onTakeoverMigration=\\\"onTakeoverMigration\\\"\\n                                                            @onAbortMigration=\\\"onAbortOtherMigration\\\">\\n                    </swag-migration-loading-screen-takeover>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_card_loadingScreen_connectionLost %}\\n                    <swag-migration-loading-screen-connection-lost v-if=\\\"componentIndex === UI_COMPONENT_INDEX.CONNECTION_LOST\\\">\\n                    </swag-migration-loading-screen-connection-lost>\\n                {% endblock %}\\n\\n                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog %}\\n                    <sw-modal v-if=\\\"showAbortMigrationConfirmDialog\\\"\\n                              class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog\\\"\\n                              :title=\\\"$tc('swag-migration.index.confirmAbortDialog.title')\\\"\\n                              variant=\\\"small\\\"\\n                              @modal-close=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-content\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.content') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_message_hint %}\\n                            <p class=\\\"swag-migration-index-modal-abort-migration-confirm-dialog-hint\\\">\\n                                {{ $tc('swag-migration.index.confirmAbortDialog.hint') }}\\n                            </p>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer %}\\n                            <template #modal-footer>\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_cancelAction %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"onCloseAbortMigrationConfirmDialog\\\">\\n                                        {{ abortMigrationBackText }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_index_main_page_modal_abort_migration_confirmDialog_footer_confirmAction %}\\n                                    <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onStop\\\">\\n                                        {{ $tc('swag-migration.index.confirmAbortDialog.confirm') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n            </sw-card-view>\\n            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard.html.twig';\nimport './swag-migration-wizard.scss';\n\nconst { Component, Mixin, State } = Shopware;\nconst { Criteria } = Shopware.Data;\nconst SSL_REQUIRED_ERROR_CODE = 'SWAG_MIGRATION__SSL_REQUIRED';\n\nconst CONNECTION_NAME_ERRORS = Object.freeze({\n    NAME_TO_SHORT: 'SWAG_MIGRATION_CONNECTION_NAME_TO_SHORT',\n    NAME_ALREADY_EXISTS: 'SWAG_MIGRATION_CONNECTION_NAME_ALREADY_EXISTS',\n});\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    mixins: [\n        Mixin.getByName('swag-wizard'),\n    ],\n\n    data() {\n        const routes = this.getRoutes();\n\n        return {\n            context: Shopware.Context.api,\n            showModal: true,\n            isLoading: true,\n            childIsLoading: false,\n            routes,\n            connection: {},\n            connectionName: '',\n            selectedProfile: {},\n            childRouteReady: false, // child routes with forms will emit and change this value depending on their validation.\n            errorMessageSnippet: '',\n            connectionNameErrorCode: '',\n            currentErrorCode: '',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n\n        migrationGeneralSettingRepository() {\n            return this.repositoryFactory.create('swag_migration_general_setting');\n        },\n\n        modalSize() {\n            if ([\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                return '460px';\n            }\n\n            return '688px';\n        },\n\n        modalTitleSnippet() {\n            return this.currentRoute.titleSnippet;\n        },\n\n        buttonBackSnippet() {\n            return 'swag-migration.wizard.buttonToProfileInformation';\n        },\n\n        buttonBackVisible() {\n            return (\n                !this.isLoading &&\n                this.currentRoute === this.routes.credentials &&\n                this.profileInformationComponentIsLoaded\n            );\n        },\n\n        buttonSecondarySnippet() {\n            if (this.currentRoute === this.routes.credentialsError) {\n                return 'swag-migration.wizard.buttonLater';\n            }\n\n            return 'swag-migration.wizard.buttonAbort';\n        },\n\n        buttonSecondaryVisible() {\n            return (this.currentRoute !== this.routes.credentialsSuccess);\n        },\n\n        buttonPrimarySnippet() {\n            if (this.currentRoute === this.routes.introduction) {\n                return 'swag-migration.wizard.buttonLetsGo';\n            }\n\n            if (this.currentRoute === this.routes.connectionCreate) {\n                return 'swag-migration.wizard.buttonConnectionCreate';\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                return 'swag-migration.wizard.buttonConnectionSelect';\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                return 'swag-migration.wizard.buttonConnect';\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                return 'swag-migration.wizard.buttonFinish';\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    return 'swag-migration.wizard.buttonUseSsl';\n                }\n\n                return 'swag-migration.wizard.buttonEdit';\n            }\n\n            return 'swag-migration.wizard.buttonNext';\n        },\n\n        buttonPrimaryDisabled() {\n            if ([\n                this.routes.credentials,\n                this.routes.connectionCreate,\n                this.routes.connectionSelect,\n            ].includes(this.currentRoute)) {\n                return !this.childRouteReady || this.isLoading;\n            }\n\n            return this.isLoading;\n        },\n\n        profileInformationComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-` +\n                `${this.connection.gatewayName}-page-information`;\n        },\n\n        profileInformationComponentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n\n        credentialsComponent() {\n            if (!this.connection || !this.connection.profileName || !this.connection.gatewayName) {\n                return '';\n            }\n\n            return `swag-migration-profile-${this.connection.profileName}-${this.connection.gatewayName}-credential-form`;\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    /**\n     * Close modal and after it is closed we redirect to next route.\n     * (note: without closing it first the sw-modal will stay in the DOM)\n     *\n     * @param to\n     * @param from\n     * @param next\n     */\n    beforeRouteLeave(to, from, next) {\n        this.showModal = false;\n        this.$nextTick(() => {\n            next();\n        });\n    },\n\n    methods: {\n        createdComponent() {\n            return this.loadSelectedConnection(this.$route.params.connectionId).then(() => {\n                this.onChildRouteChanged(); // update strings for current child\n                this.isLoading = false;\n            });\n        },\n\n        getRoutes() {\n            return {\n                introduction: {\n                    name: 'swag.migration.wizard.introduction',\n                    index: 0,\n                    titleSnippet: 'swag-migration.wizard.pages.introduction.title',\n                },\n                profileInstallation: {\n                    name: 'swag.migration.wizard.profileInstallation',\n                    index: 0.1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInstallation.title',\n                },\n                connectionCreate: {\n                    name: 'swag.migration.wizard.connectionCreate',\n                    index: 0.2, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionCreate.title',\n                },\n                connectionSelect: {\n                    name: 'swag.migration.wizard.connectionSelect',\n                    index: 0.3, // not available through nextRoute (child from profile)\n                    titleSnippet: 'swag-migration.wizard.pages.connectionSelect.title',\n                },\n                profileInformation: {\n                    name: 'swag.migration.wizard.profileInformation',\n                    index: 1,\n                    titleSnippet: 'swag-migration.wizard.pages.profileInformation.title',\n                },\n                credentials: {\n                    name: 'swag.migration.wizard.credentials',\n                    index: 2,\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.title',\n                },\n                credentialsSuccess: {\n                    name: 'swag.migration.wizard.credentialsSuccess',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n                credentialsError: {\n                    name: 'swag.migration.wizard.credentialsError',\n                    index: 2.1, // not available through nextRoute (child from credentials)\n                    titleSnippet: 'swag-migration.wizard.pages.credentials.statusTitle',\n                },\n            };\n        },\n\n        /**\n         * Remove any whitespaces before or after the strings in the credentials object.\n         */\n        trimCredentials() {\n            Object.keys(this.connection.credentialFields).forEach((field) => {\n                this.connection.credentialFields[field] = this.connection.credentialFields[field].trim();\n            });\n        },\n\n        onConnect() {\n            this.isLoading = true;\n            this.errorMessageSnippet = '';\n\n            this.trimCredentials();\n            return this.migrationService.updateConnectionCredentials(\n                this.connection.id,\n                this.connection.credentialFields,\n            ).then((response) => {\n                if (response.errors && response.errors.length > 0) {\n                    this.isLoading = false;\n                    this.onResponseError('');\n                }\n\n                return this.doConnectionCheck();\n            }).catch((error) => {\n                this.isLoading = false;\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        doConnectionCheck() {\n            this.isLoading = true;\n            return this.migrationService.checkConnection(this.connection.id).then((connectionCheckResponse) => {\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                this.isLoading = false;\n\n                if (!connectionCheckResponse) {\n                    this.onResponseError(-1);\n                    return;\n                }\n                State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                if (connectionCheckResponse.requestStatus === undefined) {\n                    this.navigateToRoute(this.routes.credentialsSuccess);\n                    return;\n                }\n\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === false\n                ) {\n                    this.onResponseError(connectionCheckResponse.requestStatus.code);\n                    return;\n                }\n\n                // create warning for success page\n                this.errorMessageSnippet = '';\n                if (\n                    connectionCheckResponse.requestStatus.code !== '' &&\n                    connectionCheckResponse.requestStatus.isWarning === true\n                ) {\n                    this.errorMessageSnippet =\n                        `swag-migration.wizard.pages.credentials.success.${connectionCheckResponse.requestStatus.code}`;\n                }\n\n                this.navigateToRoute(this.routes.credentialsSuccess);\n            }).catch((error) => {\n                this.isLoading = false;\n                State.commit('swagMigration/process/setConnectionId', this.connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n                this.onResponseError(error.response.data.errors[0].code);\n            });\n        },\n\n        onResponseError(errorCode) {\n            if (errorCode !== '') {\n                this.errorMessageSnippet = `swag-migration.wizard.pages.credentials.error.${errorCode}`;\n            } else {\n                this.errorMessageSnippet = '';\n            }\n\n            if (this.errorMessageSnippet === this.$tc(`swag-migration.wizard.pages.credentials.error.${errorCode}`)) {\n                this.errorMessageSnippet = 'swag-migration.wizard.pages.credentials.error.undefinedErrorMsg';\n            }\n\n            this.currentErrorCode = errorCode;\n\n            this.navigateToRoute(this.routes.credentialsError);\n        },\n\n        onCloseModal() {\n            this.showModal = false;\n\n            // navigate depending on the current state\n            if (Object.keys(this.connection).length) {\n                // navigate to module\n                this.$router.push({\n                    name: 'swag.migration.index',\n                    params: { connectionId: this.connection.id },\n                });\n\n                return;\n            }\n\n            this.$router.push({\n                name: 'swag.migration.emptyScreen',\n            });\n        },\n\n        onChildRouteChanged() {\n            this.checkForDisabledRoute();\n        },\n\n        checkForDisabledRoute() {\n            if (!Object.keys(this.connection).length) {\n                // there is no connection selected. redirect to the selection\n                this.onNoConnectionSelected();\n                return;\n            }\n\n            if (!this.profileInformationComponentIsLoaded) {\n                if (this.currentRoute === this.routes.profileInformation) {\n                    this.navigateToRoute(this.routes.credentials);\n                }\n\n                // make the profileInformation route a child if there is no component\n                // so navigation to this route is not possible for the user\n                this.routes.profileInformation.index = 0.1;\n            }\n        },\n\n        onButtonBackClick() {\n            this.navigateToRoute(this.routes.profileInformation);\n        },\n\n        onButtonSecondaryClick() {\n            // Abort / Later\n            this.onCloseModal();\n        },\n\n        triggerPrimaryClick() {\n            if (!this.buttonPrimaryDisabled) {\n                this.onButtonPrimaryClick();\n            }\n        },\n\n        onButtonPrimaryClick() {\n            if (this.currentRoute === this.routes.connectionCreate) {\n                // clicked Next (save selected profile)\n                this.createNewConnection().then(() => {\n                    this.navigateToNext();\n                }).catch(() => {\n                    this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_ALREADY_EXISTS;\n                    this.isLoading = false;\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.connectionSelect) {\n                this.saveSelectedConnection(this.connection).then(() => {\n                    this.doConnectionCheck();\n                });\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentials) {\n                // clicked Connect.\n                this.onConnect();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsSuccess) {\n                // clicked Finish.\n                this.onCloseModal();\n                return;\n            }\n\n            if (this.currentRoute === this.routes.credentialsError) {\n                if (this.currentErrorCode === SSL_REQUIRED_ERROR_CODE) {\n                    this.connection.credentialFields.endpoint = this.connection.credentialFields.endpoint.replace('http:', 'https:');\n                    this.onConnect();\n                    return;\n                }\n\n                // clicked Edit\n                this.navigateToRoute(this.routes.credentials);\n                return;\n            }\n\n            if (this.currentRoute === this.routes.profileInstallation) {\n                this.navigateToRoute(this.routes.connectionCreate);\n                return;\n            }\n\n            this.navigateToNext();\n        },\n\n        loadSelectedConnection(connectionId) {\n            return new Promise((resolve) => {\n                // resolve if connection is already loaded\n                if (Object.keys(this.connection).length) {\n                    resolve();\n                    return;\n                }\n\n                this.isLoading = true;\n\n                if (connectionId !== undefined) {\n                    this.fetchConnection(connectionId).then(() => {\n                        resolve();\n                    });\n                    return;\n                }\n\n                const criteria = new Criteria(1, 1);\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    if (items.first().selectedConnectionId === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.fetchConnection(items.first().selectedConnectionId);\n                });\n            });\n        },\n\n        fetchConnection(connectionId) {\n            return new Promise((resolve) => {\n                const criteria = new Criteria(1, 1);\n                criteria.addFilter(Criteria.equals('id', connectionId));\n\n                this.migrationConnectionRepository.search(criteria, this.context).then((connectionResponse) => {\n                    if (connectionResponse.length === 0 || connectionResponse.first().id === null) {\n                        this.isLoading = false;\n                        this.onNoConnectionSelected();\n                        resolve();\n                        return;\n                    }\n\n                    this.connection = connectionResponse.first();\n                    this.isLoading = false;\n                    resolve();\n                });\n            });\n        },\n\n        onNoConnectionSelected() {\n            if ([\n                this.routes.chooseAction,\n                this.routes.profileInformation,\n                this.routes.credentials,\n                this.routes.credentialsSuccess,\n                this.routes.credentialsError,\n            ].includes(this.currentRoute)) {\n                this.navigateToRoute(this.routes.profileInstallation);\n            }\n        },\n\n        createNewConnection() {\n            this.isLoading = true;\n            return this.checkConnectionName(this.connectionName).then((valid) => {\n                if (!valid) {\n                    this.isLoading = false;\n                    return Promise.reject();\n                }\n\n                this.connectionNameErrorCode = '';\n                const newConnection = this.migrationConnectionRepository.create(this.context);\n                newConnection.profileName = this.selectedProfile.profile;\n                newConnection.gatewayName = this.selectedProfile.gateway;\n                newConnection.name = this.connectionName;\n                return this.migrationConnectionRepository.save(newConnection, this.context).then(() => {\n                    return this.saveSelectedConnection(newConnection);\n                });\n            });\n        },\n\n        checkConnectionName(name) {\n            const criteria = new Criteria();\n            criteria.addFilter(Criteria.equals('name', name));\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((res) => {\n                return res.length === 0;\n            });\n        },\n\n        saveSelectedConnection(connection) {\n            return new Promise((resolve, reject) => {\n                this.isLoading = true;\n\n                State.commit('swagMigration/process/setConnectionId', connection.id);\n                State.commit('swagMigration/process/setEntityGroups', []);\n                State.commit('swagMigration/process/setEnvironmentInformation', {});\n                State.commit('swagMigration/ui/setDataSelectionIds', []);\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', []);\n\n                const criteria = new Criteria(1, 1);\n\n                this.migrationGeneralSettingRepository.search(criteria, this.context).then((items) => {\n                    if (items.length < 1) {\n                        this.isLoading = false;\n                        reject();\n                        return;\n                    }\n\n                    const setting = items.first();\n                    setting.selectedConnectionId = connection.id;\n                    this.migrationGeneralSettingRepository.save(setting, this.context).then(() => {\n                        this.connection = connection;\n                        this.isLoading = false;\n                        resolve();\n                    }).catch(() => {\n                        this.isLoading = false;\n                        reject();\n                    });\n                }).catch(() => {\n                    this.isLoading = false;\n                    reject();\n                });\n            });\n        },\n\n        onChildRouteReadyChanged(value) {\n            this.childRouteReady = value;\n        },\n\n        onCredentialsChanged(value) {\n            this.connection.credentialFields = value;\n        },\n\n        onProfileSelected(value) {\n            this.selectedProfile = value;\n        },\n\n        onChangeConnectionName(value) {\n            this.connectionName = value;\n            if (this.connectionName !== null && this.connectionName.length > 5) {\n                this.connectionNameErrorCode = '';\n                return;\n            }\n\n            this.connectionNameErrorCode = CONNECTION_NAME_ERRORS.NAME_TO_SHORT;\n        },\n\n        onChildIsLoadingChanged(value) {\n            this.childIsLoading = value;\n        },\n\n        onConnectionSelected(value) {\n            this.connection = value;\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard %}\\n    <div class=\\\"swag-migration-wizard\\\">\\n        <sw-modal v-if=\\\"showModal\\\"\\n                  class=\\\"swag-migration-wizard__modal\\\"\\n                  :size=\\\"modalSize\\\"\\n                  :title=\\\"$tc(modalTitleSnippet)\\\"\\n                  :isLoading=\\\"isLoading\\\"\\n                  @modal-close=\\\"onCloseModal\\\">\\n\\n            {% block swag_migration_wizard_placeholder %}\\n                <div v-show=\\\"isLoading || childIsLoading\\\" class=\\\"swag-migration-wizard__placeholder\\\"></div>\\n            {% endblock %}\\n\\n            {% block swag_migration_router_view %}\\n                    <router-view v-slot=\\\"{ Component }\\\">\\n                        <component\\n                            :is=\\\"Component\\\"\\n                            v-show=\\\"!isLoading && !childIsLoading\\\"\\n                            :currentConnectionId=\\\"connection.id\\\"\\n                            :profileInformationComponent=\\\"profileInformationComponent\\\"\\n                            :credentialsComponent=\\\"credentialsComponent\\\"\\n                            :credentials=\\\"connection.credentialFields\\\"\\n                            :errorMessageSnippet=\\\"errorMessageSnippet\\\"\\n                            :connectionNameErrorCode=\\\"connectionNameErrorCode\\\"\\n                            @onChildRouteReadyChanged=\\\"onChildRouteReadyChanged\\\"\\n                            @onTriggerPrimaryClick=\\\"triggerPrimaryClick\\\"\\n                            @onProfileSelected=\\\"onProfileSelected\\\"\\n                            @onChangeConnectionName=\\\"onChangeConnectionName\\\"\\n                            @onConnectionSelected=\\\"onConnectionSelected\\\"\\n                            @onCredentialsChanged=\\\"onCredentialsChanged\\\"\\n                            @onIsLoadingChanged=\\\"onChildIsLoadingChanged\\\"\\n                        ></component>\\n                    </router-view>\\n            {% endblock %}\\n\\n            <template class=\\\"swag-migration-wizard__footer\\\" #modal-footer>\\n                {% block swag_migration_wizard_footer %}\\n                    {% block swag_migration_wizard_arrow %}\\n                        <div class=\\\"swag-migration-wizard__left-actions\\\">\\n                            <sw-button v-show=\\\"buttonBackVisible\\\"\\n                                       class=\\\"swag-migration-wizard__buttonBack\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"onButtonBackClick\\\">\\n                                {{ $tc(buttonBackSnippet) }}\\n                            </sw-button>\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block swag_migration_wizard_actions %}\\n                        <div class=\\\"swag-migration-wizard__right-actions\\\">\\n\\n                            {% block swag_migration_wizard_actions_previous %}\\n                                <sw-button v-show=\\\"buttonSecondaryVisible\\\"\\n                                           size=\\\"small\\\"\\n                                           @click=\\\"onButtonSecondaryClick\\\">\\n                                    {{ $tc(buttonSecondarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n\\n                            {% block swag_migration_wizard_actions_next %}\\n                                <sw-button size=\\\"small\\\"\\n                                           variant=\\\"primary\\\"\\n                                           :disabled=\\\"buttonPrimaryDisabled\\\"\\n                                           @click=\\\"onButtonPrimaryClick\\\">\\n                                    {{ $tc(buttonPrimarySnippet) }}\\n                                </sw-button>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                {% endblock %}\\n            </template>\\n        </sw-modal>\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-introduction.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-introduction', {\n    template,\n\n    computed: {\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_introduction %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-introduction\\\">\\n\\n        {% block swag_migration_wizard_page_introduction_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_introduction_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_introduction_svg %}\\n                            <img class=\\\"swag-migration-wizard__illustration\\\" :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-introduction.svg')\\\">\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_introduction_api_hint %}\\n                            <h3 class=\\\"swag-migration-wizard__headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentHeadline') }}\\n                            </h3>\\n\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.introduction.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-profile-installation.html.twig';\nimport './swag-migration-wizard-page-profile-installation.scss';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-installation', {\n    template,\n\n    inject: ['storeService', 'extensionHelperService', 'cacheApiService', 'repositoryFactory'],\n\n    data() {\n        return {\n            pluginIsLoading: false,\n            pluginIsSaveSuccessful: false,\n            isInstalled: false,\n            pluginName: 'SwagMigrationMagento',\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        pluginRepository() {\n            return this.repositoryFactory.create('plugin');\n        },\n\n        assetFilter() {\n            return Shopware.Filter.getByName('asset');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.refreshPlugin();\n        },\n\n        refreshPlugin() {\n            const pluginCriteria = new Criteria();\n            pluginCriteria.addFilter(Criteria.equals('plugin.name', this.pluginName))\n                .addFilter(Criteria.equals('plugin.active', true))\n                .setLimit(1);\n\n            return this.pluginRepository.search(pluginCriteria, Shopware.Context.api).then((result) => {\n                if (result.total < 1) {\n                    return;\n                }\n\n                this.isInstalled = true;\n            });\n        },\n\n        onInstall() {\n            this.setupPlugin();\n        },\n\n        setupPlugin() {\n            this.pluginIsLoading = true;\n            this.pluginIsSaveSuccessful = false;\n\n            return this.extensionHelperService.downloadStoreExtension(this.pluginName)\n                .then(() => {\n                    this.pluginIsSaveSuccessful = true;\n\n                    return this.extensionHelperService.installStoreExtension(this.pluginName, 'plugin');\n                })\n                .then(() => {\n                    return this.extensionHelperService.activateStoreExtension(this.pluginName, 'plugin');\n                })\n                .finally(() => {\n                    this.pluginIsLoading = false;\n                    this.cacheApiService.clear().then(() => {\n                        window.location.reload();\n                    });\n                });\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_profile_installation %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-profile-installation\\\">\\n\\n        {% block swag_migration_wizard_page_profile_installation_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_profile_installation_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n                        {{ $tc('swag-migration.wizard.pages.profileInstallation.content') }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_profile_installation_plugins %}\\n                    <div class=\\\"swag-migration-wizard-profile-installation__plugins\\\">\\n\\n                        {% block swag_migration_wizard_page_profile_installation_availabilty_headline %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__availability-headline\\\">\\n                                {{ $tc('swag-migration.wizard.pages.profileInstallation.availabilityHeadline') }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_profile_installation_wrapper %}\\n                            <div class=\\\"swag-migration-wizard-profile-installation__wrapper\\\">\\n\\n                                {% block swag_migration_wizard_page_profile_installation_shopware_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/wizard-shopware6-profile-avatar.svg')\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_shopware_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                         {{ $tc('swag-migration.wizard.pages.profileInstallation.shopwareProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.4</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.5</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.6</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">5.7</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">6.3</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">6.4</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_shopware_installed_box %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                            <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                        </span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block swag_migration_wizard_page_profile_installation_magento_inner_wrapper %}\\n                                    <div class=\\\"swag-migration-wizard-profile-installation__shopware-plugin swag-migration-wizard-profile-installation__inner_wrapper\\\">\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_icon %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_icon_column\\\">\\n                                                <img class=\\\"swag-migration-wizard-profile-installation__plugin-icon\\\"\\n                                                     :src=\\\"assetFilter('/swagmigrationassistant/static/img/magento-profile-icon.svg')\\\">\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block swag_migration_wizard_page_profile_installation_magento_plugin_information %}\\n                                            <div class=\\\"swag-migration-wizard-profile-installation__plugin_information_column\\\">\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.magentoProfileHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_manufacturer %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__profile_manufacturer\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.profileManufacturer') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_headline %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_headline\\\">\\n                                                        {{ $tc('swag-migration.wizard.pages.profileInstallation.availableVersionHeadline') }}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_available_version_list %}\\n                                                    <div class=\\\"swag-migration-wizard-profile-installation__available_version_list\\\">\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">1.9</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.0</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.1</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__version_box\\\">2.2</span>\\n                                                        <span class=\\\"swag-migration-wizard-profile-installation__last_version_box\\\">2.3</span>\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_install_button_box %}\\n                                                    <div v-if=\\\"!isInstalled\\\" class=\\\"swag-migration-wizard-profile-installation__footer\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_install_button_box_content %}\\n                                                            <sw-button-process\\n                                                                    class=\\\"swag-migration-wizard-profile-installation__installation_button\\\"\\n                                                                    size=\\\"small\\\"\\n                                                                    variant=\\\"primary\\\"\\n                                                                    :isLoading=\\\"pluginIsLoading\\\"\\n                                                                    :disabled=\\\"pluginIsLoading\\\"\\n                                                                    :processSuccess=\\\"pluginIsSaveSuccessful\\\"\\n                                                                    @click=\\\"onInstall\\\">\\n                                                                {{ $tc('swag-migration.wizard.pages.profileInstallation.installationButton') }}\\n                                                            </sw-button-process>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n\\n                                                {% block swag_migration_wizard_page_profile_installation_magento_installed_box %}\\n                                                    <div v-else class=\\\"swag-migration-wizard-profile-installation__footer swag-migration-wizard-profile-installation__installed_box\\\">\\n\\n                                                        {% block swag_migration_wizard_page_profile_installation_magento_installed_box_content %}\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_img\\\">\\n                                                                <sw-icon name=\\\"regular-check-circle-s\\\" size=\\\"16px\\\"></sw-icon>\\n                                                            </span>\\n                                                            <span class=\\\"swag-migration-wizard-profile-installation__installed_title\\\">{{ $tc('swag-migration.wizard.pages.profileInstallation.installedHint') }}</span>\\n                                                        {% endblock %}\\n                                                    </div>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-connection-select.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-select', {\n    template,\n\n    inject: {\n        repositoryFactory: 'repositoryFactory',\n    },\n\n    props: {\n        currentConnectionId: {\n            type: String,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            selectedConnectionId: null,\n            connections: [],\n            context: Shopware.Context.api,\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        migrationConnectionRepository() {\n            return this.repositoryFactory.create('swag_migration_connection');\n        },\n    },\n\n    watch: {\n        currentConnectionId: {\n            immediate: true,\n            handler(newConnectionId) {\n                this.selectedConnectionId = newConnectionId;\n                this.onConnectionSelected();\n            },\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$emit('onChildRouteReadyChanged', false);\n            const criteria = new Criteria(1, 100);\n\n            return this.migrationConnectionRepository.search(criteria, this.context).then((items) => {\n                this.connections = items;\n                this.onConnectionSelected();\n            });\n        },\n\n        onConnectionSelected() {\n            const connection = this.connections.find((con) => {\n                return con.id === this.selectedConnectionId;\n            });\n\n            if (connection) {\n                this.$emit('onChildRouteReadyChanged', true);\n                this.$emit('onConnectionSelected', connection);\n            } else {\n                this.$emit('onChildRouteReadyChanged', false);\n            }\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_select_profile %}\\n    <div class=\\\"swag-migration-wizard-page-select-profile\\\">\\n\\n        {% block swag_migration_wizard_page_select_profile_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_select_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_select_profile_description %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionSelect.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_select_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-select-field\\n                                         v-model:value=\\\"selectedConnectionId\\\"\\n                                         :options=\\\"connections\\\"\\n                                         :label=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionLabel')\\\"\\n                                         :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionSelect.connectionPlaceholder')\\\"\\n                                         @update:value=\\\"onConnectionSelected\\\"\\n                        ></sw-select-field>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-connection-create.html.twig';\nimport './swag-migration-wizard-page-connection-create.scss';\n\nconst { Component } = Shopware;\nconst ShopwareError = Shopware.Classes.ShopwareError;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-connection-create', {\n    template,\n\n    inject: {\n        /** @var {MigrationApiService} migrationService */\n        migrationService: 'migrationService',\n    },\n\n    props: {\n        connectionNameErrorCode: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    data() {\n        return {\n            isLoading: true,\n            selection: {\n                profile: null,\n                gateway: null,\n                connectionName: null,\n            },\n            profiles: [],\n            gateways: [],\n        };\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        isReady() {\n            return (\n                this.selection.profile !== null &&\n                this.selection.gateway !== null &&\n                this.selection.connectionName !== null &&\n                this.selection.connectionName.length > 5\n            );\n        },\n\n        connectionNameError() {\n            if (this.connectionNameErrorCode === '') {\n                return null;\n            }\n\n            return new ShopwareError({\n                code: this.connectionNameErrorCode,\n            });\n        },\n\n        profileHint() {\n            if (!this.selection.gateway) {\n                return '';\n            }\n\n            const snippet = `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`;\n            if (this.$tc(snippet) !== `swag-migration.wizard.pages.connectionCreate.hint.${this.selection.gateway}`) {\n                return this.$tc(snippet);\n            }\n\n            return '';\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.setIsLoading(true);\n            this.emitOnChildRouteReadyChanged(false);\n\n            return this.migrationService.getProfiles().then((profiles) => {\n                this.profiles = profiles;\n                this.pushLinkToProfiles();\n\n                this.selectDefaultProfile();\n                this.setIsLoading(false);\n            });\n        },\n\n        pushLinkToProfiles() {\n            this.profiles.push({\n                name: 'profileLink',\n            });\n        },\n\n        profileSearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = `${option.sourceSystemName} ${option.version} - ${option.author}`;\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        gatewaySearch(searchParams) {\n            const searchTerm = searchParams.searchTerm;\n            return searchParams.options.filter(option => {\n                const label = this.$tc(option.snippet);\n                return label.toLowerCase().includes(searchTerm.toLowerCase());\n            });\n        },\n\n        getText(item) {\n            return `${item.sourceSystemName} ${item.version} - <i>${item.author}</i>`;\n        },\n\n        selectDefaultProfile() {\n            this.onSelectProfile('shopware55').then(() => {\n                this.onSelectGateway('api');\n            });\n        },\n\n        setIsLoading(value) {\n            this.isLoading = value;\n            this.$emit('onIsLoadingChanged', this.isLoading);\n        },\n\n        onSelectProfile(value) {\n            if (value === null || value === undefined) {\n                return Promise.resolve();\n            }\n\n            if (value === 'profileLink') {\n                this.$router.push({ name: 'swag.migration.wizard.profileInstallation' });\n                return Promise.resolve();\n            }\n\n            this.selection.profile = value;\n\n            return new Promise((resolve) => {\n                this.emitOnChildRouteReadyChanged(false);\n                this.gateways = [];\n                this.selection.gateway = null;\n\n                if (this.selection.profile !== null) {\n                    this.migrationService.getGateways(this.selection.profile).then((gateways) => {\n                        this.gateways = gateways;\n                        this.selection.gateway = null;\n\n                        if (this.gateways.length === 1) {\n                            this.$nextTick(() => {\n                                this.selection.gateway = this.gateways[0].name;\n                                this.emitOnChildRouteReadyChanged(this.isReady);\n                            });\n                        }\n\n                        this.emitOnChildRouteReadyChanged(this.isReady);\n                        resolve();\n                    });\n                }\n            });\n        },\n\n        onSelectGateway(value) {\n            if (value !== null && value !== undefined) {\n                this.selection.gateway = value;\n            }\n\n            this.emitOnChildRouteReadyChanged(false);\n            this.$emit('onProfileSelected', this.selection);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        onChangeConnectionName(value) {\n            this.$emit('onChangeConnectionName', value);\n            this.emitOnChildRouteReadyChanged(this.isReady);\n        },\n\n        emitOnChildRouteReadyChanged(isReady) {\n            this.$emit('onChildRouteReadyChanged', isReady);\n        },\n\n        onKeyPressEnter() {\n            this.$emit('onTriggerPrimaryClick');\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_create_profile %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-create-profile\\\"\\n         @keypress.enter=\\\"onKeyPressEnter\\\">\\n\\n        {% block swag_migration_wizard_page_create_profile_content %}\\n            <div v-if=\\\"!isLoading\\\" class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_create_profile_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_create_profile_content_information %}\\n                            <p class=\\\"swag-migration-wizard__description\\\">\\n                                {{ $tc('swag-migration.wizard.pages.connectionCreate.contentInformation') }}\\n                            </p>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_create_profile_selection %}\\n                    <div class=\\\"swag-migration-wizard__form\\\">\\n                        <sw-text-field v-autofocus\\n                                       v-model:value=\\\"selection.connectionName\\\"\\n                                       :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionLabel')\\\"\\n                                       :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionPlaceholder')\\\"\\n                                       validation=\\\"required\\\"\\n                                       :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.connectionTooltip')\\\"\\n                                       :error=\\\"connectionNameError\\\"\\n                                       @update:value=\\\"onChangeConnectionName\\\"\\n                        >\\n                        </sw-text-field>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profileLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.profilePlaceholder')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"profiles\\\"\\n                                          v-model:value=\\\"selection.profile\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"profileSearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @update:value=\\\"onSelectProfile\\\"\\n                        >\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_profile_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    <span v-html=\\\"getText(singleSelection)\\\"></span>\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    <div v-if=\\\"item.name === 'profileLink'\\\" class=\\\"swag-migration-wizard-create-connection__install-profile-link-wrapper\\\">\\n                                        <div>\\n                                            {{ $tc('swag-migration.wizard.pages.connectionCreate.profileInstall') }}\\n                                        </div>\\n                                        <div>\\n                                            <sw-icon name=\\\"regular-chevron-right-xs\\\" size=\\\"16\\\"></sw-icon>\\n                                        </div>\\n                                    </div>\\n                                    <span v-else v-html=\\\"getText(item)\\\"></span>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-single-select :label=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayLabel')\\\"\\n                                          :placeholder=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayPlaceholder')\\\"\\n                                          :helpText=\\\"$tc('swag-migration.wizard.pages.connectionCreate.gatewayTooltip')\\\"\\n                                          :popoverClasses=\\\"['swag-migration-wizard-page-create-profile']\\\"\\n                                          :popoverConfig=\\\"{active: true, resizeWidth: true, style: { zIndex: 1000, marginLeft: '8px' }}\\\"\\n                                          :options=\\\"gateways\\\"\\n                                          v-model:value=\\\"selection.gateway\\\"\\n                                          valueProperty=\\\"name\\\"\\n                                          :searchFunction=\\\"gatewaySearch\\\"\\n                                          validation=\\\"required\\\"\\n                                          @update:value=\\\"onSelectGateway\\\">\\n\\n                            {% block swag_migration_wizard_page_create_profile_form_gateway_field_options %}\\n                                <template #selection-label-property=\\\"{ item: singleSelection, labelProperty, valueProperty, searchTerm, getKey }\\\">\\n                                    {{ $tc(singleSelection.snippet) }}\\n                                </template>\\n\\n                                <template #result-label-property=\\\"{ item, index, labelProperty, valueProperty, searchTerm, highlightSearchTerm, getKey }\\\">\\n                                    {{ $tc(item.snippet) }}\\n                                </template>\\n                            {% endblock %}\\n                        </sw-single-select>\\n\\n                        <sw-alert v-if=\\\"profileHint\\\">\\n                            {{ profileHint }}\\n                        </sw-alert>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-profile-information.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-profile-information', {\n    template,\n\n    props: {\n        profileInformationComponent: {\n            type: String,\n            default: '',\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.profileInformationComponent);\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_profile_information %}\\n    <div>\\n\\n        {% block swag_migration_wizard_page_profile_information_component %}\\n            <component v-if=\\\"profileInformationComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"profileInformationComponent\\\">\\n            </component>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-credentials.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials', {\n    template,\n\n    props: {\n        credentialsComponent: {\n            type: String,\n            default: '',\n        },\n\n        credentials: {\n            type: Object,\n            default() {\n                return {};\n            },\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n\n    computed: {\n        componentIsLoaded() {\n            return Component.getComponentRegistry().has(this.credentialsComponent);\n        },\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials %}\\n    <div class=\\\"swag-migration-wizard-page-credentials\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_forms %}\\n            <component v-if=\\\"credentialsComponent !== '' && componentIsLoaded\\\"\\n                       :is=\\\"credentialsComponent\\\"\\n                       :credentials=\\\"credentials\\\"\\n                       @onCredentialsChanged=\\\"$emit('onCredentialsChanged', $event)\\\"\\n                       @onChildRouteReadyChanged=\\\"$emit('onChildRouteReadyChanged', $event)\\\"\\n                       @onTriggerPrimaryClick=\\\"$emit('onTriggerPrimaryClick')\\\">\\n            </component>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_no_form_found %}\\n            <template v-else class=\\\"swag-migration-wizard-page-credentials__empty_state\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_no_form_found_content %}\\n                    <p class=\\\"swag-migration-wizard__emptyStateDescription\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.emptyState') }}\\n                    </p>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","import template from './swag-migration-wizard-page-credentials-success.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-success', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_success %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-success\\\">\\n\\n        {% block swag_migration_wizard_page_success_error_alert %}\\n            <sw-alert v-if=\\\"errorMessageSnippet !== ''\\\"\\n                      class=\\\"swag-migration-wizard-page-credentials-success__alert\\\"\\n                      id=\\\"alert-error-message\\\"\\n                      variant=\\\"warning\\\">\\n                {{ $tc(errorMessageSnippet) }}\\n            </sw-alert>\\n        {% endblock %}\\n\\n        {% block swag_migration_wizard_page_credentials_success_content %}\\n            <div class=\\\"swag-migration-wizard__content\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_information %}\\n                    <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                        {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                            <div v-if=\\\"errorMessageSnippet === ''\\\"\\n                                 class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--success\\\">\\n                                <sw-icon class=\\\"swag-migration-wizard__success-icon\\\"\\n                                         name=\\\"regular-thumbs-up\\\"\\n                                         size=\\\"36px\\\"\\n                                         decorative>\\n                                </sw-icon>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_title %}\\n                            <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                                {{ $tc('swag-migration.wizard.pages.credentials.success.contentTitle') }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block swag_migration_wizard_page_credentials_success_api_hint %}\\n                            {{ $tc('swag-migration.wizard.pages.credentials.success.contentInformation') }}\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","import template from './swag-migration-wizard-page-credentials-error.html.twig';\n\nconst { Component } = Shopware;\n\n/**\n * @package services-settings\n */\nComponent.register('swag-migration-wizard-page-credentials-error', {\n    template,\n\n    props: {\n        errorMessageSnippet: {\n            type: String,\n            default: '',\n            required: false,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(),\n        };\n    },\n});\n","export default \"{% block swag_migration_wizard_page_credentials_error %}\\n    <div class=\\\"swag-migration-wizard swag-migration-wizard-page-credentials-error\\\">\\n\\n        {% block swag_migration_wizard_page_credentials_error_content %}\\n        <div class=\\\"swag-migration-wizard__content\\\">\\n\\n            {% block swag_migration_wizard_page_credentials_error_information %}\\n            <div class=\\\"swag-migration-wizard__content-information\\\">\\n\\n                {% block swag_migration_wizard_page_credentials_success_bubble %}\\n                    <div class=\\\"swag-migration-wizard__bubble swag-migration-wizard__bubble--warning\\\">\\n                        <sw-icon class=\\\"swag-migration-wizard__warning-icon\\\"\\n                                 name=\\\"regular-exclamation-triangle\\\"\\n                                 size=\\\"36px\\\"\\n                                 decorative>\\n                        </sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_title %}\\n                    <h3 class=\\\"swag-migration-wizard__information-header\\\">\\n                        {{ $tc('swag-migration.wizard.pages.credentials.error.contentTitle') }}\\n                    </h3>\\n                {% endblock %}\\n\\n                {% block swag_migration_wizard_page_credentials_error_api_hint %}\\n                    <template v-if=\\\"errorMessageSnippet !== ''\\\">\\n                        <p class=\\\"swag-migration-wizard__description\\\">\\n                            {{ $tc(errorMessageSnippet) }}\\n                        </p>\\n                    </template>\\n                {% endblock %}\\n            </div>\\n            {% endblock %}\\n        </div>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\\n\";","import template from './sw-dashboard-index.html.twig';\n\nconst { Component } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nComponent.override('sw-dashboard-index', {\n    template,\n\n    inject: [\n        'repositoryFactory',\n        'acl',\n    ],\n\n    data() {\n        return {\n            context: Shopware.Context.api,\n            runExists: false,\n            loading: true,\n            run: {},\n        };\n    },\n\n    computed: {\n        migrationRunRepository() {\n            return this.repositoryFactory.create('swag_migration_run');\n        },\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$super('createdComponent');\n\n            if (!this.acl.isAdmin()) {\n                return new Promise((resolve) => { resolve(); });\n            }\n\n            return this.migrationRunRepository.search(new Criteria(), this.context).then((items) => {\n                this.runExists = items.length > 0;\n\n                if (this.runExists) {\n                    this.run = items[0];\n                }\n\n                this.loading = false;\n            });\n        },\n    },\n});\n","export default \"{% block sw_dashboard_index_content_intro_card %}\\n    {% parent %}\\n\\n    {%  block swag_migration_dashboard_card %}\\n\\n        {% block sw_dashboard_index_content_migration_card %}\\n            <swag-migration-dashboard-card v-if=\\\"acl.isAdmin()\\\"></swag-migration-dashboard-card>\\n        {% endblock %}\\n    {% endblock %}\\n{% endblock %}\\n\";","/**\n * @type MIGRATION_STATUS\n */\nimport { MIGRATION_STATUS } from '../service/migration/swag-migration-worker-status-manager.service';\n\n/**\n * The vuex store for handling all global data that is needed for the migration process.\n * @module\n * @package services-settings\n */\nexport default {\n    namespaced: true,\n\n    state: {\n        /**\n         * The id of the currently selected connection to a source system.\n         */\n        connectionId: null,\n\n        /**\n         * The environment information of the connection check.\n         */\n        environmentInformation: {},\n\n        /**\n         * The id of the current migration run.\n         */\n        runId: null,\n\n        /**\n         * Is the migration currently running.\n         */\n        isMigrating: false,\n\n        /**\n         * The entity groups are generated in the backend depending on the selected data to migrate and contain entities.\n         * They are used for the requests to the backend and\n         * every entity in every group will be used for the fetch, write and download requests.\n         * During a migration their value can change multiple times\n         * (e.g. a state change from write to download).\n         * In general, they represent the progress and current status of the migration.\n         */\n        entityGroups: [],\n\n        /**\n         * Id of the entity group that is currently being processed.\n         */\n        currentEntityGroupId: '',\n\n        /**\n         * The current status of the migration.\n         * Each migration runs through different states (e.g. premapping, fetch, write, download)\n         */\n        statusIndex: MIGRATION_STATUS.WAITING,\n    },\n\n    mutations: {\n        setConnectionId(state, id) {\n            state.connectionId = id;\n        },\n\n        setEnvironmentInformation(state, environmentInformation) {\n            state.environmentInformation = environmentInformation;\n        },\n\n        setRunId(state, runId) {\n            state.runId = runId;\n        },\n\n        setIsMigrating(state, isMigrating) {\n            state.isMigrating = isMigrating;\n        },\n\n        setStatusIndex(state, newIndex) {\n            state.statusIndex = newIndex;\n        },\n\n        setCurrentEntityGroupId(state, newId) {\n            state.currentEntityGroupId = newId;\n        },\n\n        setEntityGroups(state, entityGroups) {\n            state.entityGroups = entityGroups;\n        },\n\n        setEntityProgress(state, { groupId, groupCurrentCount, groupTotal }) {\n            const targetGroup = state.entityGroups.find(group => group.id === groupId);\n\n            if (targetGroup === undefined) {\n                return;\n            }\n\n            if (targetGroup.total !== groupTotal) {\n                targetGroup.total = groupTotal;\n            }\n\n            targetGroup.currentCount = groupCurrentCount;\n            this.state.currentEntityGroupId = targetGroup.id;\n        },\n\n        resetProgress(state) {\n            state.entityGroups.forEach((data) => {\n                data.currentCount = 0;\n            });\n        },\n    },\n\n    getters: {\n        displayEntityGroups(state) {\n            if (state.statusIndex === MIGRATION_STATUS.PROCESS_MEDIA_FILES) {\n                return state.entityGroups.filter((group) => {\n                    return group.id === 'processMediaFiles';\n                });\n            }\n\n            return state.entityGroups.filter((group) => {\n                return group.id !== 'processMediaFiles';\n            });\n        },\n    },\n};\n","import './mixin';\nimport './component';\nimport './page';\nimport './extension/sw-dashboard-index';\nimport './profile';\nimport MigrationProcessStore from '../../core/data/migrationProcess.store';\nimport MigrationUIStore from '../../core/data/migrationUI.store';\n\nconst { Module, State } = Shopware;\n\nState.registerModule('swagMigration/process', MigrationProcessStore);\nState.registerModule('swagMigration/ui', MigrationUIStore);\n\n/**\n * @package services-settings\n */\nModule.register('swag-migration', {\n    type: 'plugin',\n    name: 'swag-migration',\n    title: 'swag-migration.general.mainMenuItemGeneral',\n    description: 'swag-migration.general.descriptionTextModule',\n    version: '0.9.0',\n    targetVersion: '0.9.0',\n    color: '#9AA8B5',\n    icon: 'regular-cog',\n\n    routes: {\n        emptyScreen: {\n            component: 'swag-migration-empty-screen',\n            path: 'empty',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        index: {\n            component: 'swag-migration-index',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index',\n            },\n            redirect: { name: 'swag.migration.index.main' },\n            children: {\n                main: {\n                    path: 'main',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: false,\n                        privilege: 'admin',\n                    },\n                },\n                resetMigration: {\n                    path: 'reset-migration',\n                    component: 'swag-migration-main-page',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        resetMigration: true,\n                        privilege: 'admin',\n                    },\n                },\n                history: {\n                    path: 'history',\n                    component: 'swag-migration-history',\n                    children: {\n                        detail: {\n                            path: 'detail/:id',\n                            component: 'swag-migration-history-detail',\n                            meta: {\n                                parentPath: 'sw.settings.index',\n                                privilege: 'admin',\n                            },\n                        },\n                    },\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n                dataSelector: {\n                    path: 'dataSelector',\n                    component: 'swag-migration-data-selector',\n                    meta: {\n                        parentPath: 'sw.settings.index',\n                        privilege: 'admin',\n                    },\n                },\n            },\n        },\n        processScreen: {\n            path: 'processScreen',\n            component: 'swag-migration-process-screen',\n            meta: {\n                parentPath: 'sw.settings.index',\n                privilege: 'admin',\n            },\n        },\n        wizard: {\n            component: 'swag-migration-wizard',\n            path: 'wizard',\n            redirect: { name: 'swag.migration.wizard.introduction' },\n            children: {\n                introduction: {\n                    path: 'introduction',\n                    component: 'swag-migration-wizard-page-introduction',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInstallation: {\n                    path: 'profile/installation',\n                    component: 'swag-migration-wizard-page-profile-installation',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionCreate: {\n                    path: 'connection/create',\n                    component: 'swag-migration-wizard-page-connection-create',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                connectionSelect: {\n                    path: 'connection/select',\n                    component: 'swag-migration-wizard-page-connection-select',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                profileInformation: {\n                    path: 'profile/information',\n                    component: 'swag-migration-wizard-page-profile-information',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentials: {\n                    path: 'credentials',\n                    component: 'swag-migration-wizard-page-credentials',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsSuccess: {\n                    path: 'credentials/success',\n                    component: 'swag-migration-wizard-page-credentials-success',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n                credentialsError: {\n                    path: 'credentials/error',\n                    component: 'swag-migration-wizard-page-credentials-error',\n                    meta: {\n                        privilege: 'admin',\n                    },\n                },\n            },\n            meta: {\n                privilege: 'admin',\n            },\n        },\n    },\n\n    settingsItem: {\n        group: 'plugins',\n        to: 'swag.migration.index',\n        iconComponent: 'swag-migration-settings-icon',\n        privilege: 'admin',\n    },\n});\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n            version: Shopware.Context.api.apiVersion,\n        };\n    }\n\n    updateConnectionCredentials(connectionId, credentialFields, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-connection-credentials`, {\n            connectionId,\n            credentialFields,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    checkConnection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/check-connection`, { connectionId }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getDataSelection(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/data-selection`, {\n            ...this.basicConfig,\n            params: {\n                connectionId,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    createMigration(connectionId, dataSelectionIds) {\n        const params = {\n            connectionId,\n            dataSelectionIds,\n        };\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/create-migration`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    fetchData(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/fetch-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateWriteProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-write-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    updateMediaFilesProgress(runUuid, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/update-media-files-progress`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writeData(additionalParams = {}, additionalHeaders = { }) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-data`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    processMedia(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/process-media`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getState(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/get-state`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    takeoverMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/takeover-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    abortMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/abort-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    finishMigration(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/finish-migration`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    assignThemes(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/assign-themes`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    generatePremapping(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/generate-premapping`, { runUuid }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    writePremapping(runUuid, premapping) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/write-premapping`, { runUuid, premapping }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfiles() {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profiles`, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGateways(profileName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-gateways`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getProfileInformation(profileName, gatewayName) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/get-profile-information`, {\n            ...this.basicConfig,\n            params: {\n                profileName,\n                gatewayName,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    getGroupedLogsOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.get(`${this.getApiBasePath()}/get-grouped-logs-of-run`, {\n            ...this.basicConfig,\n            params: {\n                runUuid,\n            },\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    clearDataOfRun(runUuid) {\n        const headers = this.getBasicHeaders();\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/clear-data-of-run`, {\n            runUuid,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    resetChecksums(connectionId, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/reset-checksums`, {\n            connectionId,\n        }, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n\n    indexing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post('_action/index', {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    cleanupMigrationData(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/cleanup-migration-data`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n\n    isMediaProcessing(additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        return this.httpClient.get(`_action/${this.getApiBasePath()}/is-media-processing`, {\n            ...this.basicConfig,\n            headers,\n        });\n    }\n}\n\nexport default MigrationApiService;\n","const { State } = Shopware;\nconst { Criteria } = Shopware.Data;\n\n/**\n * @package services-settings\n */\nclass ProcessStoreInitService {\n    constructor(migrationService, repositoryFactory, context) {\n        this._migrationService = migrationService;\n        this._migrationGeneralSettingRepository = repositoryFactory.create('swag_migration_general_setting');\n        this._context = context;\n    }\n\n    initProcessStore() {\n        return new Promise((resolve, reject) => {\n            State.commit('swagMigration/process/setEntityGroups', []);\n            State.commit('swagMigration/process/setEnvironmentInformation', {});\n            const criteria = new Criteria(1, 1);\n\n            this._migrationGeneralSettingRepository.search(criteria, this._context).then((settings) => {\n                if (settings.length === 0) {\n                    reject();\n                    return null;\n                }\n\n                const connectionId = settings.first().selectedConnectionId;\n\n                if (connectionId === null) {\n                    reject();\n                    return null;\n                }\n\n                State.commit('swagMigration/process/setConnectionId', connectionId);\n                return connectionId;\n            }).then((connectionId) => {\n                if (connectionId === null) {\n                    reject();\n                    return;\n                }\n\n                this._migrationService.checkConnection(connectionId)\n                    .then((connectionCheckResponse) => {\n                        State.commit('swagMigration/process/setEnvironmentInformation', connectionCheckResponse);\n                        resolve();\n                    }).catch(() => {\n                        reject();\n                    });\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default ProcessStoreInitService;\n","const { State } = Shopware;\n\n/**\n * @package services-settings\n */\nclass UiStoreInitService {\n    constructor(migrationService) {\n        this._migrationService = migrationService;\n        this._migrationProcessState = State.get('swagMigration/process');\n    }\n\n    initUiStore() {\n        return new Promise((resolve, reject) => {\n            const connectionId = this._migrationProcessState.connectionId;\n\n            if (connectionId === undefined) {\n                resolve();\n                return;\n            }\n\n            this._migrationService.getDataSelection(connectionId).then((dataSelection) => {\n                State.commit('swagMigration/ui/setPremapping', []);\n                State.commit('swagMigration/ui/setDataSelectionTableData', dataSelection);\n                const selectedIds = dataSelection.filter(selection => selection.requiredSelection)\n                    .map(selection => selection.id);\n                State.commit('swagMigration/ui/setDataSelectionIds', selectedIds);\n                resolve();\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\nexport default UiStoreInitService;\n","const ApiService = Shopware.Classes.ApiService;\n\n/**\n * @package services-settings\n */\nclass MigrationIndexingApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'migration') {\n        super(httpClient, loginService, apiEndpoint);\n        this.basicConfig = {\n            timeout: 30000,\n        };\n    }\n\n    indexing(lastIndexer = null, offset = null, timestamp = null, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        const params = {};\n        if (lastIndexer !== null && lastIndexer !== undefined) {\n            params.lastIndexer = lastIndexer;\n        }\n        if (offset !== null && offset !== undefined) {\n            params.offset = offset;\n        }\n        if (timestamp !== null && timestamp !== undefined) {\n            params.timestamp = timestamp;\n        }\n\n        return this.httpClient.post(`_action/${this.getApiBasePath()}/indexing`, params, {\n            ...this.basicConfig,\n            headers,\n        }).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MigrationIndexingApiService;\n","import MigrationApiService from '../core/service/api/swag-migration.api.service';\nimport ProcessStoreInitService from '../core/service/migration/swag-migration-process-store-init.service';\nimport UiStoreInitService from '../core/service/migration/swag-migration-ui-store-init.service';\nimport MigrationIndexingApiService from '../core/service/api/swag-migration-indexing.api.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationApiService(initContainer.httpClient, container.loginService);\n});\n\nApplication.addServiceProvider('processStoreInitService', (container) => {\n    return new ProcessStoreInitService(\n        container.migrationService,\n        container.repositoryFactory,\n        Shopware.Context.api,\n    );\n});\n\nApplication.addServiceProvider('uiStoreInitService', (container) => {\n    return new UiStoreInitService(container.migrationService);\n});\n\nApplication.addServiceProvider('migrationIndexingApiService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new MigrationIndexingApiService(initContainer.httpClient, container.loginService);\n});\n","/**\n * @package services-settings\n */\nclass MigrationIndexingWorker {\n    /**\n     * @param {MigrationIndexingApiService} indexingApiService\n     */\n    constructor(indexingApiService) {\n        this._indexingApiService = indexingApiService;\n    }\n\n    start() {\n        return new Promise(async (resolve) => {\n            let running = true;\n            let lastResult = {};\n            while (running) {\n                // eslint-disable-next-line no-await-in-loop\n                await this._indexingApiService.indexing(\n                    lastResult.lastIndexer,\n                    lastResult.offset,\n                    lastResult.timestamp,\n                    // eslint-disable-next-line no-loop-func\n                ).then((result) => {\n                    if (result.done !== undefined && result.done === true) {\n                        running = false;\n                        return;\n                    }\n\n                    lastResult = result;\n                });\n            }\n            resolve();\n        });\n    }\n}\n\nexport default MigrationIndexingWorker;\n","import MigrationWorkerService from '../core/service/migration/swag-migration-worker.service';\nimport MigrationIndexingWorker from '../core/service/migration/swag-migration-indexing-worker.service';\n\nconst { Application } = Shopware;\n\nApplication.addServiceProvider('migrationWorkerService', (container) => {\n    return new MigrationWorkerService(\n        container.migrationService,\n        container.migrationIndexingWorkerService,\n    );\n});\n\nApplication.addServiceProvider('migrationIndexingWorkerService', (container) => {\n    return new MigrationIndexingWorker(\n        container.migrationIndexingApiService,\n    );\n});\n"],"names":["map","webpackContext","req","__webpack_require__","webpackContextResolve","o","e","code","keys","Object","resolve","module","exports","id","notificationId","Shopware","WorkerNotification","register","name","fn","next","$root","entry","notification","mediaFileCount","size","config","title","$t","message","$tc","variant","metadata","growl","isLoading","create","then","uuid","update","Mixin","debug","Utils","inject","data","routes","currentRoute","index","computed","routeIndex","Math","floor","routeCount","routeIndices","forEach","includes","push","length","routePrevious","previousRoute","route","undefined","routeNext","nextRoute","navigateToPreviousPossible","navigateToNextPossible","created","matchCurrentRoute","updated","methods","notifyCallback","routerCurrentRoute","$router","value","some","onChildRouteChanged","warn","navigateToRoute","catch","console","info","error","navigateToPrevious","navigateToNext","context","require","key","Component","ShopwareError","Classes","template","props","credentials","type","default","inputCredentials","endpoint","apiUser","apiKey","apiKeyErrorCode","apiKeyLength","apiKeyError","meta","parameters","watch","immediate","handler","newCredentials","emitCredentials","emitOnChildRouteReadyChanged","areCredentialsValid","deep","newInputCredentials","apiKeyValid","validateInput","input","isReady","$emit","onKeyPressEnter","assetFilter","Filter","getByName","dbHost","dbPort","dbUser","dbPassword","dbName","installationRoot","extend","apiPassword","apiPasswordLength","bearer_token","apiPasswordValid","content","__esModule","locals","add","listToStyles","parentId","list","styles","newStyles","i","item","part","css","media","sourceMap","parts","hasDocument","document","DEBUG","stylesInDom","head","getElementsByTagName","singletonElement","singletonCounter","isProduction","noop","options","ssrIdKey","isOldIE","navigator","test","userAgent","toLowerCase","addStylesClient","_isProduction","_options","addStylesToDom","newList","mayRemove","domStyle","refs","j","addStyle","createStyleElement","styleElement","createElement","appendChild","obj","remove","querySelector","parentNode","removeChild","styleIndex","applyToSingletonTag","bind","applyToTag","newObj","replaceText","textStore","replacement","filter","Boolean","join","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","ssrId","sources","btoa","unescape","encodeURIComponent","JSON","stringify","firstChild","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","d","definition","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","p","window","__sw__","assetPath","disabledAttribute","String","isDisabled","extendedGridRowClasses","classes","isSelected","isDeleted","isLocal","entityGroups","Array","dataSnippets","snippets","group","snippet","State","MIGRATION_STATUS","freeze","WAITING","PREMAPPING","FETCH_DATA","WRITE_DATA","PROCESS_MEDIA_FILES","FINISHED","MIGRATION_DISPLAY_STATUS","WorkerStatusManager","constructor","migrationService","_migrationService","_migrationProcessState","changeStatus","runId","newStatus","statusIndex","Promise","reject","beforeWriteProgress","params","onStatusPreparationFinished","err","beforeProcessMedia","onFinish","commit","requestRetry","requestFailedCount","updateWriteProgress","response","updateMediaFilesProgress","newEntityGroups","finishMigration","mapState","mapGetters","getComponentHelper","currentStatus","progressBarValue","displayEntityGroups","reduce","sum","currentCount","progressBarMaxValue","total","progressBarTitle","currentEntityGroupId","progressBarLeftPointDescription","caption","statusLong","hint","createdComponent","required","TAKEOVER_STATE","RUNNING","INTERRUPTED","ABORTED","migrationWorkerService","isTakeoverForbidden","isMigrationInterrupted","possibleState","state","showTakeoverModal","showAbortModal","showRedirectModal","titleSnippet","messageSnippet","refreshState","isMigrationRunningInOtherTab","checkForRunningMigration","runState","isMigrationRunning","onCheckButtonClick","status","onCloseTakeoverModal","onTakeover","$nextTick","onCloseAbortModal","onAbort","onCloseRedirectModal","onRedirect","onNavigateMainClick","location","reload","format","Criteria","Data","BADGE_TYPE","SUCCESS","DANGER","migrationProcessStoreInitService","repositoryFactory","mixins","filters","localizedNumberFormat","locale","adminLocaleLanguage","adminLocaleRegion","formatter","Intl","NumberFormat","connected","showMoreInformation","confirmModalIsLoading","showRemoveCredentialsConfirmModal","showResetChecksumsConfirmModal","showResetMigrationConfirmModal","lastConnectionCheck","lastMigrationDate","connection","Context","api","displayEnvironmentInformation","environmentInformation","migrationRunRepository","migrationConnectionRepository","connectionName","shopUrl","sourceSystemDomain","replace","shopUrlPrefix","match","sslActive","shopUrlPrefixClass","connectionBadgeLabel","serverUnreachable","connectionBadgeVariant","shopFirstLetter","sourceSystemName","profile","version","author","profileIcon","icon","gateway","lastConnectionCheckDateTimeParams","date","getDateString","time","getTimeString","lastMigrationDateTimeParams","$route","resetMigration","connectionId","newConnectionId","fetchConnection","updateLastMigrationDate","openResetMigrationModal","onCloseResetModal","criteria","addSorting","sort","search","runs","first","createdAt","credentialFields","Date","getProfileInformation","profileName","gatewayName","profileInformation","day","month","year","hour","minute","onClickEditConnectionCredentials","onClickCreateConnection","onClickSelectConnection","onClickProfileInstallation","onClickRemoveConnectionCredentials","updateConnectionCredentials","go","onClickResetChecksums","resetChecksums","onClickResetMigration","cleanupMigrationData","initProcessStore","createNotificationError","displayWarnings","fetchTableData","dataSelectionTableData","$refs","tableDataGrid","dataSelectionIds","selectItem","onGridSelectItem","selection","selectionIds","requiredSelection","showHelptext","entityTotals","getHelptext","string","entityNames","UI_COMPONENT_INDEX","WARNING_CONFIRM","DATA_SELECTOR","LOADING_SCREEN","MEDIA_SCREEN","RESULT_SUCCESS","PAUSE_SCREEN","TAKEOVER","CONNECTION_LOST","namespaced","componentIndex","startMigration","isPaused","isPremappingValid","premapping","unfilledPremapping","filledPremapping","mutations","setComponentIndex","newIndex","setIsLoading","setStartMigration","setIsPaused","setIsPremappingValid","isValid","setDataSelectionIds","newIds","setDataSelectionTableData","newTableData","setPremapping","newPremapping","unfilledMapping","filledMapping","newFilledGroup","choices","entity","mapping","newUnfilledGroup","destinationUuid","getters","isMigrationAllowed","tableDataIds","premappingInput","displayUnfilledPremapping","displayFilledPremapping","newRunId","fetchPremapping","notifyPremappingValidWatchers","validatePremapping","generatePremapping","onInvalidMigrationAccessToken","updateStore","leftPointDescription","rightPointDescription","Number","maxValue","rightPointClasses","isCurrencyChecked","isLanguageChecked","hasDifferentCurrency","sourceSystemCurrency","targetSystemCurrency","hasDifferentLanguage","sourceSystemLanguage","targetSystemLanguage","sourceSystemLocale","targetSystemLocale","isContinuable","onCheckboxValueChanged","items","selectedNumber","tabItems","swTabsItems","mounted","mountedComponent","tabs","checkIfNeedScroll","addScrollbarOffset","setTimeout","setActiveItem","onNewActiveItem","contentContainer","setActive","getErrorCountForGroupTab","currentValue","active","disableRouteParams","limit","paginationSteps","getList","start","page","end","min","onInput","getClassesAfterValidation","expandTitle","collapseTitle","isExpanded","onClick","color","fontSize","lineHeight","avatarStyle","width","height","generateAvatarInitialsSize","avatarSize","shopAvatar","offsetHeight","round","migrationUiStoreInitService","storesInitializing","metaInfo","$createTitle","storeIsMigrationAllowed","migrationDisabled","migrateButtonDisabled","isMigrating","initUiStore","finally","onMigrate","contentComponent","onActionButtonClick","methodName","onConnectClick","connectionEstablished","requestStatus","isWarning","isRunning","migrationRuns","migrationDateOptions","second","sortBy","sortDirection","oldParams","logDownloadEndpoint","runIdForLogDownload","runIdForRunClear","showRunClearConfirmModal","runClearConfirmModalIsLoading","isMediaProcessing","migrationColumns","getMigrationColumns","dateFilter","getApiBasePath","property","dataIndex","label","primary","allowResize","visible","align","normalizeListingParams","getMainListingParams","naturalSorting","parseInt","onMigrateButtonClick","onContextDownloadLogFile","downloadLogsOfRunForm","submit","clearDataOfRun","onContextClearRunClicked","onClearRunConfirmed","migrationRun","showModal","currentTab","runStatusSnippet","runStatusClasses","onCloseModal","addFilter","equals","tabReference","dataTabItem","newActiveTabItem","allMigrationErrors","migrationErrors","downloadUrl","columns","sortable","loadAllMigrationErrors","applySorting","startIndex","endIndex","getGroupedLogsOfRun","getErrorTitleSnippet","snippetKey","$te","submitDownload","downloadForm","allMigrationData","migrationData","progress","utils","StorageBroadcastService","receiveCallback","channelKey","_clientId","createId","_channelKey","_receiveCallback","addEventListener","messageReceived","getClientId","setClientId","sendMessage","localStorage","setItem","event","parse","getItem","removeItem","Application","WORKER_API_OPERATION","WorkerRequest","requestParams","workerStatusManager","onInterruptCB","_MAX_REQUEST_TIME","_DEFAULT_CHUNK_SIZE","_CHUNK_PROPORTION_UP_WEIGHT","_CHUNK_PROPORTION_DOWN_WEIGHT","_runId","runUuid","_requestParams","_workerStatusManager","_interrupt","_chunkSize","_lastChunkSize","_successfulChunk","_onInterruptCB","operation","interrupt","_callInterruptCB","migrateProcess","groupStartIndex","entityStartIndex","entityOffset","statusChangedError","WORKER_INTERRUPT_TYPE","STOP","groupIndex","groupProgress","entityIndex","entities","entityName","entityCount","_migrateEntity","currentOffset","_migrateEntityRequest","newOffset","groupId","groupCurrentCount","groupTotal","offset","beforeRequestTime","_handleChunkSize","validToken","afterRequestTime","getTime","PAUSE","requestTime","factor","weightedFactor","ceil","applicationRoot","_applicationRoot","getApplicationRoot","MIGRATION_ACCESS_TOKEN_NAME","MigrationWorkerService","migrationIndexingWorker","_broadcastResponseFlag","_broadcastService","_onBroadcastReceived","_migrationIndexingWorker","_workRunner","_interruptSubscriber","_restoreState","onBrowserTabClosing","preventDefault","returnValue","migrationAccessToken","token","_onInterrupt","_callInterruptSubscriber","getState","swagMigrationAccessToken","processStateResponse","isMigrationAccessTokenValid","accessToken","requestErrorCode","createMigration","returnState","runProgress","validMigrationRunToken","migrationRunning","restoreRunningMigration","indicies","_getIndiciesByEntityName","finishedCount","stopMigration","pauseMigration","takeoverMigration","subscribeInterrupt","callback","unsubscribeInterrupt","processMediaFiles","_startWorkRunner","_migrateFinish","_resetProgress","migrationMessage","oldFlag","_showFinishNotification","_assignThemes","_handleIndexing","dispatch","actions","assignThemes","visited","errorList","isOtherMigrationRunning","showAbortMigrationConfirmDialog","isPausedBeforeAbortDialog","displayFlowChart","flowChartItemIndex","flowChartItemVariant","flowChartInitialItemVariants","isWarningConfirmed","abortMigrationBackText","componentIndexIsResult","abortButtonVisible","backButtonVisible","migrateButtonVisible","isFetching","startButtonVisible","premappingIsNotReady","warningIsNotReady","startButtonDisabled","pauseButtonVisible","pauseButtonDisabled","continueButtonVisible","onProcessMediaFiles","onFinishWithoutErrors","valid","beforeDestroy","beforeDestroyedComponent","shouldStartMigration","otherInstanceMigrating","restoreFlowChart","checkConnection","connectionCheckResponse","resetFlowChart","onInterrupt","onAbortButtonClick","onSaveButtonClick","writePremapping","createNotificationSuccess","onBackButtonClick","onStartButtonClick","onPauseButtonClick","onContinueButtonClick","onCloseAbortMigrationConfirmDialog","onTakeoverMigration","onAbortOtherMigration","abortMigration","onConfiscatedMigration","onStop","onPause","onConnectionLost","loadingScreenTakeover","onWarningConfirmationChanged","confirmed","SSL_REQUIRED_ERROR_CODE","CONNECTION_NAME_ERRORS","NAME_TO_SHORT","NAME_ALREADY_EXISTS","getRoutes","childIsLoading","selectedProfile","childRouteReady","errorMessageSnippet","connectionNameErrorCode","currentErrorCode","migrationGeneralSettingRepository","modalSize","credentialsSuccess","credentialsError","modalTitleSnippet","buttonBackSnippet","buttonBackVisible","profileInformationComponentIsLoaded","buttonSecondarySnippet","buttonSecondaryVisible","buttonPrimarySnippet","introduction","connectionCreate","connectionSelect","buttonPrimaryDisabled","profileInformationComponent","getComponentRegistry","has","credentialsComponent","beforeRouteLeave","to","from","loadSelectedConnection","profileInstallation","trimCredentials","field","trim","onConnect","errors","onResponseError","doConnectionCheck","errorCode","checkForDisabledRoute","onNoConnectionSelected","onButtonBackClick","onButtonSecondaryClick","triggerPrimaryClick","onButtonPrimaryClick","createNewConnection","saveSelectedConnection","selectedConnectionId","connectionResponse","chooseAction","checkConnectionName","newConnection","save","res","setting","onChildRouteReadyChanged","onCredentialsChanged","onProfileSelected","onChangeConnectionName","onChildIsLoadingChanged","onConnectionSelected","pluginIsLoading","pluginIsSaveSuccessful","isInstalled","pluginName","pluginRepository","refreshPlugin","pluginCriteria","setLimit","result","onInstall","setupPlugin","extensionHelperService","downloadStoreExtension","installStoreExtension","activateStoreExtension","cacheApiService","clear","currentConnectionId","connections","find","con","profiles","gateways","connectionNameError","profileHint","getProfiles","pushLinkToProfiles","selectDefaultProfile","profileSearch","searchParams","searchTerm","option","gatewaySearch","getText","onSelectProfile","onSelectGateway","getGateways","componentIsLoaded","override","runExists","loading","run","$super","acl","isAdmin","setConnectionId","setEnvironmentInformation","setRunId","setIsMigrating","setStatusIndex","setCurrentEntityGroupId","newId","setEntityGroups","setEntityProgress","targetGroup","resetProgress","Module","registerModule","MigrationProcessStore","MigrationUIStore","description","targetVersion","emptyScreen","component","path","parentPath","privilege","redirect","children","main","history","detail","dataSelector","processScreen","wizard","settingsItem","iconComponent","ApiService","httpClient","loginService","apiEndpoint","basicConfig","timeout","apiVersion","additionalHeaders","headers","getBasicHeaders","post","handleResponse","getDataSelection","fetchData","additionalParams","writeData","processMedia","indexing","_migrationGeneralSettingRepository","_context","settings","dataSelection","selectedIds","lastIndexer","timestamp","addServiceProvider","MigrationApiService","initContainer","getContainer","container","ProcessStoreInitService","UiStoreInitService","MigrationIndexingApiService","indexingApiService","_indexingApiService","running","lastResult","done","migrationIndexingWorkerService","MigrationIndexingWorker","migrationIndexingApiService"],"sourceRoot":""}